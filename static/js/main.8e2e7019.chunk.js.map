{"version":3,"sources":["components/Nav.js","components/withLayout.js","pages/Home.js","pages/About.js","pages/lectures/Setup.js","pages/lectures/PythonMisc.js","pages/lectures/WeekOne.js","pages/lectures/WeekOneRepaso.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","withLayout","Page","role","target","rel","href","icon","faLinkedin","faGithub","faBook","class","Row","Col","xs","sm","md","Image","src","process","fluid","language","style","docco","useState","showSol1","setLoadingSol1","math","Button","variant","onClick","App","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e2e7019.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav className='navbar navbar-expand-md navbar-dark fixed-top bg-dark'>\n      <span className='navbar-brand'>\n        Bienvenido\n      </span>\n      <button\n        className='navbar-toggler'\n        type='button'\n        data-toggle='collapse'\n        data-target='#navbarCollapse'\n        aria-controls='navbarCollapse'\n        aria-expanded='false'\n        aria-label='Toggle navigation'>\n        <span className='navbar-toggler-icon' />\n      </button>\n      <div className='collapse navbar-collapse' id='navbarCollapse'>\n        <ul className='navbar-nav mr-auto'>\n          <li className='nav-item active'>\n            <Link to=\"/\" className=\"nav-link\">Inicio<span className='sr-only'>(current)</span></Link>\n          </li>\n          <li className='nav-item'>\n          <Link to=\"/about\" className=\"nav-link\">Sobre mí</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from \"react\";\nimport Nav from \"./Nav\";\n\nfunction withLayout(Page) {\n  return () => {\n    return (\n      <>\n        <header>\n          {/* Fixed navbar */}\n          <Nav />\n        </header>\n        {/* Begin page content */}\n        <main role='main' className='flex-shrink-0'>\n          <Page />\n        </main>\n        <br />\n        <footer className='footer mt-auto py-3 bg-dark text-white'>\n          <div className='container'>&copy; Diego Palma 2020</div>\n        </footer>\n      </>\n    );\n  };\n}\n\nexport default withLayout;","import React from \"react\";\nimport withLayout from \"../components/withLayout\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n    return (\n        <div className='container'>\n            <h1 className='mt-5'>Material Complementario Desafío LATAM Data Science</h1>\n            <p className='lead'>\n                Si llegaste a este sitio web, probablemente estés cursando la carrera de Data Science en desafío LATAM (este sitio\n                lo creé para la generación G con fecha <code>11/06/2020</code>). El propósito de este sitio es sólo agregar material\n                complementario, algunas recomendaciones para ayudarte a digerir mejor los contenidos del curso. También pueden pedirme\n                que agregue información en caso de que lo necesiten.\n            </p>\n            <h2>Material Complementario y Miscelaneos</h2>\n            <h3>Semana 1</h3>\n            <ul>\n                <li><Link to=\"/setup\">Configuración e iniciando con la terminal</Link></li>\n                <li><Link to=\"/python_misc\">Cómo escribir buen código Python</Link></li>\n                <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://stackoverflow.com\">\n                    StackOverflow (sitio para buscar información sobre programación preguntas/respuestas, etc)</a></li>\n                <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://hackerrank.com\">\n                    Sitio con ejercicios para practicar python (hay muchos problemas de entrevistas)</a></li>\n                <li><Link to=\"/week1\">Ejercicios complementarios semana 1</Link></li>\n                <li><Link to=\"/week1_repaso\">Ejercicios Repaso Introducción a Python</Link></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default withLayout(Home);","import React from \"react\";\nimport withLayout from \"../components/withLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { faBook } from '@fortawesome/free-solid-svg-icons'\n\nfunction About() {\n    return (\n        <div className='container'>\n            <h1 className='mt-5'>Un poco sobre mí</h1>\n            <p className='lead'>\n                Esta sección es por si tienes la duda <em>¿Y este individuo quién es?</em> Dejo un poco de información sobre mí.\n            </p>\n            <h2 className='mt-5'>Sitios</h2>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n              <a href=\"https://www.linkedin.com/in/dpalmasan/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} /> LinkedIn</a>\n              </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <a href=\"https://github.com/dpalmasan\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} /> Github</a>\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <a href=\"https://trunajod20.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faBook} /> TRUNAJOD (proyecto opensource en python)</a>\n            </div>\n            </div>\n            <h2 className='mt-5'>Experiencia</h2>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>Diciembre 2019 - actualidad</p>\n              </div>\n              <div className=\"col-sm-6\">\n                <p>Ingeniero de Datos en <a href=\"https://evernote.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Evernote</a></p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>Diciembre 2017 - actualidad</p>\n              </div>\n              <div className=\"col-sm-6\">\n                <p>Ingeniero de I+D en Universidad de Concepción.</p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>Junio 2019 - Diciembre 2019</p>\n              </div>\n              <div className=\"col-sm-6\">\n                <p>Científico de datos en Everis</p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>Mayo 2017 - Junio 2019</p>\n              </div>\n              <div className=\"col-sm-6\">\n                <p>Ingeniero de Calidad de Software en <a href=\"https://www.synopsys.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Synopsys</a></p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p> Marzo 2009 - Diciembre 2016</p>\n              </div>\n              <div className=\"col-sm-6\">\n                <p>Alumno ayudante Universidad de Concepción. Para referencias <a href=\"https://www2.udec.cl/~dipalma/\" target=\"_blank\" rel=\"noopener noreferrer\">mi viejo sitio</a></p>\n              </div>\n            </div>\n\n            <h2 className='mt-5'>Publicaciones</h2>\n            <h3 className='mt-5'>Revistas Científicas</h3>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>\n                  <a href=\"https://ieeexplore.ieee.org/abstract/document/8506398\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Palma, D., & Atkinson, J. (2018). Coherence-based automatic essay assessment. IEEE Intelligent Systems, 33(5), 26-36.\n                  </a>\n                </p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div class=\"col-sm-6\">\n                <p>\n                  <a href=\"https://www.researchgate.net/profile/Antonio_Gutierrez_De_Blume/publication/340952008_Improving_Reading_Comprehension_in_Spanish_using_iSTART-E_A_Pilot_Study/links/5ea7117e299bf1125612f51b/Improving-Reading-Comprehension-in-Spanish-using-iSTART-E-A-Pilot-Study.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  McCarthy, K. S., Soto, C., de Blume, A. P. G., Palma, D., González, J., & McNamara, D. Improving Reading Comprehension in Spanish using iSTART-E: A Pilot Study.\n                  </a>\n                </p>\n              </div>\n            </div>\n            <h3 className='mt-5'>Conferencias</h3>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>\n                  <a href=\"https://link.springer.com/chapter/10.1007/978-3-030-25629-6_79\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Palma, D., Soto, C., Veliz, M., Riffo, B., & Gutiérrez, A. (2019, August). A Data-Driven Methodology to Assess Text Complexity Based on Syntactic and Semantic Measurements. In International Conference on Human Interaction and Emerging Technologies (pp. 509-515). Springer, Cham.\n                  </a>\n                </p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>\n                  <a href=\"https://www.spiedigitallibrary.org/conference-proceedings-of-spie/10810/1081005/Fracture-time-predictor-in-mask-data-preparation-using-machine-learning/10.1117/12.2502576.short?SSO=1\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Calderón, D., & Palma, D. (2018, October). Fracture time predictor in mask data preparation using machine learning. In Photomask Technology 2018 (Vol. 10810, p. 1081005). International Society for Optics and Photonics.\n                  </a>\n                </p>\n              </div>\n            </div>\n            <h3 className='mt-5'>Artículos y Opiniones en LinkedIn</h3>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>\n                  <a href=\"https://www.linkedin.com/pulse/inteligencia-artificial-conceptos-b%25C3%25A1sicos-un-poco-de-y-palma-s%25C3%25A1nchez/?trackingId=ofL6W4PmSYSmRUR2zweCKg%3D%3D\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Inteligencia Artificial, Conceptos Básicos\n                  </a>\n                </p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>\n                  <a href=\"https://www.linkedin.com/pulse/construyendo-mi-propia-nube-cloud-y-montando-un-con-palma-s%25C3%25A1nchez/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Construyendo una \"nube\" con Raspberry PIs\n                  </a>\n                </p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>\n                  <a href=\"https://www.linkedin.com/pulse/mi-primera-contribuci%25C3%25B3n-al-mundo-open-source-python-de-palma-s%25C3%25A1nchez/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Contribución al opensource. Pyhton lib para complejidad de textos\n                  </a>\n                </p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <p>\n                  <a href=\"https://www.linkedin.com/pulse/complejidad-de-textos-dirigida-por-los-datos-para-ser-palma-s%25C3%25A1nchez/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Complejidad de textos dirigida por datos\n                  </a>\n                </p>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withLayout(About);","import React from \"react\";\nimport withLayout from \"../../components/withLayout\";\nimport Image from 'react-bootstrap/Image'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nfunction Setup() {\n  return (\n    <div className='container'>\n      <h1 className='mt-5'>Requerimientos para poder trabajar en los módulos</h1>\n      <p className='lead'>\n        En esta sección se definen los requerimientos para poder trabajar de forma óptima dentro del curso.\n                Por otro lado, se dan algunos tips para usuarios de distintos Sistemas Operativos: basados en <code>UNIX (Mac, Linux)</code> o <code>Windows</code>.\n                Si las imágenes se ven muy pequeñas, click derecho en la imágen y abrir en pestaña nueva para verla en tamaño completo.\n            </p>\n      <h2>Uso de terminal</h2>\n\n      <h3 id=\"windows\" className='mt-5'>Usuarios de Windows</h3>\n      <p>\n        Al momento de crear el contenido no conozco a los estudiantes del curso. Tengo el sesgo de asumir que la mayoría será usuario de windows.\n              En general, mi recomendación es que instalen <a href=\"https://www.anaconda.com/products/individual\" target=\"_blank\" rel=\"noopener noreferrer\">Anaconda</a> y\n              así se evitan varios dolores de cabeza. En simples razones, muchas dependencias de paquetes de <code>python</code> que utilizarán son\n              dependientes del Sistema Operativo y si no tienen experiencia compilando libs a windows, mejor bajar anaconda que viene con un entorno\n              resuelto. También recomiendo instalar Anaconda con <code>Python 3</code>, ya que la versión 2 fue deprecada este año (no tiene más soporte).\n\n              Teniendo anaconda instalado, yendo a inicio (o presionando tecla <code>win</code>), buscamos <code>Anaconda</code> y abrimos <code>Anaconda prompt</code> esto\n              abrirá una terminal:\n            </p>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/windows1.png'} fluid />\n        </Col>\n      </Row>\n      <p>\n        La terminal estará ya con el entorno de <code>Anaconda</code> configurado y en general estarán en su directorio <code>home</code>, que sería:\n              <code>C:\\Users\\&lt;TU_USUARIO&gt;</code>, esto lo pueden ver de la terminal, o comprobarlo con el comando <code>cd</code> (Notar, si ud\n              es usuario de terminal en <code>UNIX</code>, el comando <code>cd</code> en una <code>shell</code> de Windows es diferente, hacer <code>cd</code> en\n              Windows sin argumentos, es equivalente a <code>pwd</code> en <code>UNIX</code>):\n            </p>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/windows2.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>\n        Como ejemplo creemos un directorio llamado <code>test</code> en terminal. Para ello, ejecutamos el comando <code>mkdir test</code>, luego\n              podemos verificar que el directorio fue creado, con el comando <code>dir</code>. Para ir al directorio, podemos hacer <code>cd test</code>:\n            </p>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/windows3.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>\n        Creemos un pequeño código <code>Python</code> y ejecutémoslo por terminal. Para ello hagamos <code>echo print('Hello world!') &gt; hello.py</code>, luego <code>python hello.py</code>,\n              deberiamos ver lo siguiente:\n            </p>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/windows5.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>Los directorios <code>.</code> y <code></code> son especiales. El primero es el directorio actual, mientras que <code>..</code> es\n            el directorio padre.</p>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/windows4.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>\n        Para efectos del curso, sólo será necesario aprender lo básico de utilizar una terminal. Por ejemplo, crear directorios,\n        cambiar directorio, listar directorios. Para más información respecto a comandos disponibles, pueden\n              <a href=\"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands\" target=\"_blank\" rel=\"noopener noreferrer\"> revisar la documentación</a>\n      </p>\n\n      <p>\n        Si queremos usar el entorno de conda en visual studio code, básicamente es <code>ctrl + shift + p</code>, buscar <code>python interpreter</code>\n              Y elegir el entorno de anaconda, como se muestra en la imágen abajo. Para abrir una terminal en visual studio code, pueden ir al menú\n              terminal y abrir una nueva, o hacer <code>ctrl + shift + ñ</code>.\n            </p>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/windows6.png'} fluid />\n        </Col>\n      </Row>\n\n      <h3 id=\"unix\" className='mt-5'>Usuarios Linux y Mac</h3>\n      <p>\n        Yo en mi equipo personal utilizo Windows con <a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\" target=\"_blank\" rel=\"noopener noreferrer\">WSL</a>\n              (Windows Subsystem for Linux), es básicamente tener alguna distribución Linux en windows. De hecho, <code>VSCode</code> tiene una integración\n              con WSL y es bastante útil para propósitos de desarrollo. Con esto quiero decir, si alguien tiene <code>WSL</code>, los pasos son equivalentes\n              que en el caso de Linux.\n            </p>\n\n      <p>\n        Otro punto importante es tener un administrador de paquetes; este paso no es fundamental pero tenganlo en cuenta. En general las distribuciones de Linux vienen con administradores\n              de paquetes (por ejemplo en Linux basados en Debian tienen el comando <code>apt-get</code> para instalar librerías, etc, de distintos\n              repositorios.). En Mac, tengo entendido que las versiones más recientes del sistema operativo vienen ya con un administrador de paquetes,\n              en caso contrario, recomiendo instalar <a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">brew</a>. Finalmente, recomiendo\n              a usuarios de Mac, que instalen una terminal decente, la que viene por defecto no es muy buena. Yo he usado\n              <a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"noopener noreferrer\">iTerm2</a> y lo he encontrado bastante bueno.\n            </p>\n\n      <p>Para abrir la terminal en <code>Mac</code>, pueden hacer la combinación <code>cmd + espacio</code> y escribe terminal. Abrir la terminal.\n            Deberían estar en el directorio <code>HOME</code> que un atajo en UNIX es <code>&tilde;</code>. Chequear que tenemos <code>python</code> en\n            el entorno y ver la versión: <code>python --version</code> si les sale versión 2, probar con <code>python3 --version</code>:\n            </p>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/unix1.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>En general las distribuciones de Mac y Linux vienen con python instalado. Creemos un directorio llamado test, vamos a dicho directorio,\n      creemos un pequeño script en python, listemos el directorio y ejecutemos el script por terminal:\n            </p>\n      <ol>\n        <li><code>mkdir test</code></li>\n        <li><code>cd test</code></li>\n        <li><code>echo 'print(\"Hello world!\")' &gt; hello.py</code></li>\n        <li><code>ls</code></li>\n        <li><code>python hello.py</code></li>\n      </ol>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/unix2.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>Para más información, revisar documentación, para ello buscar en internet <code>man pages</code>. Por ejemplo\n            el sitio de <a href=\"https://manpages.ubuntu.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Ubuntu</a>.</p>\n\n      <h2 className='mt-5' id=\"ides\">IDE recomendado (<em>Interactive Development Environment</em>)</h2>\n      <p>\n        No entraré en detalle, pero básicamente el editor de texto recomendado. Aquí no hay receta para todo, yo en lo personal\n              he probado <code>nano</code>, <code>emacs</code>, <code>VIM</code>, <code>sublime</code>, <code>Atom</code>, <code>Visual Studio Code (VSCode)</code>.\n              El que recomiendo definitivamente es <code>VSCode</code>. <code>Atom</code> es demasiado lento (o lo era cuando lo utilicé),\n              editores de texto bajo terminal como <code>nano</code>, <code>emacs</code> o <code>VIM</code> tienen una rampa de aprendizaje\n              un poco inclinada (no es para el usuario sin experiencia trabajando bajo terminal), yo en realidad los recomendaría en casos particulares\n              (e.g Trabajando en un clúster remoto, configurando inicialmente un server, se tiene RAM limitada, etc.) Sin embargo, siéntanse libres\n              de utilizar lo que más les acomode. La página oficial de <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener noreferrer\">VSCode</a>.\n            </p>\n    </div>\n  )\n}\n\nexport default withLayout(Setup);","import React from \"react\";\nimport withLayout from \"../../components/withLayout\";\nimport Image from 'react-bootstrap/Image'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\nfunction PythonMisc() {\n  return (\n    <div className='container'>\n      <h1 className='mt-5'>¿Sobre qué es este apartado?</h1>\n      <p className='lead'>\n        En este apartado no defino nada en relación a características de Python, si no que a buenas prácticas en el\n        estilo de código. Hay muchas formas de escribir código en Python y en general en cualquier lenguaje de programación.\n        Sin embargo, en general es bueno seguir ciertas convenciones, de manera que todos los integrantes de un equipo sean\n        consistentes en el estilo de programar y el código sea homogéneo, lo que aumenta la \"mantenibilidad\" del código, y como\n        consecuencia, se tiene código de calidad, robusto, profesional y no una solución de juguete.\n            </p>\n      <h2>Ejemplo de código sin estándar ni buenas convenciones</h2>\n\n      <p>Para las demostraciones vamos a utilizar el siguiente bloque (<em>snippet</em>) de código:</p>\n      <SyntaxHighlighter language=\"python\" style={docco}>\n        {\n          \"from sys import *\\n\"\n          + \"def CalcularIMC(peso,estatura):\\n\"\n          + \"    return peso/(estatura**2)\\n\"\n          + \"\\n\"\n          + \"nombre=argv[1]\\n\"\n          + \"\\n\"\n          + \"print(\\\"Bienvenido {}\\\".format(nombre))\\n\"\n          + \"peso=float(input(\\\"Ingrese su peso: \\\"))\\n\"\n          + \"estatura=float(input(\\\"Ingrese su estatura: \\\"))\\n\"\n          + \"\\n\"\n          + \"print(\\\"Su IMC es: {}\\\".format(CalcularIMC(peso,estatura)))\\n\"\n        }\n      </SyntaxHighlighter>\n\n\n      <h3 id=\"windows\" className='mt-5'>¿Por qué el código es malo?</h3>\n      <p>El código funciona pero no tiene calidad alguna. Lo que se debe recordar en programación es lo siguiente:\n            <em>\"Que funcione no significa que esté correcto\"</em>. En particular, el fragmento de código anterior no sigue\n            el estándar <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.python.org/dev/peps/pep-0008/\">PEP8</a>. En mi\n            experiencia, utilizar este estándar me ha aliviado bastantes dolores de cabeza. Sin embargo, el estándar es gigante y leerlo\n            y tenerlo en cuenta cada vez que escribimos código es una tarea poco factible. Por ello, se han desarrollado herramientas\n            para ayudar a mejorar la calidad del código, en cuanto a estilo.</p>\n\n      <h4>Flake 8</h4>\n      <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://flake8.pycqa.org/en/latest/\">Flake 8</a> está construido bajo\n            <code>PyFlakes</code>, <code>pycodestyle</code> y <code>Ned Batchelder’s McCabe script</code>, que son básicamente herramientas\n            que implementan chequeos de estilo de código, dado un código python. Para instalar <code>flake8</code> pueden hacerlo con el\n            siguiente comando <code>pip install flake8</code>. Consideremos que el código mencionado antes se llama <code>example.py</code>,\n            entonces, para chequear el estilo de código, podemos ejecutar <code>flake8 example.py</code>, obtendremos lo siguiente:</p>\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \"> flake8 example.py\\n\"\n          + \"example.py:1:1: F403 'from sys import *' used; unable to detect undefined names\\n\"\n          + \"example.py:2:1: E302 expected 2 blank lines, found 0\\n\"\n          + \"example.py:2:21: E231 missing whitespace after ','\\n\"\n          + \"example.py:5:1: E305 expected 2 blank lines after class or function definition, found 1\\n\"\n          + \"example.py:5:7: E225 missing whitespace around operator\\n\"\n          + \"example.py:5:8: F405 'argv' may be undefined, or defined from star imports: sys\\n\"\n          + \"example.py:8:5: E225 missing whitespace around operator\\n\"\n          + \"example.py:9:9: E225 missing whitespace around operator\\n\"\n          + \"example.py:11:46: E231 missing whitespace after ','\\n\"\n          + \"example.py:11:58: W292 no newline at end of file\"\n        }\n      </SyntaxHighlighter>\n\n      <p>Lo que nos está diciendo <code>flake8</code> es que el código tiene muchos errores que no cumplen los estándares, además\n            hace referencia al estándar (ejemplo: F403, E302, etc.) y nos dice las líneas que están en conflicto como guía para corregirlo.</p>\n\n      <h4>Black Python Formatter</h4>\n\n      <p>Otra debilidad que tiene el código anterior es cómo está formateado. No respeta tampoco estándares en cuanto a saltos\n      de línea, espacios, etc. Un paquete muy utilizado (profesionalmente y en proyectos de código abierto)\n      es <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/psf/black\">black</a>. Para instalar black, simplemente\n            ejecutar <code>pip install black</code>. Por ejemplo, pueden usarlo para re-formatear el código\n            anterior: <code>black example.py</code></p>\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \">black example.py\\n\"\n          + \"reformatted example.py\\n\"\n          + \"All done! ✨ �🍰✨✨\\n\"\n          + \"1 file reformatted.\"\n        }\n      </SyntaxHighlighter>\n\n      <p>El código será reformateado y quedará así:</p>\n      <SyntaxHighlighter language=\"python\" style={docco}>\n        {\n          \"from sys import *\\n\"\n          + \"\\n\"\n          + \"\\n\"\n          + \"def CalcularIMC(peso, estatura):\\n\"\n          + \"    return peso / (estatura ** 2)\\n\"\n          + \"\\n\"\n          + \"\\n\"\n          + \"nombre = argv[1]\\n\"\n          + \"\\n\"\n          + \"print(\\\"Bienvenido {}\\\".format(nombre))\\n\"\n          + \"peso = float(input(\\\"Ingrese su peso: \\\"))\\n\"\n          + \"estatura = float(input(\\\"Ingrese su estatura: \\\"))\\n\"\n          + \"\\n\"\n          + \"print(\\\"Su IMC es: {}\\\".format(CalcularIMC(peso, estatura)))\"\n        }\n      </SyntaxHighlighter>\n\n      <p>Se observa que ahora existe un espacio entre operadores (asignación, operaciones matemáticas), lo que\n            sigue las convenciones a la hora de escribir código con python. Queda mucho más legible que la versión anterior.</p>\n\n      <h4>Pydocstyle</h4>\n\n      <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pypi.org/project/pydocstyle/\">Pydocstyle</a> es una herramienta para chequear el estilo de\n            los <code>docstrings</code> (documentación) de las funciones y clases. Para instalar\n            ejecutar <code>pip install pydocstyle</code>, abajo se muestra el resultado de correr <code>pydocstyle</code> en el código\n            de ejemplo:</p>\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \">pydocstyle example.py\\n\"\n          + \"example.py:1 at module level:\\n\"\n          + \"        D100: Missing docstring in public module\\n\"\n          + \"example.py:4 in public function `CalcularIMC`:\\n\"\n          + \"        D103: Missing docstring in public function\"\n        }\n      </SyntaxHighlighter>\n\n      <p>Lo que nos está diciendo <code>pydocstyle</code> es que faltan los <code>docstrings</code> del módulo y\n            de la función definida.</p>\n\n      <h3>Integrando los chequeos con Visual Studio Code</h3>\n      <p>Como podrán notar, es un poco tedioso correr los chequeos cada vez que se modifica el código, por ello\n            usamos un IDE, para agilizar el trabajo. <code>VSCode</code> cuenta con integraciones y plugins para incoporar\n            el uso de estas herramientas automáticamente.</p>\n\n      <p>Para configurar <code>VSCode</code> con <code>flake8</code>, en Windows/Linux hacen <code>ctrl + shift + P</code> (en MAC\n            sería <code>cmd + shift + P</code>), escogen select linter, y eligen flake8. En caso de que algo no funcione, las instrucciones\n            completas en <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://code.visualstudio.com/docs/python/linting\">este enlace</a>. Si\n            hicieron todo correctamente, ahora los mensajes de <code>flake8</code> deberían poder verlos desde el editor:</p>\n\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/linter.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>Para agregar <code>black</code> a <code>VSCode</code> code, pueden seguir\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.com/@marcobelo/setting-up-python-black-on-visual-studio-code-5318eba4cd00\">estas instrucciones</a></p>\n\n      <p>Para documentar funciones en <code>python</code> existen varios formatos. Yo personalmente he utilizado\n      <code>restructuredText</code> y encuentro que queda bastante bien. Por ejemplo pueden mirar\n      el <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.python.org/dev/peps/pep-0287/\">PEP 287</a>. Para configurar\n      <code>restructuredText</code> en <code>VSCode</code>, pueden instalar el\n      plugin <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring\">Python Docstring Generator</a> y\n      configurarlo eligiendo formato <code>sphinx</code>.</p>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/docstring.png'} fluid />\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/docstring2.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>Finalmente se les generará automáticamente el docstring cuando escriban <code>\"\"\" + enter</code> bajo la función. El código finalmente\n      quedará así:</p>\n\n      <SyntaxHighlighter language=\"python\" style={docco}>\n        {\n          \"\\\"\\\"\\\"Ejemplo para la el curso.\\\"\\\"\\\"\\n\"\n          + \"\\n\"\n          + \"from sys import argv\\n\"\n          + \"\\n\"\n          + \"\\n\"\n          + \"def calcular_imc(peso, estatura):\\n\"\n          + \"    \\\"\\\"\\\"Compute IMC.\\n\"\n          + \"\\n\"\n          + \"    :param peso: Peso de la persona\\n\"\n          + \"    :type peso: float\\n\"\n          + \"    :param estatura: estatura de la persona\\n\"\n          + \"    :type estatura: float\\n\"\n          + \"    :return: IMC de la persona\\n\"\n          + \"    :rtype: float\\n\"\n          + \"    \\\"\\\"\\\"\\n\"\n          + \"    return peso / (estatura ** 2)\\n\"\n          + \"\\n\"\n          + \"\\n\"\n          + \"nombre = argv[1]\\n\"\n          + \"\\n\"\n          + \"print(\\\"Bienvenido {}\\\".format(nombre))\\n\"\n          + \"peso = float(input(\\\"Ingrese su peso: \\\"))\\n\"\n          + \"estatura = float(input(\\\"Ingrese su estatura: \\\"))\\n\"\n          + \"\\n\"\n          + \"print(\\\"Su IMC es: {}\\\".format(calcular_imc(peso, estatura)))\\n\"\n        }\n      </SyntaxHighlighter>\n\n      <ul>\n        <li>Cambié el nombre de la función por minúsculas, porque es una función. Por convención, en general sólo las clases\n        se escriben con mayúsculas (en general).</li>\n        <li>Se agregó docstring con formato <code>sphinx</code> a la función <code>calcular_imc</code></li>\n        <li>Se corrigieron los errores que arrojaba <code>flake8</code> y se reformateó el código con <code>black</code> para hacerlo más legible.</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default withLayout(PythonMisc);","import React from \"react\";\nimport { useState } from 'react';\nimport withLayout from \"../../components/withLayout\";\nimport MathJax from 'react-mathjax-preview';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport Button from 'react-bootstrap/Button';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Link } from \"react-router-dom\";\n\n\nfunction WeekOne() {\n\n  const [showSol1, setLoadingSol1] = useState(false);\n\n\n  const handleClickSol1 = () => setLoadingSol1(!showSol1);\n\n  return (\n    <div className='container'>\n      <h1 className='mt-5'>Semana 1</h1>\n      <p className='lead'>\n        Para aprovechar el tiempo de sobra de la semana 1, se dejan ejercicios para que puedan practicar lo\n        aprendido en las sesiones no presenciales (fuera de clases). Por otro lado, también dejaré una explicación de conceptos\n        básicos, para que logren aclarar su entendimiento respecto a programación en general.\n            </p>\n\n      <h2>¿Qué es un programa?</h2>\n      <p>Definir qué es un <b>programa</b> se puede hacer de múltiples formas dependiendo del grado de detalle que uno quiera considerar.\n      Sin embargo, la intuición que debe entenderse por program es: <em>Un programa es un conjunto de instrucciones de máquina para llevar a cabo una\n      tarea definida.</em>. Probablemente, en su uso cotidiano de computadores, han utilizado diversos programas (ej. Microsoft Word, Google Chrome, etc.).\n      Sin embargo, todos estos programas tienen una <em>interfaz de usuario</em> lo que nos aleja un poco de lo que veremos a lo largo del curso. Para\n      tener una intuición más acercada a los programas que desarrollaremos en el curso, tomemos como ejemplo el programa <code>ping</code>. El\n      programa <code>ping</code> en términos simples envía secuencias de bytes a un sitio definido y mide el tiempo de promedio de respuesta del sitio.\n      En <code>Windows</code> por ejemplo pueden hacer, en la terminal pueden hacer:</p>\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \">ping www.google.com\\n\"\n          + \"\\n\"\n          + \"Haciendo ping a www.google.com [172.217.192.105] con 32 bytes de datos:\\n\"\n          + \"Respuesta desde 172.217.192.105: bytes=32 tiempo=41ms TTL=107\\n\"\n          + \"Respuesta desde 172.217.192.105: bytes=32 tiempo=18ms TTL=107\\n\"\n          + \"Respuesta desde 172.217.192.105: bytes=32 tiempo=35ms TTL=107\\n\"\n          + \"Respuesta desde 172.217.192.105: bytes=32 tiempo=21ms TTL=107\\n\"\n          + \"\\n\"\n          + \"Estadísticas de ping para 172.217.192.105:\\n\"\n          + \"    Paquetes: enviados = 4, recibidos = 4, perdidos = 0\\n\"\n          + \"    (0% perdidos),\\n\"\n          + \"Tiempos aproximados de ida y vuelta en milisegundos:\\n\"\n          + \"    Mínimo = 18ms, Máximo = 41ms, Media = 28ms\"\n        }\n      </SyntaxHighlighter>\n\n      En <code>UNIX (MacOS, Linux)</code> también existe el programa <code>ping</code>, pero este se ejecuta indefinidamente hasta que\n      el usuario lo interrumpa (con <code>Ctrl + C</code>):\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \"ping www.google.com\\n\"\n          + \"PING www.google.com (64.233.190.103) 56(84) bytes of data.\\n\"\n          + \"64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=1 ttl=107 time=39.8 ms\\n\"\n          + \"64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=2 ttl=107 time=17.6 ms\\n\"\n          + \"64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=3 ttl=107 time=28.0 ms\\n\"\n          + \"64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=4 ttl=107 time=31.0 ms\\n\"\n          + \"^C\\n\"\n          + \"--- www.google.com ping statistics ---\\n\"\n          + \"4 packets transmitted, 4 received, 0% packet loss, time 3002ms\\n\"\n          + \"rtt min/avg/max/mdev = 17.614/29.132/39.880/7.957 ms\"\n        }\n      </SyntaxHighlighter>\n\n      <p>Como podrán imaginarse, los programas en general tienen múltiples funcionalidades, incluso los programas más simples. Supongamos\n      que el promedio de 4 paquetes enviados por ping no me da un número representativo para la latencia en milisegundos que observo al usar\n      internet. La pregunta es ¿viene el programa <code>ping</code> dotado de la capacidad de controlar la cantidad de bytes enviados\n      para calcular la latencia en milisegundos? Aquí es donde entran los <b>argumentos de línea de comandos</b>, que son básicamente\n      \"palancas\" que nos permiten modificar o ajustar el comportamiento de nuestro programa. Volvamos a correr el programa pero considerando el\n      envío de 10 paquetes de bytes. En <code>Windows</code>:</p>\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \">ping /n 10 www.google.com\\n\"\n          + \"\\n\"\n          + \"Haciendo ping a www.google.com [64.233.190.104] con 32 bytes de datos:\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=130ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=39ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=198ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=21ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=30ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=16ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=31ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=13ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=68ms TTL=107\\n\"\n          + \"Respuesta desde 64.233.190.104: bytes=32 tiempo=15ms TTL=107\\n\"\n          + \"\\n\"\n          + \"Estadísticas de ping para 64.233.190.104:\\n\"\n          + \"    Paquetes: enviados = 10, recibidos = 10, perdidos = 0\\n\"\n          + \"    (0% perdidos),\\n\"\n          + \"Tiempos aproximados de ida y vuelta en milisegundos:\\n\"\n          + \"    Mínimo = 13ms, Máximo = 198ms, Media = 56ms\"\n        }\n      </SyntaxHighlighter>\n\n      En <code>UNIX (MacOS, Linux):</code>\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \"> ping -c 10 www.google.com\\n\"\n          + \"PING www.google.com (64.233.190.105) 56(84) bytes of data.\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=1 ttl=107 time=33.5 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=2 ttl=107 time=19.3 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=3 ttl=107 time=273 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=4 ttl=107 time=83.4 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=5 ttl=107 time=34.9 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=6 ttl=107 time=23.6 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=7 ttl=107 time=31.2 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=8 ttl=107 time=99.6 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=9 ttl=107 time=19.8 ms\\n\"\n          + \"64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=10 ttl=107 time=39.8 ms\\n\"\n          + \"\\n\"\n          + \"--- www.google.com ping statistics ---\\n\"\n          + \"10 packets transmitted, 10 received, 0% packet loss, time 9008ms\\n\"\n          + \"rtt min/avg/max/mdev = 19.301/65.915/273.775/73.904 ms\"\n        }\n      </SyntaxHighlighter>\n\n      <p>Cambiamos el comportamiento del programa, diciéndole que en lugar de enviar paquetes de bytes con las opciones por defecto\n      enviara <code>10</code> paquetes de bytes. Notar también que el sitio al que queremos hacer <code>ping</code> también es un\n      argumento para el programa, y en los ejemplos usamos <code>www.google.com</code>. <b>¿Podremos hacer algo similar en <code>Python</code>?</b> Aquí\n      es done entra el módulo <code>sys</code> y en particular <code>argv</code>. Consideremos el siguiente programa de ejemplo\n      llamado <code>ejemplo_argv.py</code>:</p>\n\n      <SyntaxHighlighter language=\"python\" style={docco}>\n        {\n          \"import sys\\n\"\n          + \"\\n\"\n          + \"\\n\"\n          + \"print(sys.argv)\\n\"\n\n        }\n      </SyntaxHighlighter>\n\n      <p>Utilizando python para ejecutar el programa, por ejemplo <code>python ejemplo_argv.py</code>, va a mostrar en la termina el siguiente\n      texto: <code>['ejemplo_argv.py']</code>. Prueben correr el programa con distintos argumentos, por\n      ejemplo: <code>python ejemplo_argv.py hola esto es un ejemplo de argumentos al programa</code>, esto mostrará en la terminal lo siguiente:\n      <code>['ejemplo_argv.py', 'hola', 'esto', 'es', 'un', 'ejemplo', 'de', 'argumentos', 'al', 'programa']</code>. Básicamente <code>argv</code> es\n      una <em>lista de cadenas de texto</em> (<code>string</code>), <b>donde el primer elemento es el nombre del archivo que contiene el código</b> (programa).\n      Esto lo <b>deberán entender mejor cuando vean sus sesiones online</b> de la semana de\n      Introducción a Python. ¿Cómo utilizar los argumentos? Para acceder a los elementos de la lista, se utiliza lo que se conoce como indexación.\n      En <code>python</code> en particular, los índices comienzan del 0. Por lo que, si quisieran acceder al primer elemento de dicha lista, se hace\n      mediante <code>sys.argv[0]</code>. La sintaxis <code>lista[i]</code> es acceder al elemento <code>i</code>-ésimo de la <code>lista</code>. Finalmente\n      se deja un ejemplo de programa que saluda al usuario dado un nombre:</p>.\n\n      <SyntaxHighlighter language=\"python\" style={docco}>\n        {\n          \"import sys\\n\"\n          + \"\\n\"\n          + \"\\n\"\n          + \"nombre = sys.argv[1]\\n\"\n          + \"print(f\\\"Hola {nombre}!\\\")\\n\"\n\n        }\n      </SyntaxHighlighter>\n\n      <p>Si nombramos el archivo como <code>ejemplo_argv.py</code> y lo ejecutamos vía <code>python ejemplo_argv.py Diego</code>, el programa mostará\n      lo siguiente: <code>Hola Diego!</code>.</p>\n\n      <h2>Ejercicios</h2>\n      <h3>Ejercicio 1</h3>\n\n      <p>Escriba un programa que lea un entero positivo <code>n</code>, ingresado por usuario y e imprima la suma de\n      los números desde <code>1</code> a <code>n</code>. Para calcular la sumatoria <code>1 + 2 + 3 + ... n</code> puede\n      utilizar la siguiente fórmula:</p>\n\n      <MathJax math={`$$Suma = \\\\frac{n\\\\left(n + 1\\\\right)}{2}$$`} />\n\n      <p>Escriba dos versiones del programa, una que lea la entrada con la función <code>input</code> y otra que sea por <code>argv</code>.</p>\n\n      <h3>Ejercicio 2</h3>\n      <p>Mucha gente en otros países mide su estatura utilizando pies y pulgadas, en Chile utilizamos los metros como unidad. Escriba un programa\n      que lea una medición en pies y número de pulgadas, ambos entregados por el usuario. El programa debe transformar la medición a\n      centímetros. <b>Pista:</b> Un pie son 12 pulgadas. Una pulgada son 2.54 cm.</p>\n\n      <h3>Ejercicio 3</h3>\n      <p>Escriba un programa que reciba como entradas <code>3</code> enteros. El programa debe imprimir en pantalla los 3 enteros ordenados\n      en forma creciente. <b>Pista</b>: Puede encontrar el mínimo valor usando la función <code>min</code> y el máximo usando <code>max</code>. ¿Cómo\n      podría encontrar el valor faltante?</p>\n\n      <h2>Soluciones</h2>\n      <>\n        <Button variant=\"primary\" onClick={handleClickSol1}>\n          {(showSol1) ? \"Ocultar solución Ejercicio 1\" : \"Mostrar Solución Ejercicio 1\"}\n        </Button>\n        {\n          showSol1 &&\n          <div>\n            <p>Si usamos <code>input</code>, se debe recordar que <code>Python</code> guardará la entrada por teclado como variable de\n            tipo <code>string</code> (cadena de texto). Por lo tanto, se deberá transformar a <code>int</code>. Por ahora, asumiremos que\n            el usuario ingresará un número entero. Luego, se puede caclular la suma, utilizando la fórmula y usamos la función <code>print</code> para\n            mostrar el resultado.</p>\n\n            <p>Si su código se ve como sigue: </p>\n            <SyntaxHighlighter language=\"python\" style={docco}>\n              {\n                \"n=int(input(\\\"Ingrese valor de n: \\\"))\\n\"\n                + \"suma=n*(n+1)/2\\n\"\n                + \"print(f\\\"El valor para n = {n} es {suma}\\\")\"\n              }\n            </SyntaxHighlighter>\n\n            <p>Ruego encarecidamente que vean \"<Link to=\"python_misc\">Escribir buen código en python</Link>\". Idealmente quieren correr el\n            formateador de código <code>black</code> y el chequeador de estándar <code>PEP8</code> <code>flake8</code>. Finalmente, el código\n            se vería como sigue:</p>\n\n            <SyntaxHighlighter language=\"python\" style={docco}>\n              {\n                \"n = int(input(\\\"Ingrese valor de n: \\\"))\\n\"\n                + \"suma = n * (n + 1) / 2\\n\"\n                + \"print(f\\\"El valor para n = {n} es {suma}\\\")\"\n\n              }\n            </SyntaxHighlighter>\n\n            <p>De esta forma, el código será más legible para mí, para ustedes, e irá acorde con estándares de código.</p>\n          </div>\n        }\n      </>\n    </div>\n  )\n}\n\nexport default withLayout(WeekOne);","import React from \"react\";\nimport { useState } from 'react';\nimport withLayout from \"../../components/withLayout\";\nimport MathJax from 'react-mathjax-preview';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport Button from 'react-bootstrap/Button';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Link } from \"react-router-dom\";\nimport Image from 'react-bootstrap/Image'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nfunction WeekOneRepaso() {\n\n  const [showSol1, setLoadingSol1] = useState(false);\n\n\n  const handleClickSol1 = () => setLoadingSol1(!showSol1);\n\n  return (\n    <div className='container'>\n      <h1 className='mt-5'>Introducción a Python: Ejercicios Repaso</h1>\n      <p className='lead'>\n        Con la finalidad de que todos estén entendiendo la materia y que nadie se \"pierda\" en el camino, se deja un conjunto de ejercicios\n        de repaso. La idea es que \"suelten la mano\" y vayan acostumbrándose a escribir código y a las características del lenguaje de\n        programación <code>python</code>.\n            </p>\n\n      <h2>Ejercicios</h2>\n      <h3>Ejercicio 1</h3>\n\n      <p>Supongamos que has abierto una nueva cuenta de ahorro que te da una ganancia de 4 % de interés anual. Los intereses ganados\n      se pagan al final de cada año y se agregan al balance de la cuenta de ahorro. Escribe un progama que lea la cantidad de dinero\n      depositada en la cuenta inicialmente. El programa debe calcular y mostrar el balance de la cuenta de ahorros luego de 1, 2 y 3\n      años. Mostrar cada cantidad redondeada al segundo decimal (puede buscar la función <code>round</code>).</p>\n\n      <h3>Ejercicio 2</h3>\n      <p>La ley de los gases ideales es una aproximación matemática del comportamiento de los gases cuando la presión, volumen y temperatura\n      cambian. Normalmente se escribe como:</p>\n\n      <MathJax math={`$$PV = nRT$$`} />\n\n      <p>\n        <MathJax math={\n          `Donde $P$ es la presión en Pascales, $V$ es el volumen en litros, $n$  es\n        la cantidad de sustancia en moles, $R$ es la constante de los gases ideales, igual\n        a $8.314 \\\\frac{J}{molK}$, y $T$ es la temperatura en Kelvin.`} />\n      </p>\n\n      <p>Escriba un programa que calcule la cantidad de gas en moles dadas la presión, el volumen y la temperatura.</p>\n\n      <h3>Ejercicio 3</h3>\n      <p>Escriba un programa calcule el índice de masa corporal (IMC) de una persona, este puede ser calculado como:</p>\n\n      <MathJax math={`$$IMC = \\\\frac{Peso}{altura^2}$$`} />\n\n      El programa debe recibir el peso (kg) y la estatura (m) de la persona.\n\n      <h3>Ejercicio 4</h3>\n      <p>Escriba un programa que dada una temperatura en grados Celsius, muestre la temperatura en grandos Farenheit y en Kelvin. Las\n      fórmulas de transformación las puede encontrar en internet. Para probar su programa, puede tomar como ejemplo, que 25 grados\n      celsius son aproximadamente 77 Farenheit y 298 K. </p>\n\n      <h3>Ejercicio 5</h3>\n      <p>Escriba un programa que lea un entero de 4 dígitos y muestre la suma de los dígitos del número. Por ejemplo, si el usuario\n      ingresa 3141, entonces el programa debiese mostrar <code>3 + 1 + 4 + 1 = 9</code>. Por ahora asuma que siempre serán 4 dígitos. Queda\n      como pregunta ¿Cómo podría generalizar para cualquier cantidad de dígitos?</p>\n\n      <h3>Ejercicio 6</h3>\n      <p>Escriba un programa que lea un entero. El programa deberá mostrar si el número ingresado es par o impar.</p>\n\n      <h3>Ejercicio 7</h3>\n      <p>Escriba un programa que dado el nombre de un mes, imprima en pantalla la cantidad de días de dicho mes. En caso de que el mes\n      sea febrero, su programa deberá imprimir <code>28 o 29 días</code>.</p>\n\n      <h3>Ejercicio 8</h3>\n      <p>Los triángulos se clasifican en base al largo de sus lados como equilátero, isósceles o escaleno. En un triángulo equilátero\n      los 3 lados tienen la misma longitud. En un triángulo isósceles, 2 lados tienen la misma longitud y el otro lado tiene una longitud\n      diferente. En un triángulo escaleno todos los lados son de distinta longitud. Escriba un programa que dados los largos de los lados\n      de un triángulo, diga si es equilátero, isósceles o escaleno. Su programa debe también chequear si el triángulo es válido (puede aplicar\n      la desigualdad triángular para chequear esto).</p>\n\n      <h3>Ejercicio 9</h3>\n      <p>Las posiciones en un tablero de ajedrez se identifican con una letra y un número. La letra representa la columna, y el número la fila\n      tal y como se muestra en la siguiente figura:</p>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} sm={12} md={12}>\n          <Image src={process.env.PUBLIC_URL + '/imgs/tablero.png'} fluid />\n        </Col>\n      </Row>\n\n      <p>Escriba un programa que lea la posición de una casilla de un tablero de ajedrez y determine si es blanca o negra. Para simplificar el problema,\n      se asumirá que el usuario ingresará una casilla válida, por lo que, no es necesario hacer chequear si la entrada es correcta o no.</p>\n\n      <h3>Ejercicio 10</h3>\n\n      <p>La ruleta es un juego típico de casino. Consiste en una rueda de 38 espacios. De estos espacios, 18 son negros, 18 rojos y\n      dos son verdes. Los espacios verdes estan etiquetados como 0 y 00. Los espacios rojos tienen los siguentes números: 1, 3, 5, 7, 9,\n      12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34 y 36. El resto de los enteros entre 1 y 36 se usan para los espacios negros.</p>\n\n      <p>Se pueden realizar diferentes apuestas. Para propósitos del ejercicios, consideraremos el siguiente subconjunto de apuestas:</p>\n\n      <ul>\n        <li>Número (1 a 36, 0 o 00)</li>\n        <li>Rojo vs Negro</li>\n        <li>Par vs Impar (en este caso 0 y 00 no produce ganancia si se apostó par)</li>\n        <li>1 a 18 vs 19 a 36</li>\n      </ul>\n\n      <p>\n        Escriba un programa que simule el giro de una ruleta. Muestre el espacio que fue escoglido y todas las apuestas ganadoras. Por ejemplo,\n        si 13 es elegido, su programa debe mostrar:\n      </p>\n\n      <SyntaxHighlighter language=\"shell\" style={docco}>\n        {\n          \"El giro de la ruleta terminó en 13\\n\"\n          + \"Pagar al 13\\n\"\n          + \"Pagar a color negro\\n\"\n          + \"Pagar a apuesta impar\\n\"\n          + \"Pagar a apuestas 1 a 18\\n\"\n\n        }\n      </SyntaxHighlighter>\n\n      <p>Si la simulación termina en 0 o 00, el programa debe mostrar <code>Pagar a 0</code> o <code>Pagar a 00</code>, sin mostrar nada más.\n      Ya que otras apuestas no ganan en este caso.</p>\n    </div>\n  )\n}\n\nexport default withLayout(WeekOneRepaso);","import './App.css'\nimport React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Setup from \"./pages/lectures/Setup\";\nimport PythonMisc from \"./pages/lectures/PythonMisc\";\nimport WeekOne from \"./pages/lectures/WeekOne\";\nimport WeekOneRepaso from \"./pages/lectures/WeekOneRepaso\";\n\n\nexport default function App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/python_misc\">\n          <PythonMisc />\n        </Route>\n        <Route path=\"/setup\">\n          <Setup />\n        </Route>\n        <Route path=\"/week1\">\n          <WeekOne />\n        </Route>\n        <Route path=\"/week1_repaso\">\n          <WeekOneRepaso />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}