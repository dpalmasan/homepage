(this.webpackJsonphomepage=this.webpackJsonphomepage||[]).push([[0],{248:function(e,a,n){"use strict";n.r(a);var l=n(0),t=n.n(l),o=n(34),r=n.n(o),s=(n(46),n(18)),i=n(19),c=n(21),m=n(23),u=(n(47),n(6)),d=n(7);var p=function(){return t.a.createElement("nav",{className:"navbar navbar-expand-md navbar-dark fixed-top bg-dark"},t.a.createElement("span",{className:"navbar-brand"},"Bienvenido"),t.a.createElement("button",{className:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbarCollapse","aria-controls":"navbarCollapse","aria-expanded":"false","aria-label":"Toggle navigation"},t.a.createElement("span",{className:"navbar-toggler-icon"})),t.a.createElement("div",{className:"collapse navbar-collapse",id:"navbarCollapse"},t.a.createElement("ul",{className:"navbar-nav mr-auto"},t.a.createElement("li",{className:"nav-item active"},t.a.createElement(u.b,{to:"/",className:"nav-link"},"Inicio",t.a.createElement("span",{className:"sr-only"},"(current)"))),t.a.createElement("li",{className:"nav-item"},t.a.createElement(u.b,{to:"/about",className:"nav-link"},"Sobre m\xed")))))};var E=function(e){return function(){return t.a.createElement(t.a.Fragment,null,t.a.createElement("header",null,t.a.createElement(p,null)),t.a.createElement("main",{role:"main",className:"flex-shrink-0"},t.a.createElement(e,null)),t.a.createElement("br",null),t.a.createElement("footer",{className:"footer mt-auto py-3 bg-dark text-white"},t.a.createElement("div",{className:"container"},"\xa9 Diego Palma 2020")))}};var g=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Material Complementario Desaf\xedo LATAM Data Science"),t.a.createElement("p",{className:"lead"},"Si llegaste a este sitio web, probablemente est\xe9s cursando la carrera de Data Science en desaf\xedo LATAM (este sitio lo cre\xe9 para la generaci\xf3n G con fecha ",t.a.createElement("code",null,"11/06/2020"),"). El prop\xf3sito de este sitio es s\xf3lo agregar material complementario, algunas recomendaciones para ayudarte a digerir mejor los contenidos del curso. Tambi\xe9n pueden pedirme que agregue informaci\xf3n en caso de que lo necesiten."),t.a.createElement("h2",null,"Material Complementario y Miscelaneos"),t.a.createElement(t.a.Fragment,null,t.a.createElement("h3",null,"Introducci\xf3n a la Programaci\xf3n con Python"),t.a.createElement("h4",null,"Semana 1: Introducci\xf3n a la Programaci\xf3n"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(u.b,{to:"/setup"},"Configuraci\xf3n e iniciando con la terminal")),t.a.createElement("li",null,t.a.createElement(u.b,{to:"/python_misc"},"C\xf3mo escribir buen c\xf3digo Python")),t.a.createElement("li",null,t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://stackoverflow.com"},"StackOverflow (sitio para buscar informaci\xf3n sobre programaci\xf3n preguntas/respuestas, etc)")),t.a.createElement("li",null,t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://hackerrank.com"},"Sitio con ejercicios para practicar python (hay muchos problemas de entrevistas)")),t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week1"},"Ejercicios complementarios semana 1")),t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week1_repaso"},"Ejercicios Repaso Introducci\xf3n a Python"))),t.a.createElement("h4",null,"Semana 2: Ciclos y M\xe9todos"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week2"},"Ejercicios complementarios semana 2"))),t.a.createElement("h4",null,"Semana 3: Estructuras de Datos"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week3"},"Material Complementario semana 3"))),t.a.createElement("h4",null,"Semana 4: API (web)"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week4"},"Material Complementario semana 4")))),t.a.createElement(t.a.Fragment,null,t.a.createElement("h3",null,"Fundamentos Data Science"),t.a.createElement("h4",null,"Semana 5: Estad\xedstica univariada y control de flujo"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week5"},"Material complementario y tips semana 5"))),t.a.createElement("h4",null,"Semana 6: Probabilidades y funciones"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week6"},"Material complementario y tips semana 6")))))})),b=n(24),f=n(31),h=n(36);var y=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Un poco sobre m\xed"),t.a.createElement("p",{className:"lead"},"Esta secci\xf3n es por si tienes la duda ",t.a.createElement("em",null,"\xbfY este individuo qui\xe9n es?")," Dejo un poco de informaci\xf3n sobre m\xed."),t.a.createElement("h2",{className:"mt-5"},"Sitios"),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("a",{href:"https://www.linkedin.com/in/dpalmasan/",target:"_blank",rel:"noopener noreferrer"},t.a.createElement(b.a,{icon:f.b})," LinkedIn"))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("a",{href:"https://github.com/dpalmasan",target:"_blank",rel:"noopener noreferrer"},t.a.createElement(b.a,{icon:f.a})," Github"))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("a",{href:"https://trunajod20.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},t.a.createElement(b.a,{icon:h.a})," TRUNAJOD (proyecto opensource en python)"))),t.a.createElement("h2",{className:"mt-5"},"Experiencia"),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Diciembre 2019 - actualidad")),t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Ingeniero de Datos en ",t.a.createElement("a",{href:"https://evernote.com/",target:"_blank",rel:"noopener noreferrer"},"Evernote")))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Diciembre 2017 - actualidad")),t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Ingeniero de I+D en Universidad de Concepci\xf3n."))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Junio 2019 - Diciembre 2019")),t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Cient\xedfico de datos en Everis"))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Mayo 2017 - Junio 2019")),t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Ingeniero de Calidad de Software en ",t.a.createElement("a",{href:"https://www.synopsys.com/",target:"_blank",rel:"noopener noreferrer"},"Synopsys")))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null," Marzo 2009 - Diciembre 2016")),t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,"Alumno ayudante Universidad de Concepci\xf3n. Para referencias ",t.a.createElement("a",{href:"https://www2.udec.cl/~dipalma/",target:"_blank",rel:"noopener noreferrer"},"mi viejo sitio")))),t.a.createElement("h2",{className:"mt-5"},"Publicaciones"),t.a.createElement("h3",{className:"mt-5"},"Revistas Cient\xedficas"),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://ieeexplore.ieee.org/abstract/document/8506398",target:"_blank",rel:"noopener noreferrer"},"Palma, D., & Atkinson, J. (2018). Coherence-based automatic essay assessment. IEEE Intelligent Systems, 33(5), 26-36.")))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{class:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://www.researchgate.net/profile/Antonio_Gutierrez_De_Blume/publication/340952008_Improving_Reading_Comprehension_in_Spanish_using_iSTART-E_A_Pilot_Study/links/5ea7117e299bf1125612f51b/Improving-Reading-Comprehension-in-Spanish-using-iSTART-E-A-Pilot-Study.pdf",target:"_blank",rel:"noopener noreferrer"},"McCarthy, K. S., Soto, C., de Blume, A. P. G., Palma, D., Gonz\xe1lez, J., & McNamara, D. Improving Reading Comprehension in Spanish using iSTART-E: A Pilot Study.")))),t.a.createElement("h3",{className:"mt-5"},"Conferencias"),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://link.springer.com/chapter/10.1007/978-3-030-25629-6_79",target:"_blank",rel:"noopener noreferrer"},"Palma, D., Soto, C., Veliz, M., Riffo, B., & Guti\xe9rrez, A. (2019, August). A Data-Driven Methodology to Assess Text Complexity Based on Syntactic and Semantic Measurements. In International Conference on Human Interaction and Emerging Technologies (pp. 509-515). Springer, Cham.")))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://www.spiedigitallibrary.org/conference-proceedings-of-spie/10810/1081005/Fracture-time-predictor-in-mask-data-preparation-using-machine-learning/10.1117/12.2502576.short?SSO=1",target:"_blank",rel:"noopener noreferrer"},"Calder\xf3n, D., & Palma, D. (2018, October). Fracture time predictor in mask data preparation using machine learning. In Photomask Technology 2018 (Vol. 10810, p. 1081005). International Society for Optics and Photonics.")))),t.a.createElement("h3",{className:"mt-5"},"Art\xedculos y Opiniones en LinkedIn"),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://www.linkedin.com/pulse/inteligencia-artificial-conceptos-b%25C3%25A1sicos-un-poco-de-y-palma-s%25C3%25A1nchez/?trackingId=ofL6W4PmSYSmRUR2zweCKg%3D%3D",target:"_blank",rel:"noopener noreferrer"},"Inteligencia Artificial, Conceptos B\xe1sicos")))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://www.linkedin.com/pulse/construyendo-mi-propia-nube-cloud-y-montando-un-con-palma-s%25C3%25A1nchez/",target:"_blank",rel:"noopener noreferrer"},'Construyendo una "nube" con Raspberry PIs')))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://www.linkedin.com/pulse/mi-primera-contribuci%25C3%25B3n-al-mundo-open-source-python-de-palma-s%25C3%25A1nchez/",target:"_blank",rel:"noopener noreferrer"},"Contribuci\xf3n al opensource. Pyhton lib para complejidad de textos")))),t.a.createElement("div",{className:"row"},t.a.createElement("div",{className:"col-sm-6"},t.a.createElement("p",null,t.a.createElement("a",{href:"https://www.linkedin.com/pulse/complejidad-de-textos-dirigida-por-los-datos-para-ser-palma-s%25C3%25A1nchez/",target:"_blank",rel:"noopener noreferrer"},"Complejidad de textos dirigida por datos")))))})),v=n(5),q=n(3),j=n(4);var P=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Requerimientos para poder trabajar en los m\xf3dulos"),t.a.createElement("p",{className:"lead"},"En esta secci\xf3n se definen los requerimientos para poder trabajar de forma \xf3ptima dentro del curso. Por otro lado, se dan algunos tips para usuarios de distintos Sistemas Operativos: basados en ",t.a.createElement("code",null,"UNIX (Mac, Linux)")," o ",t.a.createElement("code",null,"Windows"),". Si las im\xe1genes se ven muy peque\xf1as, click derecho en la im\xe1gen y abrir en pesta\xf1a nueva para verla en tama\xf1o completo."),t.a.createElement("h2",null,"Uso de terminal"),t.a.createElement("h3",{id:"windows",className:"mt-5"},"Usuarios de Windows"),t.a.createElement("p",null,"Al momento de crear el contenido no conozco a los estudiantes del curso. Tengo el sesgo de asumir que la mayor\xeda ser\xe1 usuario de windows. En general, mi recomendaci\xf3n es que instalen ",t.a.createElement("a",{href:"https://www.anaconda.com/products/individual",target:"_blank",rel:"noopener noreferrer"},"Anaconda")," y as\xed se evitan varios dolores de cabeza. En simples razones, muchas dependencias de paquetes de ",t.a.createElement("code",null,"python")," que utilizar\xe1n son dependientes del Sistema Operativo y si no tienen experiencia compilando libs a windows, mejor bajar anaconda que viene con un entorno resuelto. Tambi\xe9n recomiendo instalar Anaconda con ",t.a.createElement("code",null,"Python 3"),", ya que la versi\xf3n 2 fue deprecada este a\xf1o (no tiene m\xe1s soporte). Teniendo anaconda instalado, yendo a inicio (o presionando tecla ",t.a.createElement("code",null,"win"),"), buscamos ",t.a.createElement("code",null,"Anaconda")," y abrimos ",t.a.createElement("code",null,"Anaconda prompt")," esto abrir\xe1 una terminal:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/windows1.png",fluid:!0}))),t.a.createElement("p",null,"La terminal estar\xe1 ya con el entorno de ",t.a.createElement("code",null,"Anaconda")," configurado y en general estar\xe1n en su directorio ",t.a.createElement("code",null,"home"),", que ser\xeda:",t.a.createElement("code",null,"C:\\Users\\<TU_USUARIO>"),", esto lo pueden ver de la terminal, o comprobarlo con el comando ",t.a.createElement("code",null,"cd")," (Notar, si ud es usuario de terminal en ",t.a.createElement("code",null,"UNIX"),", el comando ",t.a.createElement("code",null,"cd")," en una ",t.a.createElement("code",null,"shell")," de Windows es diferente, hacer ",t.a.createElement("code",null,"cd")," en Windows sin argumentos, es equivalente a ",t.a.createElement("code",null,"pwd")," en ",t.a.createElement("code",null,"UNIX"),"):"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/windows2.png",fluid:!0}))),t.a.createElement("p",null,"Como ejemplo creemos un directorio llamado ",t.a.createElement("code",null,"test")," en terminal. Para ello, ejecutamos el comando ",t.a.createElement("code",null,"mkdir test"),", luego podemos verificar que el directorio fue creado, con el comando ",t.a.createElement("code",null,"dir"),". Para ir al directorio, podemos hacer ",t.a.createElement("code",null,"cd test"),":"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/windows3.png",fluid:!0}))),t.a.createElement("p",null,"Creemos un peque\xf1o c\xf3digo ",t.a.createElement("code",null,"Python")," y ejecut\xe9moslo por terminal. Para ello hagamos ",t.a.createElement("code",null,"echo print('Hello world!') > hello.py"),", luego ",t.a.createElement("code",null,"python hello.py"),", deberiamos ver lo siguiente:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/windows5.png",fluid:!0}))),t.a.createElement("p",null,"Los directorios ",t.a.createElement("code",null,".")," y ",t.a.createElement("code",null)," son especiales. El primero es el directorio actual, mientras que ",t.a.createElement("code",null,"..")," es el directorio padre."),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/windows4.png",fluid:!0}))),t.a.createElement("p",null,"Para efectos del curso, s\xf3lo ser\xe1 necesario aprender lo b\xe1sico de utilizar una terminal. Por ejemplo, crear directorios, cambiar directorio, listar directorios. Para m\xe1s informaci\xf3n respecto a comandos disponibles, pueden",t.a.createElement("a",{href:"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands",target:"_blank",rel:"noopener noreferrer"}," revisar la documentaci\xf3n")),t.a.createElement("p",null,"Si queremos usar el entorno de conda en visual studio code, b\xe1sicamente es ",t.a.createElement("code",null,"ctrl + shift + p"),", buscar ",t.a.createElement("code",null,"python interpreter"),"Y elegir el entorno de anaconda, como se muestra en la im\xe1gen abajo. Para abrir una terminal en visual studio code, pueden ir al men\xfa terminal y abrir una nueva, o hacer ",t.a.createElement("code",null,"ctrl + shift + \xf1"),"."),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/windows6.png",fluid:!0}))),t.a.createElement("h3",{id:"unix",className:"mt-5"},"Usuarios Linux y Mac"),t.a.createElement("p",null,"Yo en mi equipo personal utilizo Windows con ",t.a.createElement("a",{href:"https://docs.microsoft.com/en-us/windows/wsl/install-win10",target:"_blank",rel:"noopener noreferrer"},"WSL"),"(Windows Subsystem for Linux), es b\xe1sicamente tener alguna distribuci\xf3n Linux en windows. De hecho, ",t.a.createElement("code",null,"VSCode")," tiene una integraci\xf3n con WSL y es bastante \xfatil para prop\xf3sitos de desarrollo. Con esto quiero decir, si alguien tiene ",t.a.createElement("code",null,"WSL"),", los pasos son equivalentes que en el caso de Linux."),t.a.createElement("p",null,"Otro punto importante es tener un administrador de paquetes; este paso no es fundamental pero tenganlo en cuenta. En general las distribuciones de Linux vienen con administradores de paquetes (por ejemplo en Linux basados en Debian tienen el comando ",t.a.createElement("code",null,"apt-get")," para instalar librer\xedas, etc, de distintos repositorios.). En Mac, tengo entendido que las versiones m\xe1s recientes del sistema operativo vienen ya con un administrador de paquetes, en caso contrario, recomiendo instalar ",t.a.createElement("a",{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},"brew"),". Finalmente, recomiendo a usuarios de Mac, que instalen una terminal decente, la que viene por defecto no es muy buena. Yo he usado",t.a.createElement("a",{href:"https://www.iterm2.com/",target:"_blank",rel:"noopener noreferrer"},"iTerm2")," y lo he encontrado bastante bueno."),t.a.createElement("p",null,"Para abrir la terminal en ",t.a.createElement("code",null,"Mac"),", pueden hacer la combinaci\xf3n ",t.a.createElement("code",null,"cmd + espacio")," y escribe terminal. Abrir la terminal. Deber\xedan estar en el directorio ",t.a.createElement("code",null,"HOME")," que un atajo en UNIX es ",t.a.createElement("code",null,"\u02dc"),". Chequear que tenemos ",t.a.createElement("code",null,"python")," en el entorno y ver la versi\xf3n: ",t.a.createElement("code",null,"python --version")," si les sale versi\xf3n 2, probar con ",t.a.createElement("code",null,"python3 --version"),":"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/unix1.png",fluid:!0}))),t.a.createElement("p",null,"En general las distribuciones de Mac y Linux vienen con python instalado. Creemos un directorio llamado test, vamos a dicho directorio, creemos un peque\xf1o script en python, listemos el directorio y ejecutemos el script por terminal:"),t.a.createElement("ol",null,t.a.createElement("li",null,t.a.createElement("code",null,"mkdir test")),t.a.createElement("li",null,t.a.createElement("code",null,"cd test")),t.a.createElement("li",null,t.a.createElement("code",null,"echo 'print(\"Hello world!\")' > hello.py")),t.a.createElement("li",null,t.a.createElement("code",null,"ls")),t.a.createElement("li",null,t.a.createElement("code",null,"python hello.py"))),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/unix2.png",fluid:!0}))),t.a.createElement("p",null,"Para m\xe1s informaci\xf3n, revisar documentaci\xf3n, para ello buscar en internet ",t.a.createElement("code",null,"man pages"),". Por ejemplo el sitio de ",t.a.createElement("a",{href:"https://manpages.ubuntu.com/",target:"_blank",rel:"noopener noreferrer"},"Ubuntu"),"."),t.a.createElement("h2",{className:"mt-5",id:"ides"},"IDE recomendado (",t.a.createElement("em",null,"Interactive Development Environment"),")"),t.a.createElement("p",null,"No entrar\xe9 en detalle, pero b\xe1sicamente el editor de texto recomendado. Aqu\xed no hay receta para todo, yo en lo personal he probado ",t.a.createElement("code",null,"nano"),", ",t.a.createElement("code",null,"emacs"),", ",t.a.createElement("code",null,"VIM"),", ",t.a.createElement("code",null,"sublime"),", ",t.a.createElement("code",null,"Atom"),", ",t.a.createElement("code",null,"Visual Studio Code (VSCode)"),". El que recomiendo definitivamente es ",t.a.createElement("code",null,"VSCode"),". ",t.a.createElement("code",null,"Atom")," es demasiado lento (o lo era cuando lo utilic\xe9), editores de texto bajo terminal como ",t.a.createElement("code",null,"nano"),", ",t.a.createElement("code",null,"emacs")," o ",t.a.createElement("code",null,"VIM")," tienen una rampa de aprendizaje un poco inclinada (no es para el usuario sin experiencia trabajando bajo terminal), yo en realidad los recomendar\xeda en casos particulares (e.g Trabajando en un cl\xfaster remoto, configurando inicialmente un server, se tiene RAM limitada, etc.) Sin embargo, si\xe9ntanse libres de utilizar lo que m\xe1s les acomode. La p\xe1gina oficial de ",t.a.createElement("a",{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},"VSCode"),"."))})),_=n(250),x=n(249);var w=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"\xbfSobre qu\xe9 es este apartado?"),t.a.createElement("p",{className:"lead"},'En este apartado no defino nada en relaci\xf3n a caracter\xedsticas de Python, si no que a buenas pr\xe1cticas en el estilo de c\xf3digo. Hay muchas formas de escribir c\xf3digo en Python y en general en cualquier lenguaje de programaci\xf3n. Sin embargo, en general es bueno seguir ciertas convenciones, de manera que todos los integrantes de un equipo sean consistentes en el estilo de programar y el c\xf3digo sea homog\xe9neo, lo que aumenta la "mantenibilidad" del c\xf3digo, y como consecuencia, se tiene c\xf3digo de calidad, robusto, profesional y no una soluci\xf3n de juguete.'),t.a.createElement("h2",null,"Ejemplo de c\xf3digo sin est\xe1ndar ni buenas convenciones"),t.a.createElement("p",null,"Para las demostraciones vamos a utilizar el siguiente bloque (",t.a.createElement("em",null,"snippet"),") de c\xf3digo:"),t.a.createElement(_.a,{language:"python",style:x.a},'from sys import *\ndef CalcularIMC(peso,estatura):\n    return peso/(estatura**2)\n\nnombre=argv[1]\n\nprint("Bienvenido {}".format(nombre))\npeso=float(input("Ingrese su peso: "))\nestatura=float(input("Ingrese su estatura: "))\n\nprint("Su IMC es: {}".format(CalcularIMC(peso,estatura)))\n'),t.a.createElement("h3",{id:"windows",className:"mt-5"},"\xbfPor qu\xe9 el c\xf3digo es malo?"),t.a.createElement("p",null,"El c\xf3digo funciona pero no tiene calidad alguna. Lo que se debe recordar en programaci\xf3n es lo siguiente:",t.a.createElement("em",null,'"Que funcione no significa que est\xe9 correcto"'),". En particular, el fragmento de c\xf3digo anterior no sigue el est\xe1ndar ",t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://www.python.org/dev/peps/pep-0008/"},"PEP8"),". En mi experiencia, utilizar este est\xe1ndar me ha aliviado bastantes dolores de cabeza. Sin embargo, el est\xe1ndar es gigante y leerlo y tenerlo en cuenta cada vez que escribimos c\xf3digo es una tarea poco factible. Por ello, se han desarrollado herramientas para ayudar a mejorar la calidad del c\xf3digo, en cuanto a estilo."),t.a.createElement("h4",null,"Flake 8"),t.a.createElement("p",null,t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://flake8.pycqa.org/en/latest/"},"Flake 8")," est\xe1 construido bajo",t.a.createElement("code",null,"PyFlakes"),", ",t.a.createElement("code",null,"pycodestyle")," y ",t.a.createElement("code",null,"Ned Batchelder\u2019s McCabe script"),", que son b\xe1sicamente herramientas que implementan chequeos de estilo de c\xf3digo, dado un c\xf3digo python. Para instalar ",t.a.createElement("code",null,"flake8")," pueden hacerlo con el siguiente comando ",t.a.createElement("code",null,"pip install flake8"),". Consideremos que el c\xf3digo mencionado antes se llama ",t.a.createElement("code",null,"example.py"),", entonces, para chequear el estilo de c\xf3digo, podemos ejecutar ",t.a.createElement("code",null,"flake8 example.py"),", obtendremos lo siguiente:"),t.a.createElement(_.a,{language:"shell",style:x.a},"> flake8 example.py\nexample.py:1:1: F403 'from sys import *' used; unable to detect undefined names\nexample.py:2:1: E302 expected 2 blank lines, found 0\nexample.py:2:21: E231 missing whitespace after ','\nexample.py:5:1: E305 expected 2 blank lines after class or function definition, found 1\nexample.py:5:7: E225 missing whitespace around operator\nexample.py:5:8: F405 'argv' may be undefined, or defined from star imports: sys\nexample.py:8:5: E225 missing whitespace around operator\nexample.py:9:9: E225 missing whitespace around operator\nexample.py:11:46: E231 missing whitespace after ','\nexample.py:11:58: W292 no newline at end of file"),t.a.createElement("p",null,"Lo que nos est\xe1 diciendo ",t.a.createElement("code",null,"flake8")," es que el c\xf3digo tiene muchos errores que no cumplen los est\xe1ndares, adem\xe1s hace referencia al est\xe1ndar (ejemplo: F403, E302, etc.) y nos dice las l\xedneas que est\xe1n en conflicto como gu\xeda para corregirlo."),t.a.createElement("h4",null,"Black Python Formatter"),t.a.createElement("p",null,"Otra debilidad que tiene el c\xf3digo anterior es c\xf3mo est\xe1 formateado. No respeta tampoco est\xe1ndares en cuanto a saltos de l\xednea, espacios, etc. Un paquete muy utilizado (profesionalmente y en proyectos de c\xf3digo abierto) es ",t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/psf/black"},"black"),". Para instalar black, simplemente ejecutar ",t.a.createElement("code",null,"pip install black"),". Por ejemplo, pueden usarlo para re-formatear el c\xf3digo anterior: ",t.a.createElement("code",null,"black example.py")),t.a.createElement(_.a,{language:"shell",style:x.a},">black example.py\nreformatted example.py\nAll done! \u2728 \ufffd\ud83c\udf70\u2728\u2728\n1 file reformatted."),t.a.createElement("p",null,"El c\xf3digo ser\xe1 reformateado y quedar\xe1 as\xed:"),t.a.createElement(_.a,{language:"python",style:x.a},'from sys import *\n\n\ndef CalcularIMC(peso, estatura):\n    return peso / (estatura ** 2)\n\n\nnombre = argv[1]\n\nprint("Bienvenido {}".format(nombre))\npeso = float(input("Ingrese su peso: "))\nestatura = float(input("Ingrese su estatura: "))\n\nprint("Su IMC es: {}".format(CalcularIMC(peso, estatura)))'),t.a.createElement("p",null,"Se observa que ahora existe un espacio entre operadores (asignaci\xf3n, operaciones matem\xe1ticas), lo que sigue las convenciones a la hora de escribir c\xf3digo con python. Queda mucho m\xe1s legible que la versi\xf3n anterior."),t.a.createElement("h4",null,"Pydocstyle"),t.a.createElement("p",null,t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://pypi.org/project/pydocstyle/"},"Pydocstyle")," es una herramienta para chequear el estilo de los ",t.a.createElement("code",null,"docstrings")," (documentaci\xf3n) de las funciones y clases. Para instalar ejecutar ",t.a.createElement("code",null,"pip install pydocstyle"),", abajo se muestra el resultado de correr ",t.a.createElement("code",null,"pydocstyle")," en el c\xf3digo de ejemplo:"),t.a.createElement(_.a,{language:"shell",style:x.a},">pydocstyle example.py\nexample.py:1 at module level:\n        D100: Missing docstring in public module\nexample.py:4 in public function `CalcularIMC`:\n        D103: Missing docstring in public function"),t.a.createElement("p",null,"Lo que nos est\xe1 diciendo ",t.a.createElement("code",null,"pydocstyle")," es que faltan los ",t.a.createElement("code",null,"docstrings")," del m\xf3dulo y de la funci\xf3n definida."),t.a.createElement("h3",null,"Integrando los chequeos con Visual Studio Code"),t.a.createElement("p",null,"Como podr\xe1n notar, es un poco tedioso correr los chequeos cada vez que se modifica el c\xf3digo, por ello usamos un IDE, para agilizar el trabajo. ",t.a.createElement("code",null,"VSCode")," cuenta con integraciones y plugins para incoporar el uso de estas herramientas autom\xe1ticamente."),t.a.createElement("p",null,"Para configurar ",t.a.createElement("code",null,"VSCode")," con ",t.a.createElement("code",null,"flake8"),", en Windows/Linux hacen ",t.a.createElement("code",null,"ctrl + shift + P")," (en MAC ser\xeda ",t.a.createElement("code",null,"cmd + shift + P"),"), escogen select linter, y eligen flake8. En caso de que algo no funcione, las instrucciones completas en ",t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://code.visualstudio.com/docs/python/linting"},"este enlace"),". Si hicieron todo correctamente, ahora los mensajes de ",t.a.createElement("code",null,"flake8")," deber\xedan poder verlos desde el editor:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/linter.png",fluid:!0}))),t.a.createElement("p",null,"Para agregar ",t.a.createElement("code",null,"black")," a ",t.a.createElement("code",null,"VSCode")," code, pueden seguir",t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://medium.com/@marcobelo/setting-up-python-black-on-visual-studio-code-5318eba4cd00"},"estas instrucciones")),t.a.createElement("p",null,"Para documentar funciones en ",t.a.createElement("code",null,"python")," existen varios formatos. Yo personalmente he utilizado",t.a.createElement("code",null,"restructuredText")," y encuentro que queda bastante bien. Por ejemplo pueden mirar el ",t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://www.python.org/dev/peps/pep-0287/"},"PEP 287"),". Para configurar",t.a.createElement("code",null,"restructuredText")," en ",t.a.createElement("code",null,"VSCode"),", pueden instalar el plugin ",t.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring"},"Python Docstring Generator")," y configurarlo eligiendo formato ",t.a.createElement("code",null,"sphinx"),"."),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/docstring.png",fluid:!0}))),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/docstring2.png",fluid:!0}))),t.a.createElement("p",null,"Finalmente se les generar\xe1 autom\xe1ticamente el docstring cuando escriban ",t.a.createElement("code",null,'""" + enter')," bajo la funci\xf3n. El c\xf3digo finalmente quedar\xe1 as\xed:"),t.a.createElement(_.a,{language:"python",style:x.a},'"""Ejemplo para la el curso."""\n\nfrom sys import argv\n\n\ndef calcular_imc(peso, estatura):\n    """Compute IMC.\n\n    :param peso: Peso de la persona\n    :type peso: float\n    :param estatura: estatura de la persona\n    :type estatura: float\n    :return: IMC de la persona\n    :rtype: float\n    """\n    return peso / (estatura ** 2)\n\n\nnombre = argv[1]\n\nprint("Bienvenido {}".format(nombre))\npeso = float(input("Ingrese su peso: "))\nestatura = float(input("Ingrese su estatura: "))\n\nprint("Su IMC es: {}".format(calcular_imc(peso, estatura)))\n'),t.a.createElement("ul",null,t.a.createElement("li",null,"Cambi\xe9 el nombre de la funci\xf3n por min\xfasculas, porque es una funci\xf3n. Por convenci\xf3n, en general s\xf3lo las clases se escriben con may\xfasculas (en general)."),t.a.createElement("li",null,"Se agreg\xf3 docstring con formato ",t.a.createElement("code",null,"sphinx")," a la funci\xf3n ",t.a.createElement("code",null,"calcular_imc")),t.a.createElement("li",null,"Se corrigieron los errores que arrojaba ",t.a.createElement("code",null,"flake8")," y se reformate\xf3 el c\xf3digo con ",t.a.createElement("code",null,"black")," para hacerlo m\xe1s legible.")))})),$=n(40),S=n(2),k=n.n(S),A=n(22);var C=E((function(){var e=Object(l.useState)(!1),a=Object($.a)(e,2),n=a[0],o=a[1];return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Semana 1"),t.a.createElement("p",{className:"lead"},"Para aprovechar el tiempo de sobra de la semana 1, se dejan ejercicios para que puedan practicar lo aprendido en las sesiones no presenciales (fuera de clases). Por otro lado, tambi\xe9n dejar\xe9 una explicaci\xf3n de conceptos b\xe1sicos, para que logren aclarar su entendimiento respecto a programaci\xf3n en general."),t.a.createElement("h2",null,"\xbfQu\xe9 es un programa?"),t.a.createElement("p",null,"Definir qu\xe9 es un ",t.a.createElement("b",null,"programa")," se puede hacer de m\xfaltiples formas dependiendo del grado de detalle que uno quiera considerar. Sin embargo, la intuici\xf3n que debe entenderse por program es: ",t.a.createElement("em",null,"Un programa es un conjunto de instrucciones de m\xe1quina para llevar a cabo una tarea definida."),". Probablemente, en su uso cotidiano de computadores, han utilizado diversos programas (ej. Microsoft Word, Google Chrome, etc.). Sin embargo, todos estos programas tienen una ",t.a.createElement("em",null,"interfaz de usuario")," lo que nos aleja un poco de lo que veremos a lo largo del curso. Para tener una intuici\xf3n m\xe1s acercada a los programas que desarrollaremos en el curso, tomemos como ejemplo el programa ",t.a.createElement("code",null,"ping"),". El programa ",t.a.createElement("code",null,"ping")," en t\xe9rminos simples env\xeda secuencias de bytes a un sitio definido y mide el tiempo de promedio de respuesta del sitio. En ",t.a.createElement("code",null,"Windows")," por ejemplo pueden hacer, en la terminal pueden hacer:"),t.a.createElement(_.a,{language:"shell",style:x.a},">ping www.google.com\n\nHaciendo ping a www.google.com [172.217.192.105] con 32 bytes de datos:\nRespuesta desde 172.217.192.105: bytes=32 tiempo=41ms TTL=107\nRespuesta desde 172.217.192.105: bytes=32 tiempo=18ms TTL=107\nRespuesta desde 172.217.192.105: bytes=32 tiempo=35ms TTL=107\nRespuesta desde 172.217.192.105: bytes=32 tiempo=21ms TTL=107\n\nEstad\xedsticas de ping para 172.217.192.105:\n    Paquetes: enviados = 4, recibidos = 4, perdidos = 0\n    (0% perdidos),\nTiempos aproximados de ida y vuelta en milisegundos:\n    M\xednimo = 18ms, M\xe1ximo = 41ms, Media = 28ms"),"En ",t.a.createElement("code",null,"UNIX (MacOS, Linux)")," tambi\xe9n existe el programa ",t.a.createElement("code",null,"ping"),", pero este se ejecuta indefinidamente hasta que el usuario lo interrumpa (con ",t.a.createElement("code",null,"Ctrl + C"),"):",t.a.createElement(_.a,{language:"shell",style:x.a},"ping www.google.com\nPING www.google.com (64.233.190.103) 56(84) bytes of data.\n64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=1 ttl=107 time=39.8 ms\n64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=2 ttl=107 time=17.6 ms\n64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=3 ttl=107 time=28.0 ms\n64 bytes from gsademo22.google.com (64.233.190.103): icmp_seq=4 ttl=107 time=31.0 ms\n^C\n--- www.google.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3002ms\nrtt min/avg/max/mdev = 17.614/29.132/39.880/7.957 ms"),t.a.createElement("p",null,"Como podr\xe1n imaginarse, los programas en general tienen m\xfaltiples funcionalidades, incluso los programas m\xe1s simples. Supongamos que el promedio de 4 paquetes enviados por ping no me da un n\xfamero representativo para la latencia en milisegundos que observo al usar internet. La pregunta es \xbfviene el programa ",t.a.createElement("code",null,"ping")," dotado de la capacidad de controlar la cantidad de bytes enviados para calcular la latencia en milisegundos? Aqu\xed es donde entran los ",t.a.createElement("b",null,"argumentos de l\xednea de comandos"),', que son b\xe1sicamente "palancas" que nos permiten modificar o ajustar el comportamiento de nuestro programa. Volvamos a correr el programa pero considerando el env\xedo de 10 paquetes de bytes. En ',t.a.createElement("code",null,"Windows"),":"),t.a.createElement(_.a,{language:"shell",style:x.a},">ping /n 10 www.google.com\n\nHaciendo ping a www.google.com [64.233.190.104] con 32 bytes de datos:\nRespuesta desde 64.233.190.104: bytes=32 tiempo=130ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=39ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=198ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=21ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=30ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=16ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=31ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=13ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=68ms TTL=107\nRespuesta desde 64.233.190.104: bytes=32 tiempo=15ms TTL=107\n\nEstad\xedsticas de ping para 64.233.190.104:\n    Paquetes: enviados = 10, recibidos = 10, perdidos = 0\n    (0% perdidos),\nTiempos aproximados de ida y vuelta en milisegundos:\n    M\xednimo = 13ms, M\xe1ximo = 198ms, Media = 56ms"),"En ",t.a.createElement("code",null,"UNIX (MacOS, Linux):"),t.a.createElement(_.a,{language:"shell",style:x.a},"> ping -c 10 www.google.com\nPING www.google.com (64.233.190.105) 56(84) bytes of data.\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=1 ttl=107 time=33.5 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=2 ttl=107 time=19.3 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=3 ttl=107 time=273 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=4 ttl=107 time=83.4 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=5 ttl=107 time=34.9 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=6 ttl=107 time=23.6 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=7 ttl=107 time=31.2 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=8 ttl=107 time=99.6 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=9 ttl=107 time=19.8 ms\n64 bytes from gsademo24.google.com (64.233.190.105): icmp_seq=10 ttl=107 time=39.8 ms\n\n--- www.google.com ping statistics ---\n10 packets transmitted, 10 received, 0% packet loss, time 9008ms\nrtt min/avg/max/mdev = 19.301/65.915/273.775/73.904 ms"),t.a.createElement("p",null,"Cambiamos el comportamiento del programa, dici\xe9ndole que en lugar de enviar paquetes de bytes con las opciones por defecto enviara ",t.a.createElement("code",null,"10")," paquetes de bytes. Notar tambi\xe9n que el sitio al que queremos hacer ",t.a.createElement("code",null,"ping")," tambi\xe9n es un argumento para el programa, y en los ejemplos usamos ",t.a.createElement("code",null,"www.google.com"),". ",t.a.createElement("b",null,"\xbfPodremos hacer algo similar en ",t.a.createElement("code",null,"Python"),"?")," Aqu\xed es done entra el m\xf3dulo ",t.a.createElement("code",null,"sys")," y en particular ",t.a.createElement("code",null,"argv"),". Consideremos el siguiente programa de ejemplo llamado ",t.a.createElement("code",null,"ejemplo_argv.py"),":"),t.a.createElement(_.a,{language:"python",style:x.a},"import sys\n\n\nprint(sys.argv)\n"),t.a.createElement("p",null,"Utilizando python para ejecutar el programa, por ejemplo ",t.a.createElement("code",null,"python ejemplo_argv.py"),", va a mostrar en la termina el siguiente texto: ",t.a.createElement("code",null,"['ejemplo_argv.py']"),". Prueben correr el programa con distintos argumentos, por ejemplo: ",t.a.createElement("code",null,"python ejemplo_argv.py hola esto es un ejemplo de argumentos al programa"),", esto mostrar\xe1 en la terminal lo siguiente:",t.a.createElement("code",null,"['ejemplo_argv.py', 'hola', 'esto', 'es', 'un', 'ejemplo', 'de', 'argumentos', 'al', 'programa']"),". B\xe1sicamente ",t.a.createElement("code",null,"argv")," es una ",t.a.createElement("em",null,"lista de cadenas de texto")," (",t.a.createElement("code",null,"string"),"), ",t.a.createElement("b",null,"donde el primer elemento es el nombre del archivo que contiene el c\xf3digo")," (programa). Esto lo ",t.a.createElement("b",null,"deber\xe1n entender mejor cuando vean sus sesiones online")," de la semana de Introducci\xf3n a Python. \xbfC\xf3mo utilizar los argumentos? Para acceder a los elementos de la lista, se utiliza lo que se conoce como indexaci\xf3n. En ",t.a.createElement("code",null,"python")," en particular, los \xedndices comienzan del 0. Por lo que, si quisieran acceder al primer elemento de dicha lista, se hace mediante ",t.a.createElement("code",null,"sys.argv[0]"),". La sintaxis ",t.a.createElement("code",null,"lista[i]")," es acceder al elemento ",t.a.createElement("code",null,"i"),"-\xe9simo de la ",t.a.createElement("code",null,"lista"),". Finalmente se deja un ejemplo de programa que saluda al usuario dado un nombre:"),".",t.a.createElement(_.a,{language:"python",style:x.a},'import sys\n\n\nnombre = sys.argv[1]\nprint(f"Hola {nombre}!")\n'),t.a.createElement("p",null,"Si nombramos el archivo como ",t.a.createElement("code",null,"ejemplo_argv.py")," y lo ejecutamos v\xeda ",t.a.createElement("code",null,"python ejemplo_argv.py Diego"),", el programa mostar\xe1 lo siguiente: ",t.a.createElement("code",null,"Hola Diego!"),"."),t.a.createElement("h2",null,"Ejercicios"),t.a.createElement("h3",null,"Ejercicio 1"),t.a.createElement("p",null,"Escriba un programa que lea un entero positivo ",t.a.createElement("code",null,"n"),", ingresado por usuario y e imprima la suma de los n\xfameros desde ",t.a.createElement("code",null,"1")," a ",t.a.createElement("code",null,"n"),". Para calcular la sumatoria ",t.a.createElement("code",null,"1 + 2 + 3 + ... n")," puede utilizar la siguiente f\xf3rmula:"),t.a.createElement(k.a,{math:"$$Suma = \\frac{n\\left(n + 1\\right)}{2}$$"}),t.a.createElement("p",null,"Escriba dos versiones del programa, una que lea la entrada con la funci\xf3n ",t.a.createElement("code",null,"input")," y otra que sea por ",t.a.createElement("code",null,"argv"),"."),t.a.createElement("h3",null,"Ejercicio 2"),t.a.createElement("p",null,"Mucha gente en otros pa\xedses mide su estatura utilizando pies y pulgadas, en Chile utilizamos los metros como unidad. Escriba un programa que lea una medici\xf3n en pies y n\xfamero de pulgadas, ambos entregados por el usuario. El programa debe transformar la medici\xf3n a cent\xedmetros. ",t.a.createElement("b",null,"Pista:")," Un pie son 12 pulgadas. Una pulgada son 2.54 cm."),t.a.createElement("h3",null,"Ejercicio 3"),t.a.createElement("p",null,"Escriba un programa que reciba como entradas ",t.a.createElement("code",null,"3")," enteros. El programa debe imprimir en pantalla los 3 enteros ordenados en forma creciente. ",t.a.createElement("b",null,"Pista"),": Puede encontrar el m\xednimo valor usando la funci\xf3n ",t.a.createElement("code",null,"min")," y el m\xe1ximo usando ",t.a.createElement("code",null,"max"),". \xbfC\xf3mo podr\xeda encontrar el valor faltante?"),t.a.createElement("h2",null,"Soluciones"),t.a.createElement(t.a.Fragment,null,t.a.createElement(A.a,{variant:"primary",onClick:function(){return o(!n)}},n?"Ocultar soluci\xf3n Ejercicio 1":"Mostrar Soluci\xf3n Ejercicio 1"),n&&t.a.createElement("div",null,t.a.createElement("p",null,"Si usamos ",t.a.createElement("code",null,"input"),", se debe recordar que ",t.a.createElement("code",null,"Python")," guardar\xe1 la entrada por teclado como variable de tipo ",t.a.createElement("code",null,"string")," (cadena de texto). Por lo tanto, se deber\xe1 transformar a ",t.a.createElement("code",null,"int"),". Por ahora, asumiremos que el usuario ingresar\xe1 un n\xfamero entero. Luego, se puede caclular la suma, utilizando la f\xf3rmula y usamos la funci\xf3n ",t.a.createElement("code",null,"print")," para mostrar el resultado."),t.a.createElement("p",null,"Si su c\xf3digo se ve como sigue: "),t.a.createElement(_.a,{language:"python",style:x.a},'n=int(input("Ingrese valor de n: "))\nsuma=n*(n+1)/2\nprint(f"El valor para n = {n} es {suma}")'),t.a.createElement("p",null,'Ruego encarecidamente que vean "',t.a.createElement(u.b,{to:"python_misc"},"Escribir buen c\xf3digo en python"),'". Idealmente quieren correr el formateador de c\xf3digo ',t.a.createElement("code",null,"black")," y el chequeador de est\xe1ndar ",t.a.createElement("code",null,"PEP8")," ",t.a.createElement("code",null,"flake8"),". Finalmente, el c\xf3digo se ver\xeda como sigue:"),t.a.createElement(_.a,{language:"python",style:x.a},'n = int(input("Ingrese valor de n: "))\nsuma = n * (n + 1) / 2\nprint(f"El valor para n = {n} es {suma}")'),t.a.createElement("p",null,"De esta forma, el c\xf3digo ser\xe1 m\xe1s legible para m\xed, para ustedes, e ir\xe1 acorde con est\xe1ndares de c\xf3digo."))))}));var z=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Ciclos y M\xe9todos: Ejercicios complementarios"),t.a.createElement("p",{className:"lead"},"La semana 2 es de m\xe9todos y ciclos, se dejan ejercicios para repasar estas tem\xe1ticas. Se mostrar\xe1 un ejemplo de uso de funciones y ciclos, y t\xe9cnicas generales para resolver problemas."),t.a.createElement("h2",null,"Ejemplo del Lector de mentes"),t.a.createElement("p",null,"En este ejemplo se implementar\xe1 un lector de mentes. El usuario pensar\xe1 un n\xfamero del 1 al 100, y el computador intentar\xe1 adivinar el n\xfamero. El usuario le proporcionar\xe1 al computador informaci\xf3n sobre si el n\xfamero adivinado es mayor o menor que el n\xfamero que est\xe1 pensando, en caso de que el computador haya errado en adivinar. El juego terminar\xe1 una vez el computador adivine el n\xfamero del usuario."),t.a.createElement("p",null,"Lo primero es pensar el problema y resolverlo mediante abstracci\xf3n (sin programar). Al entender el problema, se podr\xeda pensar que sigue el siguiente flujo:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:4,md:4},t.a.createElement(v.a,{src:"/homepage/imgs/flujo1.png",fluid:!0}))),t.a.createElement("p",null,"Lo mostrado en la figura anterior es un esqueleto del flujo que sigue el programa, donde muchos componentes fueron abstra\xeddos. Saludar al usuario por ejemplo, es una abstracci\xf3n y se puede implementar con una funci\xf3n, por ejemplo:"),t.a.createElement(_.a,{language:"python",style:x.a},'def saludar():\n    print("Bienvenido al lector de mente.")\n    print("Por favor piense en un n\xfamero del 1 al 100")\n'),t.a.createElement("p",null,"Se puede ver tambi\xe9n que el juego no terminar\xe1 hasta que la computadora no adivine el n\xfamero. Sin embargo, \xbfc\xf3mo se podr\xeda implementar esa l\xf3gica? Se debe entrar al detalle de la abstracci\xf3n, descomponiendo el problema en un sub-problema:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:8,md:8},t.a.createElement(v.a,{src:"/homepage/imgs/flujo2.png",fluid:!0}))),t.a.createElement("p",null,"El problema de adivinar, se puede implementar de la siguiente forma:"),t.a.createElement("ol",null,t.a.createElement("li",null,"Inicialmente, el computador sabe que el usuario est\xe1 pensando un n\xfamero entre ",t.a.createElement("code",null,"1")," y ",t.a.createElement("code",null,"100"),"."),t.a.createElement("li",null,"Por lo tanto, lo natural, ser\xeda adivinar un n\xfamero entre medio (entero) ",t.a.createElement("code",null,"(1 + 100)/2 = 50.5"),", por lo tanto ",t.a.createElement("code",null,"50")),t.a.createElement("li",null,"Si el usuario dice que el n\xfamero es mayor, entonces sabemos que no est\xe1 entre ",t.a.createElement("code",null,"1")," y ",t.a.createElement("code",null,"50")," y podemos inferir que el n\xfamero estar\xe1 entre ",t.a.createElement("code",null,"50")," y ",t.a.createElement("code",null,"100"),". Con estos l\xedmites volvemos al paso 1."),t.a.createElement("li",null,"En caso de que el computador adivine terminamos el juego.")),t.a.createElement("p",null,"Por otro lado, mostrar men\xfa tambi\xe9n es una abstracci\xf3n, y se podr\xeda implementar en una funci\xf3n ",t.a.createElement("code",null,"mostrar_menu"),":"),t.a.createElement(_.a,{language:"python",style:x.a},'def mostrar_menu(num):\n    print(f"Adivino que el n\xfamero que est\xe1 pensando es: {num}")\n    print("Elija una opci\xf3n")\n    print("1. El n\xfamero que estoy pensando es mayor")\n    print("2. El n\xfamero que estoy pensando es menor")\n    print("3. \xa1Ese es mi n\xfamero! Bravo!!!")\n'),t.a.createElement("p",null,"Finalmente, podemos ir m\xe1s al detalle, y definir un flujo para ",t.a.createElement("b",null,"leer opci\xf3n"),":"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:8,md:8},t.a.createElement(v.a,{src:"/homepage/imgs/flujo3.png",fluid:!0}))),t.a.createElement("p",null,"Del diagrama de flujo, esto puede implementarse como:"),t.a.createElement(_.a,{language:"python",style:x.a},'def leer_opcion():\n  escogiendo = True\n\n  while escogiendo:\n      opcion = input("Ingrese su opci\xf3n: ")\n      if opcion != "1" and opcion != "2" and opcion != "3":\n          print("Opcion inv\xe1lida.")\n      else:\n          escogiendo = False\n\n  return int(opcion)\n'),t.a.createElement("p",null,"Luego, es cosa de juntar todos los subproblemas que resolvimos, para resolver el problema principal. Lo que resultar\xeda en:"),t.a.createElement(_.a,{language:"python",style:x.a},'def saludar():\n    print("Bienvenido al lector de mente.")\n    print("Por favor piense en un n\xfamero del 1 al 100")\n\n\ndef adivinar(inferior, superior):\n    return (inferior + superior) // 2\n\n\ndef mostrar_menu(num):\n    print(f"Adivino que el n\xfamero que est\xe1 pensando es: {num}")\n    print("Elija una opci\xf3n")\n    print("1. El n\xfamero que estoy pensando es mayor")\n    print("2. El n\xfamero que estoy pensando es menor")\n    print("3. \xa1Ese es mi n\xfamero! Bravo!!!")\n\n\ndef leer_opcion():\n    escogiendo = True\n\n    while escogiendo:\n        opcion = input("Ingrese su opci\xf3n: ")\n        if opcion != "1" and opcion != "2" and opcion != "3":\n            print("Opcion inv\xe1lida.")\n        else:\n            escogiendo = False\n\n    return int(opcion)\n\n\nsaludar()\n\njuego_continua = True\ninf = 1\nsup = 100\nintentos = 0\nwhile juego_continua:\n    num = adivinar(inf, sup)\n    intentos += 1\n    mostrar_menu(num)\n    opcion = leer_opcion()\n    if opcion == 1:\n        inf = num\n    elif opcion == 2:\n        sup = num\n    else:\n        juego_continua = False\n\nprint(f"El adivinador adivin\xf3 su n\xfamero {num} en {intentos} intentos")\n'),t.a.createElement(_.a,{language:"shell",style:x.a},">python adivina.py\nBienvenido al lector de mente.\nPor favor piense en un n\xfamero del 1 al 100    \nAdivino que el n\xfamero que est\xe1 pensando es: 50\nElija una opci\xf3n\n1. El n\xfamero que estoy pensando es mayor      \n2. El n\xfamero que estoy pensando es menor      \n3. \xa1Ese es mi n\xfamero! Bravo!!!\nIngrese su opci\xf3n: 1\nAdivino que el n\xfamero que est\xe1 pensando es: 75\nElija una opci\xf3n\n1. El n\xfamero que estoy pensando es mayor      \n2. El n\xfamero que estoy pensando es menor      \n3. \xa1Ese es mi n\xfamero! Bravo!!!\nIngrese su opci\xf3n: 1\nAdivino que el n\xfamero que est\xe1 pensando es: 87\nElija una opci\xf3n\n1. El n\xfamero que estoy pensando es mayor\n2. El n\xfamero que estoy pensando es menor\n3. \xa1Ese es mi n\xfamero! Bravo!!!\nIngrese su opci\xf3n: 2\nAdivino que el n\xfamero que est\xe1 pensando es: 81\nElija una opci\xf3n\n1. El n\xfamero que estoy pensando es mayor\n2. El n\xfamero que estoy pensando es menor\n3. \xa1Ese es mi n\xfamero! Bravo!!!\nIngrese su opci\xf3n: 2\nAdivino que el n\xfamero que est\xe1 pensando es: 78\nElija una opci\xf3n\n1. El n\xfamero que estoy pensando es mayor\n2. El n\xfamero que estoy pensando es menor\n3. \xa1Ese es mi n\xfamero! Bravo!!!\nIngrese su opci\xf3n: 1\nAdivino que el n\xfamero que est\xe1 pensando es: 79\nElija una opci\xf3n\n1. El n\xfamero que estoy pensando es mayor\n2. El n\xfamero que estoy pensando es menor\n3. \xa1Ese es mi n\xfamero! Bravo!!!\nIngrese su opci\xf3n: 3\nEl adivinador adivin\xf3 su n\xfamero 79 en 6 intentos\n"),t.a.createElement("h2",null,"Ejercicios"),t.a.createElement("h3",null,"Ejercicio 1"),t.a.createElement("p",null,"Escriba un programa que calcule el per\xedmetro de un pol\xedgono. Comience leyendo los valores de las coordenadas ",t.a.createElement("code",null,"x")," e ",t.a.createElement("code",null,"y")," del primer punto en el per\xedmetro del pol\xedgono. Luego, contin\xfae leyendo pares ",t.a.createElement("code",null,"x")," e ",t.a.createElement("code",null,"y")," hasta que el usuario ingrese una l\xednea vac\xeda para la coordenada ",t.a.createElement("code",null,"x"),". Cada vez que se lea una coordenada, se debe calcular la distancia al punto previo y acumularla en el per\xedmetro. Cuando el usuario ingresa una l\xednea vac\xeda, tu programa deber\xe1 sumar la distancia entre el \xfaltimo punto y el primer punto del per\xedmetro. Luego, deber\xeda mostrar el per\xedmetro total. Un ejemplo de entrada y salida se muestra abajo:"),t.a.createElement(_.a,{language:"shell",style:x.a},"Ingrese la coordenada x: 0\nIngrese la coordenada y: 0\nIngrese la coordenada x (vac\xeda si quiere salir): 1\nIngrese la coordenada y: 0\nIngrese la coordenada x (vac\xeda si quiere salir): 0\nIngrese la coordenada y: 1\nIngrese la coordenada x (vac\xeda si quiere salir):\nEl per\xedmetro del pol\xedgono es 3.414213562373095\n"),t.a.createElement("h3",null,"Ejercicio 2"),t.a.createElement("p",null,'En el zol\xf3gico "Animalitos Felices" el precio de la entrada depende de la edad del visitante. Los visitantes que tengan una edad de dos a\xf1os o menos no pagan. Los ni\xf1os entre 3 y 12 a\xf1os pagan 7000 pesos. Las personas de 65 a\xf1os y mayores pagan 9000 pesos. El resto de las visitas paga 11500 pesos para entrar. Escriba un programa que comience leyendo las edades de todos los visitantes de un grupo, una edad por l\xednea. Si el usuario ingresa una l\xednea vac\xeda, significar\xe1 que no hay m\xe1s visitantes en el grupo. Finalmente, el programa deber\xe1 mostrar el costo de admisi\xf3n del grupo.'),t.a.createElement("h3",null,"Ejercicio 3"),t.a.createElement("p",null,"Un bit de paridad es un mecanismo para detectar errores en datos transmitidos por una conexi\xf3n de baja confiabilidad, como por ejemplo una l\xednea telef\xf3nica. La idea es que un bit adicional se transmite luego de transmitir un grupo de 8 bits, de manera de que un error en un bit pueda ser detectado. Los bits de paridad se pueden calcular para paridad par o impar. Si se escoge paridad par, el bit de paridad se escoge de manera de que el n\xfamero total de bits con valor 1 transmitidos (8 bits de datos m\xe1s el bit de paridad) sea par. Por otro lado, cuando se escoge paridad impar, el bit de paridad se escoge de manera de que la cantidad de 1s transmitidos sea impar. Escriba un programa que calcule el bit de paridad para grupos de 8 bits ingresados por usuario, considerando paridad par. El programa debiese leer ",t.a.createElement("code",null,"strings")," que contengan 8 bits hasta que se ingrese una l\xednea vac\xeda. Despu\xe9s de que cada ",t.a.createElement("code",null,"string")," se ingresa, el programa debe indicar si el bit de paridad es 0 o 1. Muestre un mensaje de error apropiado si el usuario ingresa un string que sea algo distinto de 8 bits. Puede usar la funci\xf3n ",t.a.createElement("code",null,"count")," para resolver este problema (leer la documentaci\xf3n)."),t.a.createElement("h3",null,"Ejercicio 4"),t.a.createElement("p",null,"Un string es pal\xedndromo si al escribirlo de forma inversa es id\xe9ntico al string original. Por ejemplo los string ",t.a.createElement("code",null,"ana"),",",t.a.createElement("code",null,"acurruca"),", ",t.a.createElement("code",null,"Amargor pleno con el programa")," son pal\xedndromos. Escriba un programa que lea un string entregado por el usuario y diga si es pal\xedndromo o no."),t.a.createElement("h3",null,"Ejercicio 5"),t.a.createElement("p",null,"Un n\xfamero primo es un entero mayor que 1 que es divisible \xfanicamente por 1 y por s\xed mismo. Escriba una funci\xf3n que reciba un entero como entrada y retorne ",t.a.createElement("code",null,"True")," si el n\xfamero es primo y ",t.a.createElement("code",null,"False")," en caso contrario. Escriba luego un programa que lea un n\xfamero ingresado por usuario y diga si es primo o no. Como requerimiento, la funci\xf3n debe estar en un archivo diferente al del programa, y su c\xf3digo debe importar la funci\xf3n."),t.a.createElement("h3",null,"Ejercicio 6"),t.a.createElement("p",null,"Escriba una funci\xf3n que genere una contrase\xf1a aleatoria. La contrase\xf1a deber\xe1 tener un largo aleatorio entre 7 y 10 caracteres. Cada caracter deber\xe1 ser escogido aleatoriamente desde las posiciones 33 a 126 de la tabla ASCII. Su funci\xf3n no deber\xe1 tener ning\xfan par\xe1metro. La funci\xf3n retornar\xe1 la contrase\xf1a generada. Luego, escriba un programa que importe dicha funci\xf3n y genere ",t.a.createElement("code",null,"N")," contrase\xf1as aleatorias, donde ",t.a.createElement("code",null,"N")," es dado por argumento v\xeda ",t.a.createElement("code",null,"argv"),". Para implementar la funci\xf3n, puede utilizar la funci\xf3n ",t.a.createElement("code",null,"chr"),", leer la documentaci\xf3n."),t.a.createElement("h3",null,"Ejercicio 7"),t.a.createElement("p",null,"Existen distintos algoritmos para ordenar listas de elementos. Un algoritmo bastante simple es el ordenamiento burbuja. El pseudoc\xf3digo del algoritmo es como sigue:"),t.a.createElement(_.a,{language:"shell",style:x.a},"procedimiento bubble_sort(lista)\nN = largo(lista)\nPara i = 0 a N - 1 hacer\n    intercambiado = false\n    para j = 0 a N - 2 hacer\n        Si lista[j] > lista[j+1] entonces\n            intercambiar( lista[i], lista[j+1] )\n            intercambiado = true\n    Si intercambiado == false entonces\n        break\nretornar lista\n"),t.a.createElement("p",null,"Escriba una funci\xf3n que ordene un ",t.a.createElement("code",null,"string")," alfab\xe9ticamente usando bubble sort. Para simplificar el problema, considere que el ",t.a.createElement("code",null,"string")," s\xf3lo contendr\xe1 caract\xe9res num\xe9ricos y letras en min\xfasculas. Python implementa la comparaci\xf3n de strings, as\xed que puede usar el operador ",t.a.createElement("code",null,">"),". Por otro lado los objetos de tipo string son ",t.a.createElement("b",null,"inmutables")," por lo tanto deber\xe1 transformar el ",t.a.createElement("code",null,"string")," a ",t.a.createElement("code",null,"list"),". Luego escriba un programa que dado un ",t.a.createElement("code",null,"string")," ingresado por usuario, muestre el string ordenado alfab\xe9ticamente."),t.a.createElement("p",null,"Ejemplo de uso:"),t.a.createElement(_.a,{language:"python",style:x.a},'texto = "zyxwvutsr"\ntexto_lista = list(texto)\nprint(f"Texto original: {texto}")\nprint(f"Texto ordenado: {\'\'.join(bubble_sort(texto_lista))}")'),t.a.createElement("p",null,"Salida:"),t.a.createElement(_.a,{language:"shell",style:x.a},">python bubble_sort.py\nTexto original: zyxwvutsr\nTexto ordenado: rstuvwxyz"))}));var I=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Estructuras de Datos y repaso de ciclos"),t.a.createElement("p",{className:"lead"},"La semana de estructuras de datos es ya cerca de la \xfaltima semana de este m\xf3dulo de Introducci\xf3n a Python. Es claro que en un corto per\xedodo de tiempo, quedan muchas caracter\xedsticas del lenguaje que explicar. Sin embargo, las herramientas entregadas deber\xedan ser suficientes para empezar a trabajar con ciencia de datos e investigar por ustedes mismos otras bibliotecas no vistas en el curso."),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week3#ciclos"},"Repaso de ciclos y funciones")),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("a",{href:"#/week3#for"},"Ejemplo ciclo for")),t.a.createElement("li",null,t.a.createElement("a",{href:"#/week3#while"},"Ejemplo ciclo while"))),t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week3#estructuras"},"Estructuras de datos t\xedpicas en Python")),t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week3#complejidad"},"Complejidad Asint\xf3tica")),t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week3#funcionales"},"Comprensiones de Lista y Operaciones Funcionales")),t.a.createElement("li",null,t.a.createElement(u.b,{to:"/week3#pandas"},"Data Science con Python y Pandas"))),t.a.createElement("h2",{id:"ciclos"},"Repaso de ciclos y funciones"),t.a.createElement("p",null,"Como repasamos en clases, existen dos tipos de ciclos: ",t.a.createElement("code",null,"while")," y ",t.a.createElement("code",null,"for"),". En la pr\xe1ctica:"),t.a.createElement("ul",null,t.a.createElement("li",null,"Un ciclo ",t.a.createElement("code",null,"for")," se utiliza cuando se itera sobre una secuencia (",t.a.createElement("code",null,"list"),", ",t.a.createElement("code",null,"string"),", etc). Es decir, se sabe de antemano la cantidad de iteraciones."),t.a.createElement("li",null,"Un ciclo ",t.a.createElement("code",null,"while")," se utiliza cuando el criterio de parada es una condici\xf3n.")),t.a.createElement("h3",{id:"for"},"Ejemplo ciclo for"),t.a.createElement("p",null,"Consideremos el problema de sumar los 100 primeros n\xfameros naturales. Para ello podemos usar la funci\xf3n ",t.a.createElement("code",null,"range"),". Esta funci\xf3n b\xe1sicamente genera una secuencia de n\xfameros (ver documentaci\xf3n). Para calcular la suma, adem\xe1s podemos usar una variable ",t.a.createElement("b",null,"acumuladora")," que ir\xe1 acumulando la suma a medida que se ",t.a.createElement("b",null,"itera")," en el ciclo. Como inicialmente la suma total es 0, el acumulador se ",t.a.createElement("b",null,"inicializa")," en valor 0:"),t.a.createElement(_.a,{language:"python",style:x.a},'suma = 0\nfor i in range(101):\n    suma += i\n\nprint(f"La suma de los 100 primeros n\xfameros naturales es: {suma}")\n'),t.a.createElement("p",null,"El resultado del c\xf3digo deber\xeda mostrar 5050. El c\xf3digo funciona de la siguiente forma, primero se define una variable acumuladora, que ir\xe1 acumulando el resultado de la suma, la variable se le da el identificador ",t.a.createElement("code",null,"suma"),". Posteriormente, se itera sobre los 100 primeros n\xfameros naturales (",t.a.createElement("code",null,"range(101)")," generar\xe1 la secuencia ",t.a.createElement("code",null,"0, 1, 2, ..., 100"),"), en este caso ",t.a.createElement("code",null,"i")," es la variable de iteraci\xf3n y en cada iteraci\xf3n tomar\xe1 un valor de la secuencia dada por ",t.a.createElement("code",null,"range"),". Dentro del bloque del ciclo ",t.a.createElement("code",null,"for")," se agrega la instrucci\xf3n de sumar cada n\xfamero de la secuencia generada utilizando ",t.a.createElement("code",null,"range")," y se actualiza el valor de la suma, haciendo",t.a.createElement("code",null,"suma += i")," que es equivalente a hacer ",t.a.createElement("code",null,"suma = suma + i"),". Al terminar el ciclo, debiese haberse calculado la suma deseada. Queda como ejercicio para el lector, intente implementar el c\xf3digo anterior utilizando un ciclo ",t.a.createElement("code",null,"while"),"."),t.a.createElement("h3",{id:"while"},"Ejemplo ciclo while"),t.a.createElement("p",null,"Veamos ahora un ejemplo de ciclo ",t.a.createElement("code",null,"while"),". Para ello, y como repaso, implementaremos una funci\xf3n que calcule la ra\xedz cuadrada de un n\xfamero ",t.a.createElement("code",null,"a")," utilizando el m\xe9todo de Newton-Raphson. B\xe1sicamente:"),t.a.createElement("p",null,t.a.createElement(k.a,{math:"$$x_{k+1} = x_{k} - \\frac{x_{k}^2 - a}{2x_{k}}$$\n          Hasta que $|x_{k + 1} - x_{k}| \\leq tol$ y $x_0$ es arbitrario, idealmente cercano a la soluci\xf3n, por lo que se puede usar el valor \n          de $a$ dado por el usuario, y tol es una tolerancia dada por el usuario, consideremos por defecto precisi\xf3n hasta el tercer decimal, es decir \n          $tol = 10^{-3}$.\n          "})),t.a.createElement("p",null,"Se observa, que el criterio de detenci\xf3n del algoritmo es una condici\xf3n, es decir, a priori no se sabe exactamente cu\xe1ntas veces se va a iterar. Una posible implementaci\xf3n de este algoritmo es como sigue:"),t.a.createElement(_.a,{language:"python",style:x.a},"def raiz_newton_raphson(a, tol=1e-3):\n  x0 = a\n  x1 = x0 - (x0 ** 2 - a) / (2 * x0)\n\n  while not abs(x1 - x0) <= tol:\n      x0 = x1\n      x1 = x0 - (x0 ** 2 - a) / (2 * x0)\n\n  return x1\n"),t.a.createElement("p",null,"Notamos que usamos la palabra reservada ",t.a.createElement("code",null,"def")," con la que b\xe1sicamente estamos definiendo una funci\xf3n que podreemos reutilizar. Por ejemplo, calculemos las ra\xedces de diferentes n\xfameros:"),t.a.createElement(_.a,{language:"python",style:x.a},'print(f"La raiz de 2 es {raiz_newton_raphson(2)}")\nprint(f"La raiz de 25 es {raiz_newton_raphson(25)}")\nprint(f"La raiz de 19 es {raiz_newton_raphson(19)}")\n'),t.a.createElement("p",null,"Lo que entrega como salida:"),t.a.createElement(_.a,{language:"shell",style:x.a},"La raiz de 2 es 1.4142135623746899\nLa raiz de 25 es 5.000000000053723\nLa raiz de 19 es 4.358898943541578\n"),t.a.createElement("p",null,"Estos son dos ejemplos que ilustran las diferencias entre usar ciclos ",t.a.createElement("code",null,"for")," y ",t.a.createElement("code",null,"while"),"."),t.a.createElement("h2",{id:"estructuras"},"Estructuras de datos t\xedpicas en Python"),t.a.createElement("p",null,"Una estructura de datos es b\xe1sicamente una colecci\xf3n de valores y relaciones entre estos valores para representar datos y operar sobre ellos. Python implementa estructuras de datos t\xedpicas como por ejemplo: listas,  tuplas, conjuntos, pares llave-valor, entre otros."),t.a.createElement("h3",null,"Listas"),t.a.createElement("p",null,"Una lista es una colecci\xf3n de objetos. Para declarar una lista, se utilizan corchetes, por ejemplo, si queremos declarar una lista con nombres de frutas, podemos hacer: ",t.a.createElement("code",null,'frutas = ["pera", "lim\xf3n", "manzana"]'),". Para obtener el tama\xf1o de una lista, podemos utilizar la funci\xf3n ",t.a.createElement("code",null,"len"),", por ejemplo ",t.a.createElement("code",null,"len(frutas)")," ser\xeda 3, ya que la lista contiene 3 elementos. Para acceder a un elemento en la posici\xf3n ",t.a.createElement("code",null,"i")," de la lista, utilizamos corchetes y el \xedndice: ",t.a.createElement("code",null,"lista[i]"),". Cabe destacar que los \xedndices de las listas ",t.a.createElement("b",null,"comienzan desde 0"),", por lo tanto los \xedndices v\xe1lidos van desde ",t.a.createElement("code",null,"0")," hasta ",t.a.createElement("code",null,"n - 1")," donde",t.a.createElement("code",null,"n")," es el tama\xf1o de la lista. Por ejemplo si queremos acceder al segundo elemento de la lista frutas (lim\xf3n), podemos ejecutar",t.a.createElement("code",null,"frutas[1]"),". Otra caracter\xedstica importante de las listas, es que son objetos ",t.a.createElement("b",null,"mutables")," es decir, pueden alterarse en tiempo de ejecuci\xf3n, por ejemplo si hacemos ",t.a.createElement("code",null,'frutas[0] = "frutilla"'),", ahora la lista ",t.a.createElement("code",null,"frutas")," contendr\xe1 los elementos ",t.a.createElement("code",null,'["frutilla", "lim\xf3n", "manzana"]'),"."),t.a.createElement("h3",null,"Tuplas"),t.a.createElement("p",null,"Una tupla es similar a una lista, con la excepci\xf3n de que una tupla es ",t.a.createElement("b",null,"inmutable"),", es decir, una vez declarada, no puede modificarse en tiempo de ejecuci\xf3n. Para definir una tupla, se usan par\xe9ntesis. Por ejemplo, podemos definir una tupla que contenga frutas: ",t.a.createElement("code",null,'frutas = ("pera", "lim\xf3n", "manzana")'),". La funci\xf3n ",t.a.createElement("code",null,"len")," tambi\xe9n puede utilizarse para obtener el largo de una tupla, y para acceder al elemento en la posici\xf3n ",t.a.createElement("code",null,"i")," de la tupla se hace id\xe9ntico al caso de las listas. Sin embargo, si tratamos de hacer algo como ",t.a.createElement("code",null,'frutas[0] = "frutilla"'),", python arrojar\xe1 el siguiente error: ",t.a.createElement("code",null,"TypeError: 'tuple' object does not support item assignment"),'. Esto es debido a que las tupla son inmutables. En general las tuplas se utilizan cuando no se planea modificar la colecci\xf3n de elementos (ej. definir una constante), o se requiere una colecci\xf3n inmutable (ej. Una "llave" en un par llave-valor).'),t.a.createElement("h3",null,"Set"),t.a.createElement("p",null,"Un ",t.a.createElement("code",null,"set"),' es una colecci\xf3n de datos, similar a una lista, con la excepci\xf3n de que no puede contener elementos repetidos. Se utiliza en general para tener una "memoria" para consultar y hacer m\xe1s eficientes algunos procesos, como por ejemplo evitar hacer c\xe1lculos repetidos. Un set se define como sigue: ',t.a.createElement("code",null,'frutas = {"manzana", "pera", "pi\xf1a"}'),". Por ejemplo, supongamos que quisiera saber si el pl\xe1tano est\xe1 dentro del set, esta consulta se har\xeda mediante: ",t.a.createElement("code",null,'"pl\xe1tano" in frutas'),", y en este caso retornar\xeda ",t.a.createElement("code",null,"False"),". Esta operaci\xf3n tambi\xe9n se puede hacer en listas, pero es menos eficiente que en sets, debido a que la complejidad asint\xf3tica de buscar un elemento en una lista es mayor a la complejidad asint\xf3tica de buscar un elemento en un set. Para mas detalle, referirse a la secci\xf3n de complejidad asint\xf3tica."),t.a.createElement("h3",null,"Diccionarios"),t.a.createElement("p",null,"Esto lo veremos en la \xfaltima semana del curso, pero vale la pena digerirlo de inmediato. Un diccionario es un conjunto de pares clave-valor, y que son eficientes para consultar elementos (b\xe1sicamente las claves est\xe1n almacenadas en una estructura similar a un set). Por ejemplo, supongamos que queremos implementar una bolsa de supermercado, se podr\xeda hacer algo como: ",t.a.createElement("code",null,'compras = { "platano": 3, "peras": 2, "manzana": 1 }'),". Luego, si quisiera consultar por cu\xe1ntas manzanas tiene el cliente, podr\xeda hacer algo como: ",t.a.createElement("code",null,'compras["manzana"]'),", lo cual retornar\xeda 1. La restricci\xf3n de los diccionarios es que las claves deben ser ",t.a.createElement("b",null,"inmutables"),"."),t.a.createElement("h2",{id:"complejidad"},"Complejidad Asint\xf3tica"),t.a.createElement("p",null,'Estos son temas bastante relevantes a la hora de resolver problemas reales. Lo digo por experiencia propia, muchos algoritmos, o modelos de machine learning o de procesamiento de datos, podr\xedan no correr dependiendo del volumen y recursos computacionales disponibles. Y esto no lo resuelve m\xe1gicamente tener computaci\xf3n en la "nube" (que te\xf3ricamente no hay diferencia entre eso y tener un data center). Hay algoritmos que no escalan, y principalmente es porque tienen que resolver problemas de optizaci\xf3n que no escalan o que no son paralelizables para computarlos en tiempos pr\xe1cticos. Dado que el curso es peque\xf1o, no puedo pretender abordar todo, pero s\xed puedo dar una pincelada de qu\xe9 significa la complejidad asint\xf3tica. Para ello tomemos como ejemplo el problema de buscar un elemento en una lista.'),t.a.createElement("p",null,"Para simplificar el problema, supongamos que tenemos una lista de enteros, y supongamos que queremos saber si el elemento ",t.a.createElement("code",null,"n"),"se encuentra dentro de la lista. Un algoritmo sencillo ser\xeda, iterar por cada elemento de la lista, y si el elemento coincide con el elemento buscado, ",t.a.createElement("b",null,"retornar")," ",t.a.createElement("code",null,"True"),", si la b\xfasqueda termina y no se encuentra el elemento retornar ",t.a.createElement("b",null,"False"),"."),t.a.createElement(_.a,{language:"python",style:x.a},"def busqueda_lineal(lista, n):\n  for item in lista:\n      if item == n:\n          return True\n  return False\n"),t.a.createElement("p",null," Tenemos diferentes casos posibles:"),t.a.createElement("ul",null,t.a.createElement("li",null,"El caso optimista: El elemento se encuentra en la primera posici\xf3n de la lista, por lo tanto se itera una s\xf3la vez."),t.a.createElement("li",null,"El peor caso: El elemento se encuentra al final de la lista. Por lo tanto se deber\xeda iterar ",t.a.createElement("code",null,"n")," veces donde ",t.a.createElement("code",null,"n")," es la cantidad de elementos de la lista."),t.a.createElement("li",null,"El caso promedio: Donde se revisar\xe1n una cantidad de elementos proporcional a la cantidad de elementos de la lista.")),t.a.createElement("p",null,t.a.createElement(k.a,{math:"Es intuitivo que se iterar\xe1 una cantidad de veces proporcional a $n$, y a lo mucho, se iterar\xe1 $n$ veces. Para expresar esta inituici\xf3n \n          se utiliza lo que se conoce como notaci\xf3n $Big$-$O$, y en este caso se dice que el algoritmo es $O(n)$, es decir que su tiempo de ejecuci\xf3n \n          ser\xe1 proporcional a la entrada, en este caso el largo de la lista de entrada. El algoritmo de b\xfasqueda mencionado se conoce como <b>b\xfasqueda lineal</b> y \n          la raz\xf3n de ello es que su complejidad asint\xf3tica ($big$-$O$) es proporcional al largo de la lista, b\xe1sicamente el tiempo de ejecuci\xf3n podr\xeda \n          expresarse como una funci\xf3n lineal $T(n) = an + b$ del largo de la lista. \n          "})),t.a.createElement("p",null,"Supongamos ahora que la lista de n\xfameros se encuentra ordenada. \xbfSer\xe1 posible hacer la b\xfasqueda m\xe1s eficiente? (que el tiempo de ejecuci\xf3n sea menor). Si la lista estuviese ordenada, por ejemplo ",t.a.createElement("code",null,"1, 2, 3, 100, 993, 1000, 2934"),", podr\xedamos pensar una forma m\xe1s inteligente de buscar. Por ejemolo, supongamos que buscamos el n\xfamero ",t.a.createElement("code",null,"993"),". Podr\xedamos empezar por el medio de la lista, es decir, el elemento que est\xe9 en la posici\xf3n ",t.a.createElement("code",null,"(0 + 6)//2 = 3")," (6 es el largo de la lista y // representa la divisi\xf3n entera). Comenzar\xedamos entonces por el elemento en el \xedndice 3, que en este caso ser\xeda 100. Se tiene que ",t.a.createElement("code",null,"100 != 993"),", pero adem\xe1s sabemos que la lista est\xe1 ordenada, por lo tanto podemos descartar todos los elementos que est\xe9n entre las posiciones 0 y 3, y buscar elementos entre las posiciones 3 y 6. Podemos nuevamente buscar el punto medio ",t.a.createElement("code",null,"(3 + 6)//2 = 4"),", y en este caso encontramos el n\xfamero ",t.a.createElement("code",null,"993")),".",t.a.createElement("p",null,t.a.createElement(k.a,{math:"Si se observa, el espacio de b\xfasqueda se va dividiendo a la mitad en cada iteraci\xf3n. Por lo tanto, el n\xfamero m\xe1ximo de iteraciones \n          que pueden ocurrir es $log_2(n)$, por lo tanto, decimos que la complejidad asint\xf3tica de este algoritmo de b\xfasqueda es $O(log_2(n))$.\n          "})),t.a.createElement("p",null,"Este algor\xedtmo cl\xe1sico de b\xfasqueda, se conoce como ",t.a.createElement("b",null,"b\xfasqueda binaria")," y se implementar\xeda como sigue:"),t.a.createElement(_.a,{language:"python",style:x.a},"def busqueda_binaria(lista, n):\n  found = False\n  a = 0\n  b = len(lista) - 1\n  while not found and a <= b:\n      mid = (a + b) // 2\n      if lista[mid] == n:\n          found = True\n      elif n > lista[mid]:\n          a = mid + 1\n      else:\n          b = mid - 1\n  return found\n"),t.a.createElement("p",null,t.a.createElement(k.a,{math:"Consideremos un caso m\xe1s simple ahora. Supongamos que queremos calcular la suma de los $n$ primeros n\xfameros naturales. Hasta ahora \n          hemos visto dos formas de lograr esto. Una forma puede ser con un ciclo y un acumulador, \xbfQu\xe9 complejidad asint\xf3tica tiene este algoritmo? \n          Como se observa, se itera $n$ veces, donde $n$ es la entrada del algoritmo, por lo tanto la complejidad asint\xf3tica ser\xeda $O(n)$ es decir, \n          el tiempo de c\xf3mputo ser\xeda proporcional al valor de $n$ en este algoritmo. \xbfPodemos hacerlo m\xe1s eficiente? Si recuerdan en la semana 1, vimos \n          la f\xf3rmula de Gauss:\n\n          $$\\sum_{i=0}^n i = \\frac{n(n+1)}{2}$$\n\n          B\xe1sicamente, el resultado se obtiene con un s\xf3lo c\xe1lculo, e independiente del valor de n, se requiere la misma serie de operaciones aritm\xe9ticas \n          para obtener el resultado de la sumatoria. Por lo tanto decimos que este algoritmo es de complejidad constante, y la notaci\xf3n es $O(1)$. En \n          este caso independiente del valor de $n$, el tiempo de ejecuci\xf3n no var\xeda.\n          "})),t.a.createElement("p",null,"Para las estructuras de datos t\xedpicas en python, y la complejidad asint\xf3tica de sus operaciones (m\xe9todos), puede revisar",t.a.createElement("a",{href:"https://wiki.python.org/moin/TimeComplexity",rel:"noopener noreferrer",target:"_blank"}," la documentaci\xf3n de python"),"."),t.a.createElement("h2",{id:"funcionales"},"Comprensiones de Lista y Operaciones Funcionales"),t.a.createElement("p",null,"Este es un t\xf3pico bien ",t.a.createElement("em",null,"pyth\xf3nico")," en el sentido de que es la forma python de escribir c\xf3digo. Al principio se puede hacer un poco complejo de entender, pero con pr\xe1ctica, creanme que ahorra bastante tiempo saber esta caracter\xedstica de python, por las siguientes razones:"),t.a.createElement("ul",null,t.a.createElement("li",null,"Escribir c\xf3digo se hace m\xe1s r\xe1pido y menos repetitivo"),t.a.createElement("li",null,"No todas las personas tienen el mismo estilo al escribir c\xf3digo, por lo que les ayudar\xe1 a diversificar su entendimiento c\xf3digos python.")),t.a.createElement("h3",null,"Comprensiones de Listas"),t.a.createElement("p",null,"Las comprensiones de lista son una forma compacta de generar listas en python. Por ejemplo, supongamos que queremos los n\xfameros entre 1 y 300 que sean divisibles por 3 y por 5. Existen varias formas de hacer esto, pero una forma compacta de lograrlo en python ser\xeda como sigue: ",t.a.createElement("code",null,"numeros = [n for n in range(1, 301) if n % 3 == 0 and n % 5 == 0]"),". Dicho c\xf3digo se puede leer como ",t.a.createElement("em",null,"Quiero todos los n, que est\xe9n en el rango 1 a 300, y que sean divisibles por 3 y por 5."),"."),t.a.createElement("h3",null,"Operaciones Funcionales"),t.a.createElement("p",null,"Python tiene una biblioteca de operaciones que siguen un paradigma de programaci\xf3n funcional. La idea de este paradigma es que agiliza el prototipado, permitiendo escribir poco c\xf3digo que realiza operaciones compuestas. La desventaja de este paradigma, es que es un poco complicado de entender al comienzo, sobre todo si hemos estado aprendiendo un paradigma procedural (que es lo que hemos estado haciendo desde las primeras semanas). Las funciones que se utilizan frecuentemente son: ",t.a.createElement("code",null,"map"),", ",t.a.createElement("code",null,"filter"),", ",t.a.createElement("code",null,"reduce"),"."),t.a.createElement("p",null,"La funci\xf3n ",t.a.createElement("code",null,"map"),", b\xe1sicamente le aplica una funci\xf3n a todos los elementos de una secuencia, y retorna una secuencia con los retornos de la funci\xf3n aplicada. Veamos dos ejemplos, uno simple y uno m\xe1s sofisticado. Para el caso simple, supongamos que tenemos una lista de n\xfameros y queremos si los n\xfameros son divisibles por 3 y por 5"),t.a.createElement(_.a,{language:"python",style:x.a},"lista = [1, 2, 15, 4, 256, 100, 60]\nfor result in map(lambda x: x % 3 == 0 or x % 5 == 0, lista):\n    print(result)\n"),t.a.createElement(_.a,{language:"shell",style:x.a},"False\nFalse\nTrue\nFalse\nFalse\nTrue\nTrue\n"),t.a.createElement("p",null,"Notar que usamos una expresi\xf3n que no hab\xedamos visto antes: ",t.a.createElement("code",null,"lambda"),". No se asusten, lo que hace ",t.a.createElement("code",null,"lambda")," es b\xe1sicamente definir una ",t.a.createElement("b",null,"funci\xf3n anonima"),", es decir, una funci\xf3n sin nombre. La sintaxis es similar a la de las funciones y sigue el siguiente patr\xf3n: ",t.a.createElement("code",null,"lambda argumentos: retorno"),". Por lo que, el siguiente c\xf3digo es equivalente:"),t.a.createElement(_.a,{language:"python",style:x.a},"def divisible_por_5_o_3(n):\n  return n % 3 == 0 or n % 5 == 0\n\n\nlista = [1, 2, 15, 4, 256, 100, 60]\nfor result in map(divisible_por_5_o_3, lista):\n    print(result)\n"),t.a.createElement("p",null,"La ventaja de usar ",t.a.createElement("code",null,"lambda")," es, si requiero una funci\xf3n que s\xf3lo utilizar\xe9 una vez, \xbfpara qu\xe9 agregar m\xe1s c\xf3digo definiendola v\xeda ",t.a.createElement("code",null,"def")," si puedo definirla en la misma l\xednea que la utilizar\xe9? Esto permite agilizar escribir c\xf3digo."),t.a.createElement("p",null,"Ahora un ejemplo sofisticado, supongamos que tenemos una lista de oraciones, y queremos contar la cantidad de palabras positivas de las oraciones. Por el momento, supongamos que las palabras positivas est\xe1n en un set. Podr\xedamos aplicar la funci\xf3n map como sigue:"),t.a.createElement(_.a,{language:"python",style:x.a},'PALABRAS_POSITIVAS = {\n  "beneficios",\n  "excelentes",\n  "buen",\n  "positivo",\n  "optimista",\n  "encanta",\n  "bien",\n}\n\noraciones = [\n    "El producto es un asco",\n    "Los beneficios son excelentes",\n    "En el restor\xe1n tuve un muy buen servicio",\n    "Soy muy positivo y optimista y me encanta hablar bien de los dem\xe1s",\n]\n\nconteo = map(lambda s: sum(s.count(w) for w in PALABRAS_POSITIVAS), oraciones)\nfor index, conteo in enumerate(conteo):\n    print(f"Palabras positivas oraci\xf3n {index + 1}: {conteo}")\n'),t.a.createElement("p",null,"Lo que da como salida:"),t.a.createElement(_.a,{language:"shell",style:x.a},"Palabras positivas oraci\xf3n 1: 0\nPalabras positivas oraci\xf3n 2: 2\nPalabras positivas oraci\xf3n 3: 1\nPalabras positivas oraci\xf3n 4: 4\n"),t.a.createElement("p",null,"La funci\xf3n ",t.a.createElement("code",null,"filter"),", como el nombre lo sugiere, filtra una secuencia, en base a una funci\xf3n, y elimina los elementos que no retornen ",t.a.createElement("code",null,"True")," para esa funci\xf3n. Por ejemplo, supongamos que tenemos una lista de palabras, y queremos s\xf3lo las palabras con m\xe1s de 3 caract\xe9res:"),t.a.createElement(_.a,{language:"python",style:x.a},'palabras = ["el", "animal", "come", "las", "Am\xe9rica", "lo", "pos", "laguna"]\nfor palabra in filter(lambda x: len(x) > 3, palabras):\n    print(palabra)\n'),t.a.createElement(_.a,{language:"shell",style:x.a},"animal\ncome\nAm\xe9rica\nlaguna\n"),t.a.createElement("p",null,"Finalmente la funci\xf3n ",t.a.createElement("code",null,"reduce"),", es la forma funcional de agregar datos. Supongamos que queremos calcular la sumatoria de una lista de n\xfameros. Esto podr\xeda hacerse iterando por cada elemento de la lista o secuencia, e ir acumulando los resultados de la suma. Sin embargo reduce, permite implementar este patr\xf3n, de forma simple con una funci\xf3n que reciba dos argumentos y agregando los datos:"),t.a.createElement(_.a,{language:"python",style:x.a},"from functools import reduce\n\n\nlista = [1, 4, 9, 7, 10, 11]\nprint(reduce(lambda x, y: x + y, lista))\n"),t.a.createElement("p",null,"El resultado de la operaci\xf3n anterior es ",t.a.createElement("code",null,"42"),". La forma en que opera reduce es la siguiente:"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("code",null,"(((((1 + 4) + 9) + 7) + 10) + 11)")),t.a.createElement("li",null,t.a.createElement("code",null,"((((5 + 9) + 7) + 10) + 11)")),t.a.createElement("li",null,t.a.createElement("code",null,"(((14 + 7) + 10) + 11)")),t.a.createElement("li",null,t.a.createElement("code",null,"((21 + 10) + 11)")),t.a.createElement("li",null,t.a.createElement("code",null,"(31 + 11)")),t.a.createElement("li",null,t.a.createElement("code",null,"42"))),t.a.createElement("p",null,"Claro que el poder de ",t.a.createElement("code",null,"reduce")," no es \xfanicamente calcular la suma de los elementos de una secuencia, si no que puede realizar cualquier operaci\xf3n de agregado de una secuencia."),t.a.createElement("h2",{id:"pandas"},"Data Science con Python y Pandas"),t.a.createElement("p",null,"No es que el lenguaje python est\xe9 directamente ligado con Ciencia de Datos, ni nada por el estilo. La ciencia de datos es agn\xf3stica al lenguaje, sin embargo, Python es un lenguaje simple de aprender, r\xe1pido de escribir, tiene eficiencia para la mayor\xeda de los casos de uso y mucho soporte de la comunidad. Por las razones mencionadas, es que se han desarrollado muchas bibliotecas que ayudan a resolver problemas de ciencia de datos. Una de las bibliotecas m\xe1s utilizadas para manipulaci\xf3n de datos es ",t.a.createElement("code",null,"pandas"),". Pandas b\xe1sicamente permite manejar datos de forma tabular, usando como abstracci\xf3n o representaci\xf3n los objetos de tipo ",t.a.createElement("code",null,"DataFrame"),". Dicha abstracci\xf3n, permite extraer datos de diferentes fuentes y tener la misma representaci\xf3n sobre los datos, lo que permite f\xe1cil acceso y operaci\xf3n."),t.a.createElement("p",null,"Dentro del curso trabajaremos con archivos ",t.a.createElement("code",null,".csv"),", pero ",t.a.createElement("code",null,"pandas")," soporta una gran variedad de fuentes de datos tales como: ",t.a.createElement("code",null,"excel"),", datos de APIs como por ejemplo una API que env\xede objetos ",t.a.createElement("code",null,"JSON"),", diferentes motores de BBDD, etc. En la pr\xe1ctica, es m\xe1s com\xfan leer datos de BBDD, y por lo general, los que mantienen la plataforma de datos son el equipo de Ingenier\xeda de Datos, en lo que com\xfanmente se conoce como ",t.a.createElement("em",null,"Data Warehouse"),". Tambi\xe9n en la industria se escuchan varios conceptos rimbombantes, como por ejemplo",t.a.createElement("em",null,"data lake"),', pero eso s\xf3lo significa que es un "repositorio" donde hay datos en su forma "cruda" (por ejemplo un disco en la nube), aunque tu propia laptop podr\xeda ser un data lake (tienes textos, bytes, archivos en m\xfaltiples formatos sin procesar).'),t.a.createElement("p",null,"Dejo a continuaci\xf3n un ejemplo de pandas, donde podr\xe1n revisar operaciones b\xe1sicas y algunos consejos:"),t.a.createElement("p",null,t.a.createElement("a",{href:"https://github.com/dpalmasan/homepage/blob/master/notebooks/intro_python/Ejemplo%20Pandas%20Intro%20Python.ipynb",target:"_blank",rel:"noopener noreferrer"},"Ver ejemplo de pandas")),t.a.createElement("h2",null,"Ejercicios"),t.a.createElement("h3",null,"Ejercicio 1"),t.a.createElement("p",null,"Escriba, utilizando comprensiones de lista una funci\xf3n que genere los n\xfameros pares desde 2 hasta n, donde n es un argumento de la funci\xf3n."),t.a.createElement("h3",null,"Ejercicio 2"),t.a.createElement("p",null,"Escriba una funci\xf3n que dada una lista de ",t.a.createElement("code",null,"float")," entregue la desviaci\xf3n est\xe1ndar de la muestra."),t.a.createElement("h3",null,"Ejercicio 3"),t.a.createElement("p",null,"Escriba una funci\xf3n que dadas dos vectores representados como listas num\xe9ricas, calcule el coseno de dichos vectores."),t.a.createElement("p",null,t.a.createElement(k.a,{math:"El coseno entre dos vectores $u$ y $v$ puede calcularse como:\n\n          $$cos(u, v) = \\frac{u\\cdot v}{\\|u\\|\\|v\\|}$$\n\n          Donde $u\\cdot v = \\sum_{i=0}^{n - 1} u_iv_i$ y para un vector $x$ arbitrario $\\|x\\| = \\sqrt{\\sum_{i=0}^{n-1} x_i^2}$. Notar que para \n          las componentes del vector, utilizamos los \xedndices desde $0$ hasta $n-1$ para coincidir con las listas. Para implementar el coseno puede \n          implementar 3 funciones: <code>producto_punto(u, v)</code>, <code>norma(x)</code> y utilizando estas dos funciones, puede \n          implementar la funci\xf3n <code>coseno(u, v)</code>. \n          "})),t.a.createElement("p",null,t.a.createElement("b",null,"Voy a agregar m\xe1s ejercicios simples de repaso, sigo buscando.")),t.a.createElement("h2",null,"Ejercicios avanzados"),t.a.createElement("h3",null,"Pregunta 1"),t.a.createElement("p",null,"Un n\xfamero feliz, es un n\xfamero que lleva a 1 luego de aplicarle una secuencia de pasos, en las cuales en cada paso, el n\xfamero es reemplazado por la suma de los cuadrados de sus d\xedgitos, es decir, si seguimos haciendo este reemplazo, eventualmente llegaremos a 1. Por ejemplo, 19 es un n\xfamero feliz, ya que:"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("code",null,"1^2 + 9^2 = 82")),t.a.createElement("li",null,t.a.createElement("code",null,"8^2 + 2^2 = 68")),t.a.createElement("li",null,t.a.createElement("code",null,"6^2 + 8^2 = 100")),t.a.createElement("li",null,t.a.createElement("code",null,"1^2 + 0^2 + 0^2= 1"))),"Por otro lado, 20 no es un n\xfamero feliz, ya que:",t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("code",null,"2^2 + 0^2 = 4")),t.a.createElement("li",null,t.a.createElement("code",null,"4^2 = 16")),t.a.createElement("li",null,t.a.createElement("code",null,"1^2 + 6^2 = 37")),t.a.createElement("li",null,t.a.createElement("code",null,"3^2 + 7^2= 58")),t.a.createElement("li",null,t.a.createElement("code",null,"5^2 + 8^2= 89")),t.a.createElement("li",null,t.a.createElement("code",null,"8^2 + 9^2= 145")),t.a.createElement("li",null,t.a.createElement("code",null,"1^2 + 4^2 + 5^2= 42")),t.a.createElement("li",null,t.a.createElement("code",null,"4^2 + 2^2 = 20"))),t.a.createElement("p",null,"Escriba una funci\xf3n que reciba un n\xfamero como argumento de entrada y retorne ",t.a.createElement("code",null,"True")," si el n\xfamero es feliz y ",t.a.createElement("code",null,"False")," en caso contrario."),t.a.createElement("h3",null,"Pregunta 2"),t.a.createElement("p",null,"Dado un ",t.a.createElement("code",null,"string"),", excriba una funci\xf3n que ordene el string de acuerdo a la frecuencia de cada caracter, en orden ascendente. Si dos elementos tienen la misma frecuencia, se considera el orden lexicogr\xe1fico. Por ejemplo, considere el string ",t.a.createElement("code",null,"halalelluejah")," debe ser ordenado como ",t.a.createElement("code",null,"llllaaahheeuj"),", si el string es ",t.a.createElement("code",null,"aaaabeebccccc")," debe ser ordenado como ",t.a.createElement("code",null,"cccccaaaabbee"),"."),t.a.createElement("h3",null,"Pregunta 3"),t.a.createElement("p",null,"Implemente una funci\xf3n que dada una lista de enteros, retorne la m\xe1xima diferencia entre dos elementos de la lista, tal que el elemento mayor aparezca despu\xe9s del elemento menor en la lista (es decir si ",t.a.createElement("code",null,"maxdiff = lista[j] - lista[i], j > i"),") Analice la complejidad asint\xf3tica de su algoritmo"),t.a.createElement(k.a,{math:"Tip: Una soluci\xf3n simple puede ser implementada en $O(n^2)$, implemente y justifique. \xbfPuede resolver este problema en $O(n)$? \n        Implemente un algoritmo en caso afirmativo. \xbfPuede resolverse en $O(1)$? Justifique su respuesta.\n          "}))}));var N=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"APIs"),t.a.createElement("p",{className:"lead"},"Esta semana es de APIs, un tema bastante importante y que es bueno tener conocimiento. Por ejemplo, existen fuentes de datos de terceros con las cuales uno se comunica v\xeda peticiones HTTP. Desde el lado de la fuente de datos (usualmente un servidor externo), para pedir datos espec\xedficos, se define una API (del ingl\xe9s ",t.a.createElement("em",null,"Application Programming Interface"),", que es b\xe1sicamente un contrato que especifica funciones, par\xe1metros, entradas y salidas, sin dar detalle de como est\xe1n construidas internamente. Una API sea por web o directamente, puede pensarse como un conjunto de funciones que reciben entradas y salidas, la diferencia en este caso con las funciones que hemos visto en python, es que los datos se transmitten v\xeda web."),t.a.createElement("h3",null,"Un poco m\xe1s sobre diccionarios"),t.a.createElement("p",null,"Dado que dentro del curso lidiaremos con APIs que entregan datos en forma de ",t.a.createElement("code",null,"JSON")," (aunque hay otras APIs web que no necesariamente usan",t.a.createElement("code",null,"JSON")," para ello), es que debemos tener conocimiento y dominio sobre diccionarios, ya que un ",t.a.createElement("code",null,"JSON")," tiene bastante similitudes con los diccionarios en python. Por ello, primero repasaremos un poco de diccionarios. Para los ejemplos que siguen, consideremos el siguiente diccionario, que contendr\xe1 peak de usuarios diarios logueados en un sitio ficticio:"),t.a.createElement(_.a,{language:"python",style:x.a},'usuarios_log = {\n    "Lunes": 140,\n    "Martes": 200,\n    "Mi\xe9rcoles": 360,\n    "Jueves": 140,\n    "Viernes": 200,\n    "S\xe1bado": 140,\n    "Domingo": 140\n}\n'),t.a.createElement("p",null,"Como ya se expuso en el material complementario de la semana 3, un diccionario es un conjunto de clave-valor, que permite eficientemente acceder a una clave determinada y extraer el valor de ella. Por ejemplo, si queremos ver la cantidad de clicks que hubo el Jueves, se podr\xeda hacer v\xeda ",t.a.createElement("code",null,"usuarios_log['Jueves']"),". Supongamos ahora, que queremos mostrar todas las claves y valores del diccionario. Al igual que las listas, los ",t.a.createElement("code",null,"strings"),", los diccionarios soportan iteraciones. Por ejemplo, si queremos mostrar la cantidad de usuarios para todos los d\xedas, la forma ",t.a.createElement("em",null,"pyth\xf3nica")," de hacerlo es:"),t.a.createElement(_.a,{language:"python",style:x.a},'for dia, conteo_usuarios in usuarios_log.items():\n    print(f"Usuarios {dia}: {conteo_usuarios}")\n'),t.a.createElement(_.a,{language:"shell",style:x.a},"Usuarios Lunes: 140\nUsuarios Martes: 200\nUsuarios Mi\xe9rcoles: 360\nUsuarios Jueves: 140\nUsuarios Viernes: 200\nUsuarios S\xe1bado: 140\nUsuarios Domingo: 140\n"),t.a.createElement("p",null,"Supongamos ahora, que queremos saber los d\xedas en que la cantidad de usuarios fue menor que ",t.a.createElement("code",null,"190"),", ello se podr\xeda hacer combinando iteraciones con condiciones, como sigue:"),t.a.createElement(_.a,{language:"python",style:x.a},'for dia, conteo_usuarios in usuarios_log.items():\n    if conteo_usuarios < 190:\n        print(f"{dia}")\n'),t.a.createElement(_.a,{language:"shell",style:x.a},"Lunes\nJueves\nS\xe1bado\nDomingo\n"),t.a.createElement("p",null,"Supongamos que queremos calcular la cantidad de usuarios promedio conectados durante la semana y durante el fin de semana. Para ello podemos implementar una funci\xf3n ",t.a.createElement("code",null,"es_fin_de_semana"),"."),t.a.createElement(_.a,{language:"python",style:x.a},'def es_fin_de_semana(dia):\n    return dia in {"S\xe1bado", "Domingo"}\n\n\nusuarios_semana = {}\nWEEKDAY_KEY = "D\xeda de Semana"\nWEEKEND_KEY = "Fin de Semana"\n\nfor dia, conteo_usuarios in usuarios_log.items():\n    if es_fin_de_semana(dia):\n        usuarios_semana[WEEKEND_KEY] = (\n            usuarios_semana.get(WEEKEND_KEY, 0) + conteo_usuarios\n        )\n    else:\n        usuarios_semana[WEEKDAY_KEY] = (\n            usuarios_semana.get(WEEKDAY_KEY, 0) + conteo_usuarios\n        )\n\nusuarios_semana[WEEKEND_KEY] /= 2\nusuarios_semana[WEEKDAY_KEY] /= 5\nprint(usuarios_semana)\n'),t.a.createElement(_.a,{language:"shell",style:x.a},"{'D\xeda de Semana': 208.0, 'Fin de Semana': 140.0}"),t.a.createElement("h4",null,"F\xe9 de erratas a contenido de diapositivas y quiz\xe1s sesi\xf3n online"),t.a.createElement("p",null,"Revisando el material me encontr\xe9 con ejemplos de c\xf3mo contar ocurrencias en un diccionario, usando ",t.a.createElement("code",null,"groupby")," de la biblioteca ",t.a.createElement("code",null,"itertools"),". Si bien, se puede lograr lo esperado, es mala idea hacerlo de esa forma, porque sobre-complica un problema que en esencia es simple de resolver. El ejemplo que muestra el material es el siguiente:"),t.a.createElement(_.a,{language:"python",style:x.a},"lista = [1, 2, 6, 7, 2, 5, 8, 9, 1, 2, 9, 7]\nlista.sort()\ndiccionario = {k: len(list(v)) for k, v in groupby(lista)}\nprint(diccionario)\n"),t.a.createElement("p",null,"Para los que tengan alguna experiencia en bases de datos y alguna variaci\xf3n de ",t.a.createElement("code",null,"SQL"),", el ",t.a.createElement("code",null,"groupby")," del m\xf3dulo ",t.a.createElement("code",null,"itertools")," no es como el de ",t.a.createElement("code",null,"SQL")," (ese s\xed se usa para agrupar y contar). En este caso, ",t.a.createElement("code",null,"groupby")," es simiar a ",t.a.createElement("code",null,"uniq")," de ",t.a.createElement("code",null,"UNIX")," (pueden leer la documentaci\xf3n para mas detalle)."),t.a.createElement("p",null,t.a.createElement(k.a,{math:"Por otro lado, el c\xf3digo funciona correctamente pero es sobre-complicar un problema que en esencia es simple. Adem\xe1s, requiere ordenar la lista \n          para artificialmente aplicar <code>groupby</code> y contar elementos. No s\xe9 si recuerdan el material complementario de complejidad \n          asint\xf3tica. Ordenar una lista tiene una complejidad asint\xf3tica $O(n\\cdot log(n))$, pero el problema de contar elementos tiene una \n          complejidad asint\xf3tica $O(n)$, por lo tanto: \xa1Adem\xe1s de sobre-complicar el problema, lo estamos haciendo ineficientemente! De hecho \n          para contar elementos en una lista, est\xe1 la funci\xf3n <code>Counter</code> de la biblioteca <code>collections</code>, que se puede \n          importar usando <code>from collections import Counter</code>. El c\xf3digo de arriba ser\xeda reemplazado por:\n          "})),t.a.createElement(_.a,{language:"python",style:x.a},"diccionario = Counter(lista)\nprint(diccionario)\n"),t.a.createElement("p",null,"Como se puede observar, es mucho m\xe1s simple de leer y adem\xe1s es m\xe1s eficiente. Por completitud, supongamos que tenemos un diccionario de usuarios y sus tallas de plan m\xf3vil para su celular (",t.a.createElement("code",null,"XS, S, M"),"), y queremos saber cu\xe1ntos usuarios poseen una talla determinada."),t.a.createElement(_.a,{language:"python",style:x.a},'personas = {\n    "id1": "XS",\n    "id2": "S",\n    "id3": "S",\n    "id4": "M",\n    "id5": "XS",\n    "id6": "XS",\n    "id7": "M",\n    "id8": "XS",\n    "id9": "S",\n}\n'),t.a.createElement("p",null,"Este problema lo podemos ver como un problema de contar ocurrencias, y se puede resolver como sigue:"),t.a.createElement(_.a,{language:"python",style:x.a},"conteo_tallas = {}\nfor persona_id, talla in personas.items():\n    conteo_tallas[talla] = conteo_tallas.get(talla, 0) + 1\n\nprint(conteo_tallas)\n\n# Usando Counter\nconteo_tallas2 = Counter(personas.values())\nprint(conteo_tallas2)\n"),t.a.createElement("h3",null,"APIs web y peticiones HTTP"),t.a.createElement("p",null,"En esta secci\xf3n no ahondar\xe9 mucho en detalles sobre c\xf3mo funciona una API, definir cliente servidor, ya que eso debiese estar cubierto en el material de las sesiones online. Sin embargo, me gustar\xeda mostrar un ejemplo pr\xe1ctico de comunicarse con una API en python usando la biblioteca ",t.a.createElement("code",null,"requests"),". \xbfPor qu\xe9 es importante saber sobre APIs web? En particular, muchos servicios por terceros (ejemplos: Amazon Web Services, servicios de Google Cloud Platform, Facebook, Paypal, Pingdom, etc.) ofrecen APIs web para traer datos. Esto se conoce como fuentes externas de datos, y sirve en caso de que se quiera proponer extraer otro tipo de datos para agregar a modelos de anal\xedtica, o para incluso corregir datos que ya hayan sido ingestado a las tablas."),t.a.createElement("h4",null,"Jugando con peticiones web"),t.a.createElement("p",null,"De las sesiones online, deben haber visto al menos 4 diferentes m\xe9todos para peticiones web: ",t.a.createElement("code",null,"GET"),", ",t.a.createElement("code",null,"POST"),", ",t.a.createElement("code",null,"PUT"),", ",t.a.createElement("code",null,"DELETE"),". Existen otros m\xe9todos, pero de momento no ser\xe1 necesario ahondar en ellos. Por otro lado, ",t.a.createElement("b",null,"una aclaraci\xf3n"),", he visto en la pr\xe1ctica que muchas ",t.a.createElement("code",null,"API")," que retornarn ",t.a.createElement("code",null,"JSON")," por alguna raz\xf3n se les llama ",t.a.createElement("code",null,"API REST"),", sin embargo esto a muchas veces es incorrecto. Si quieren realmente entender lo que significa ",t.a.createElement("code",null,"REST"),", pueden leer la tesis del creador de este estilo arquitectural: ",t.a.createElement("a",{href:"https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm",without:!0,rel:"noopener noreferrer",target:"_blank"},"REST thesis"),". Esto lo detallo por completitud, en la pr\xe1ctica muchas veces se les llama ",t.a.createElement("code",null,"API REST")," a ",t.a.createElement("code",null,"APIs")," que no siguen realmente esta arquitectura."),t.a.createElement("p",null,"Para el ejemplo de diferentes m\xe9todos, utilizaremos ",t.a.createElement("a",{href:"https://reqres.in/",without:!0,rel:"noopener noreferrer",target:"_blank"},"reqres"),", que es b\xe1sicamente un sitio donde podemos testear m\xe9todos de una API. Si instalaron ",t.a.createElement("code",null,"POSTMAN"),", pueden usar esa herramienta para trabajar. Yo en particular, prefiero hacerlo por t\xe9rminal ya que siento que es m\xe1s r\xe1pido. As\xed que alternativamente al material de ",t.a.createElement("code",null,"POSTMAN")," que hay online, les ense\xf1ar\xe9 a enviar requests v\xeda terminal. Para no extenderme mucho, s\xf3lo pondr\xe9 ejemplos de m\xe9todos ",t.a.createElement("code",null,"GET")," y ",t.a.createElement("code",null,"POST"),"."),t.a.createElement("p",null,"Supongamos que queremos listar los usuarios de la ",t.a.createElement("code",null,"API"),". Seg\xfan el sitio, el punto de acceso, o ",t.a.createElement("code",null,"url")," es el siguiente: ",t.a.createElement("code",null,"https://reqres.in/api/users"),". Enviaremos una petici\xf3n web a esta ",t.a.createElement("code",null,"url"),", pondr\xe9 dos alternativas para hacerlo, una es v\xeda el comando ",t.a.createElement("code",null,"curl")," (si tienes una terminal basada ",t.a.createElement("code",null,"UNIX"),", es decir ",t.a.createElement("code",null,"Linux")," o ",t.a.createElement("code",null,"MacOS"),"). En ",t.a.createElement("code",null,"Windows"),", s\xf3lo proveer\xe9 una alternativa usando ",t.a.createElement("code",null,"Powershell"),", ya que creo que no viene nativamente instalado un programa en ",t.a.createElement("code",null,"cmd"),", por lo tanto, si no tienen ",t.a.createElement("code",null,"Powershell"),", usen ",t.a.createElement("code",null,"POSTMAN"),"."),t.a.createElement(_.a,{language:"shell",style:x.a},'curl https://reqres.in/api/users\n{"page":1,"per_page":6,"total":12,"total_pages":2,"data":\n[{"id":1,"email":"george.bluth@reqres.in","first_name":"George","last_name":"Bluth","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg"},\n{"id":2,"email":"janet.weaver@reqres.in","first_name":"Janet","last_name":"Weaver","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg"},\n{"id":3,"email":"emma.wong@reqres.in","first_name":"Emma","last_name":"Wong","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/olegpogodaev/128.jpg"},\n{"id":4,"email":"eve.holt@reqres.in","first_name":"Eve","last_name":"Holt","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg"},\n{"id":5,"email":"charles.morris@reqres.in","first_name":"Charles","last_name":"Morris","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/stephenmoon/128.jpg"},\n{"id":6,"email":"tracey.ramos@reqres.in","first_name":"Tracey","last_name":"Ramos","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg"}],\n"ad":{"company":"StatusCode Weekly","url":"http://statuscode.org/","text":"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things."}}%\n'),t.a.createElement("p",null,"En ",t.a.createElement("code",null,"Windows Powershell")," se puede hacer usando el comando ",t.a.createElement("code",null,"Invoke-WebRequest"),":"),t.a.createElement(_.a,{language:"shell",style:x.a},'Invoke-WebRequest -Uri https://reqres.in/api/users\n\n\nStatusCode        : 200\nStatusDescription : OK\nContent           : {"page":1,"per_page":6,"total":12,"total_pages":2,"data":[{"id":1,"email":"george.bluth@reqres.in",\n                    "first_name":"George","last_name":"Bluth","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/\n                    ca...\nRawContent        : HTTP/1.1 200 OK\n                    Connection: keep-alive\n                    Access-Control-Allow-Origin: *\n                    CF-Cache-Status: HIT\n                    Age: 2954\n                    cf-request-id: 0409dc416c0000f7dea9086200000001\n                    Expect-CT: max-age=604800, report-uri="https:...\nForms             : {}\nHeaders           : {[Connection, keep-alive], [Access-Control-Allow-Origin, *], [CF-Cache-Status, HIT], [Age,\n                    2954]...}\nImages            : {}\nInputFields       : {}\nLinks             : {}\nParsedHtml        : mshtml.HTMLDocumentClass\nRawContentLength  : 1221\n'),t.a.createElement("p",null,"Ahora supongamos que queremos probar crear un usuario, esto seg\xfan la p\xe1gina se har\xeda con la misma ",t.a.createElement("code",null,"url"),", excepto que debe hacerse con una petici\xf3n ",t.a.createElement("code",null,"POST")," y que el cuerpo o ",t.a.createElement("code",null,"body")," de la petici\xf3n debe tener los datos del usuario."),t.a.createElement(_.a,{language:"shell",style:x.a},'curl --header "Content-Type: application/json" --request POST --data \'{"name":"Oscar","job":"data scientist"}\' https://reqres.in/api/users\n{"name":"Oscar","job":"data scientist","id":"61","createdAt":"2020-07-19T18:13:35.277Z"}% \n'),t.a.createElement(_.a,{language:"shell",style:x.a},'Invoke-WebRequest -Uri https://reqres.in/api/users -Method POST -Body @{name="Oscar";job="data scientist"} \n\nStatusCode        : 201\n StatusDescription : Created\n Content           : {"name":"Oscar","job":"data scientist","id":"883","createdAt":"2020-07-19T18:13:17.707Z"}\n RawContent        : HTTP/1.1 201 Created\n                    Connection: keep-alive\n                    Access-Control-Allow-Origin: *\n                    CF-Cache-Status: DYNAMIC\n                    cf-request-id: 0409e0cf4c000074f3dd323200000001\n                     Expect-CT: max-age=604800, report-uri="https://...\nForms             : {}\nHeaders           : {[Connection, keep - alive], [Access - Control - Allow - Origin, *], [CF - Cache - Status, DYNAMIC],\n                    [cf-request-id, 0409e0cf4c000074f3dd323200000001]...}\n Images            : {}\nInputFields       : {}\nLinks             : {}\nParsedHtml        : mshtml.HTMLDocumentClass\nRawContentLength  : 89\n'),t.a.createElement("h4",null,"Ejemplo pr\xe1ctico"),t.a.createElement("p",null,"Dejar\xe9 un par de enlaces con distintas APIs p\xfablicas para que jueguen. Les recomendar\xeda probar unas con autenticaci\xf3n y otras sin autenticaci\xf3n."),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("a",{href:"https://github.com/public-apis/public-apis",target:"_blank",rel:"noopener noreferrer"},"https://github.com/public-apis/public-apis")),t.a.createElement("li",null,t.a.createElement("a",{href:"https://punkapi.com/",target:"_blank",rel:"noopener noreferrer"},"https://punkapi.com/"))),t.a.createElement("p",null,"Para los ejemplos propuestos, utilizaremos la ",t.a.createElement("code",null,"punkapi"),", que b\xe1sicamente es una API para comunicarse con una base de datos de cervezas. Lo primero que debe hacerse al interactuar con una API es leer la documentaci\xf3n, para obtener informaci\xf3n de las entidades que se almacenan (tipos de datos) y de los puntos de acceso (",t.a.createElement("em",null,"endpoints"),") para enviar peticiones HTTP. En el caso de la API, la documentaci\xf3n puede leerse en: ",t.a.createElement("a",{href:"https://punkapi.com/documentation/v2",target:"_blank",rel:"noopener noreferrer"},"https://punkapi.com/documentation/v2")),t.a.createElement("p",null,"Supongamos que queremos comunicarnos con esta API y que por ahora s\xf3lo le daremos soporte a peticiones tipo ",t.a.createElement("code",null,"GET"),". De la documentaci\xf3n podemos extraer la ",t.a.createElement("code",null,"url")," base de la API. Por otro lado, vemos que las API entrega como respuesta un JSON, por lo tanto nuestro c\xf3digo en python deber\xeda empezar definiendo las variables pertinentes, e importando bibliotecas para trabajar con peticiones ",t.a.createElement("code",null,"HTTP")," y",t.a.createElement("code",null,"json"),":"),t.a.createElement(_.a,{language:"python",style:x.a},'import requests\nimport json\n\n\n# Agregar otros m\xe9todos si se da soporte, ejemplo: {"GET", "POST", "PUT", "DELETE"}\nSUPPORTED_HTTP_REQ_METHODS = {"GET"}\nAPI_URL = "https://api.punkapi.com/v2/beers"\n'),t.a.createElement("p",null,"Ahora supongamos que queremos implementar una funci\xf3n que traiga los datos de una cerveza, dado el ",t.a.createElement("code",null,"id")," de la cerveza. Podemos ver de la documentaci\xf3n (es importante SIEMPRE leer la documentaci\xf3n de todo, sean API, sean libs python, sean comandos UNIX, etc.) que el punto de acceso es ",t.a.createElement("code",null,"https://api.punkapi.com/v2/beers/:id"),", donde ",t.a.createElement("code",null,"id")," puede ser un entero, representando el identificador de la cerveza, o si se quiere extraer una cerveza al azar se puede usar ",t.a.createElement("code",null,"random"),". Supongamos que la firma de nuestra funci\xf3n ",t.a.createElement("code",null,"request")," tendr\xe1 ",t.a.createElement("b",null,"4")," argumentos: ",t.a.createElement("code",null,"method"),", ",t.a.createElement("code",null,"data"),", ",t.a.createElement("code",null,"headers"),", ",t.a.createElement("code",null,"id"),". Por defecto ",t.a.createElement("code",null,"data")," y ",t.a.createElement("code",null,"headers")," ser\xe1n ",t.a.createElement("code",null,"None"),", y el ",t.a.createElement("code",null,"id")," tendr\xe1 valor ",t.a.createElement("code",null,"random"),". Luego podemos definir la siguiente funci\xf3n:"),t.a.createElement(_.a,{language:"python",style:x.a},'def beer_request(method, data=None, headers=None, id="random"):\n    url = f"{API_URL}/{id}"\n    method = method.upper()\n    if method not in SUPPORTED_HTTP_REQ_METHODS:\n        raise ValueError(\n            f"Provided method: {method} not in {SUPPORTED_HTTP_REQ_METHODS}"\n        )\n    return requests.request(method, url, data=data, headers=headers)\n'),t.a.createElement("p",null,"Notar que en el ejemplo estamos usando ",t.a.createElement("code",null,"raise")," para b\xe1sicamente lanzar error si se pasa un m\xe9todo incorrecto (que no estemos dando soporte). La funci\xf3n retornar\xe1 un objeto de tipo ",t.a.createElement("code",null,"Response"),". Luego podemos hacer una petici\xf3n a la API, usando nuestra funci\xf3n:"),t.a.createElement(_.a,{language:"python",style:x.a},'# GET\nresponse = beer_request("GET")\nresponse.raise_for_status()\nbeer = json.loads(response.text)\nprint(beer)\n'),t.a.createElement("p",null,"Primero enviamos una petici\xf3n ",t.a.createElement("code",null,"GET")," al servidor. Luego analizamos la respuesta, el m\xe9todo ",t.a.createElement("code",null,"raise_for_status")," b\xe1sicamente chequea el ",t.a.createElement("code",null,"status_code")," de la respuesta y si es distinto de ",t.a.createElement("code",null,"20X"),", se lanzar\xe1 un error. Finalmente, como la respuesta es un ",t.a.createElement("code",null,"JSON"),", se extrae el texto de la respuesta y se carga en un diccionario en python, utilizando ",t.a.createElement("code",null,"json.loads"),", que lo que hace es, toma un ",t.a.createElement("code",null,"string")," que represente un ",t.a.createElement("code",null,"JSON")," y lo transforma a un diccionario en python:"),t.a.createElement(_.a,{language:"shell",style:x.a},"'[{'id': 26, 'name': 'Skull Candy', 'tagline': 'Pacific Hopped Amber Bitter.', 'first_brewed': '02/2010', 'description': 'The first beer that we brewed on our newly commissioned 5000 litre brewhouse in Fraserburgh 2009. A beer with the malt and body of an English bitter, but the heart and soul of vibrant citrus US hops.', 'image_url': 'https://images.punkapi.com/v2/keg.png', 'abv': 3.5, 'ibu': 33, 'target_fg': 1012, 'target_og': 1038, 'ebc': 50, 'srm': 25, 'ph': 4.4, 'attenuation_level': 68.4, 'volume': {'value': 20, 'unit': 'litres'}, 'boil_volume': {'value': 25, 'unit': 'litres'}, 'method': {'mash_temp': [{'temp': {'value': 65, 'unit': 'celsius'}, 'duration': 75}], 'fermentation': {'temp': {'value': 19, 'unit': 'celsius'}}, 'twist': None}, 'ingredients': {'malt': [{'name': 'Extra Pale', 'amount': {'value': 2.81, 'unit': 'kilograms'}}, {'name': 'Caramalt', 'amount': {'value': 0.63, 'unit': 'kilograms'}}, {'name': 'Crystal 120', 'amount': {'value': 0.31, 'unit': 'kilograms'}}], 'hops': [{'name': 'Cascade', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'start', 'attribute': 'bitter'}, {'name': 'Cascade', 'amount': {'value': 18.8, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}, {'name': 'Centennial', 'amount': {'value': 18.8, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}, {'name': 'Amarillo', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}, {'name': 'Simcoe', 'amount': {'value': 31.3, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}], 'yeast': 'Wyeast 1056 - American Ale\u2122'}, 'food_pairing': ['Haggis bon bons', 'Rosemary and lemon roast chicken', 'Oatmeal and cranberry cookies'], 'brewers_tips': \"Make sure your hops are well broken up and mixed in when added to the kettle for aroma additions. The wort is not boiling so is not agitating the hops to allow mixing. If the hops aren't steeped properly in the wort you won't get the maximum flavour impact.\", 'contributed_by': 'Sam Mason <samjbmason>'}]"),t.a.createElement("p",null,"Ahora supongamos que queremos consultar todas las cervezas que existen en la base de datos del servidor, pero tambi\xe9n nos gustar\xeda filtrar por alg\xfan criterio. De la documentaci\xf3n, se observa que pas\xe1ndole ",t.a.createElement("code",null,"query params")," a la ",t.a.createElement("code",null,"url")," podemos filtrar en base a alguna de las propiedades de la cerveza. Para implementar lo mencionado, podemos definir la siguiente funci\xf3n:"),t.a.createElement(_.a,{language:"python",style:x.a},"def get_beers(query=None):\n    url = API_URL\n    return requests.get(url, params=query)\n"),t.a.createElement("p",null,"Notar que podr\xedamos haber modificado la ",t.a.createElement("code",null,"url"),", agregando query params v\xeda: ",t.a.createElement("code",null,"?param1=value&param=2"),", pero eso es un poco sozo de hacer, adem\xe1s que la biblioteca ",t.a.createElement("code",null,"requests")," maneja eso por nosotros. La forma correcta y elegante de hacerlo, es usando el par\xe1metro ",t.a.createElement("code",null,"params")," de las requests, el cual llenar\xe1 el query string por nosotros. Como ejemplo, supongamos que queremos las cervezas con el IBU mayor que 90, para ello, de la documentaci\xf3n observamos que tenemos que usar el par\xe1metro ",t.a.createElement("code",null,"ibu_gt"),", adem\xe1s queremos contar la cantidad de cervezas que cumplen este criterio, luego:"),t.a.createElement(_.a,{language:"python",style:x.a},'# Cervezas con IBU > 90\nresponse = get_beers({"ibu_gt": "90"})\nresponse.raise_for_status()\nbeers = json.loads(response.text)\nprint(len(beers))\nprint(beers[0])\n'),t.a.createElement("p",null,"Finalmente obtenemos de salida (por espacio s\xf3lo mostramos la primera cerveza de las 25 de la lista):"),t.a.createElement(_.a,{language:"shell",style:x.a},"25\n{'id': 17, 'name': 'AB:06', 'tagline': 'Imperial Black IPA.', 'first_brewed': '04/2011', 'description': 'Our sixth Abstrakt, this imperial black IPA combined dark malts with a monumental triple dry-hop, using an all-star team of some of our favourite American hops. Roasty and resinous.', 'image_url': 'https://images.punkapi.com/v2/17.png', 'abv': 11.2, 'ibu': 150, 'target_fg': 1013, \n'target_og': 1098, 'ebc': 70, 'srm': 35, 'ph': None, 'attenuation_level': 87, 'volume': {'value': 20, 'unit': 'litres'}, 'boil_volume': {'value': 25, 'unit': 'litres'}, 'method': {'mash_temp': \n[{'temp': {'value': 65, 'unit': 'celsius'}, 'duration': 90}], 'fermentation': {'temp': {'value': 17, 'unit': 'celsius'}}, 'twist': 'White cane sugar: 150g at middle'}, 'ingredients': {'malt': [{'name': 'Pale Ale', 'amount': {'value': 6.13, 'unit': 'kilograms'}}, {'name': 'Crystal 150', 'amount': {'value': 0.25, 'unit': 'kilograms'}}, {'name': 'Caramalt', 'amount': {'value': 0.38, 'unit': 'kilograms'}}, {'name': 'Carafa Special Malt Type 1', 'amount': {'value': 0.13, 'unit': 'kilograms'}}, {'name': 'Carafa Special Malt Type 3', 'amount': {'value': 0.13, 'unit': 'kilograms'}}], 'hops': [{'name': 'Hop Extract', 'amount': {'value': 20, 'unit': 'grams'}, 'add': 'start', 'attribute': 'bitter'}, {'name': 'Amarillo', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'start', 'attribute': 'bitter'}, {'name': 'Chinook', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}, {'name': 'Cascade', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}, {'name': 'Centennial', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}, {'name': 'Columbus', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'end', 'attribute': 'flavour'}, {'name': 'Chinook', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'dry hop', 'attribute': 'aroma'}, {'name': 'Cascade', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'dry hop', 'attribute': 'aroma'}, {'name': 'Centennial', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'dry hop', 'attribute': 'aroma'}, {'name': 'Columbus', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'dry hop', 'attribute': 'aroma'}, {'name': 'Amarillo', 'amount': {'value': 25, 'unit': 'grams'}, 'add': 'dry hop', 'attribute': 'aroma'}], 'yeast': 'Wyeast 1272 - American Ale II\u2122'}, 'food_pairing': ['Coffee dusted venison loin', 'Memphis-style beef short ribs', 'Chocolate orange brownies'], 'brewers_tips': 'Boil down to desired OG (about 17 litres).', 'contributed_by': 'Sam Mason <samjbmason>'}\n"),t.a.createElement("h4",null,"Ejemplo pr\xe1ctico con autenticaci\xf3n"),t.a.createElement("p",null,"Para repasar, pueden probar jugar con APIs que requieran autenticaci\xf3n. Por ejemplo, vamos a la API de Zomato, la cual pueden encontrar en el siguiente enlace: ",t.a.createElement("a",{href:"https://developers.zomato.com/api",without:!0,rel:"noopener noreferrer",target:"_blank"},"API Zomato"),". Pueden registrarse para obtener una ",t.a.createElement("code",null,"api_key"),". Luego pueden revisar la documentaci\xf3n de la API, para ver c\xf3mo se utiliza y qu\xe9 tipo de peticiones hacer. Supongamos que queremos utilizar el punto de acceso ",t.a.createElement("code",null,"/cities"),". De la documentaci\xf3n, podemos ver que bastar\xeda enviar una petici\xf3n ",t.a.createElement("code",null,"GET")," a dicho punto de acceso, pero la petici\xf3n en el ",t.a.createElement("code",null,"header")," debe contener nuestra API key. Adem\xe1s, la API soporta otros par\xe1metros, supongamos que queremos buscar la ciudad ",t.a.createElement("code",null,"Santiago Chile"),", para ello deber\xedamos pasarle el par\xe1metro ",t.a.createElement("code",null,"q")," a la petici\xf3n. Todo lo mencionado se puede implementar como sigue:"),t.a.createElement(_.a,{language:"python",style:x.a},'import json\nimport requests\n\n\nAPI_BASE_URL = "https://developers.zomato.com/api/v2.1"\nAPI_KEY = "<AQU\xcd PONER SU API KEY>"\n\n\ndef get_cities(headers=None, params=None):\n    url = f"{API_BASE_URL}/cities"\n    return requests.get(url, headers=headers, params=params)\n\n\n# Notar como pas\xe9 la API_KEY a headers para la petici\xf3n HTTP\n# En otros casos podr\xeda ir en el payload (como data) o a veces como params, depende de la API\nresponse = get_cities(headers={"user-key": API_KEY}, params={"q": "Santiago Chile"})\nresponse.raise_for_status()\ncities = json.loads(response.text)\nprint(cities) \n'),t.a.createElement("p",null,"Como resultado se obtiene: "),t.a.createElement(_.a,{language:"shell",style:x.a},"{'location_suggestions': [{'id': 83, 'name': 'Santiago', 'country_id': 42, 'country_name': 'Chile', \n'country_flag_url': 'https://b.zmtcdn.com/images/countries/flags/country_42.png', 'should_experiment_with': 0, \n'has_go_out_tab': 0, 'discovery_enabled': 0, 'has_new_ad_format': 0, 'is_state': 0, 'state_id': 0, 'state_name': '', \n'state_code': ''}], 'status': 'success', 'has_more': 0, 'has_total': 0, 'user_has_addresses': True}\n"),t.a.createElement("h3",null,"Tips para Desaf\xedos"),t.a.createElement("h4",null,"Ventas"),t.a.createElement("ol",null,t.a.createElement("li",null,"Recuede c\xf3mo iterar pyth\xf3nicamente en un diccionario y use la clave-valor de forma adecuada."),t.a.createElement("li",null,"Idem al punto 1."),t.a.createElement("li",null,"Puede generar el nuevo diccionario iterando sobre el diccionario original."),t.a.createElement("li",null,"\xbfRecuerdan el ejemplo de la b\xfasqueda lineal del material complementario para la semana 3?"),t.a.createElement("li",null,"Descomponga el problema de la siguiente forma: Defina c\xf3mo operar\xe1 para un ",t.a.createElement("em",null,"quarter"),". Luego puede generar una lista de ",t.a.createElement("em",null,"quarters")," y resolver el problema completo (\xbfc\xf3mo podr\xeda definir un quarter?)"),t.a.createElement("li",null,"Idem a los otros ejercicios. Como tip, para testear su funci\xf3n con el ejemplo del enunciado (notar que tambi\xe9n existen las comprensiones de ",t.a.createElement("code",null,"dict"),"):"),t.a.createElement(_.a,{language:"python",style:x.a},"test = {\n    key: value for key, value in zip(range(12), [20000] * 6 + [30000] * 3 + [40000] * 3)\n}\nprint(agrupar(test))\n")),t.a.createElement("h4",null,"API"),t.a.createElement("p",null,"Primero que todo, ",t.a.createElement("b",null,"olv\xeddese")," de los tips entregados en el enunciado (ya los report\xe9, tienen que modificarse)."),t.a.createElement("ol",null,t.a.createElement("li",null,"Cree una funci\xf3n que soporte los m\xe9todos dados por el enunciado y retorne el objeto ",t.a.createElement("code",null,"Response")," (similar al ejemplo dado)"),t.a.createElement("li",null,"Chequee siempre el c\xf3digo de estado v\xeda ",t.a.createElement("code",null,"raise_for_status")),t.a.createElement("li",null,"Para crear un usuario use m\xe9todo ",t.a.createElement("code",null,"POST"),"."),t.a.createElement("li",null,"\xbfPara actualizar usuario qu\xe9 m\xe9todo debe utilizar? pista: Empieza con P."),t.a.createElement("li",null,"Idem a casos anteriores, usar m\xe9todo que empieza con D.")))}));var T=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Estad\xedstica Univariada y Control de Flujo"),t.a.createElement("p",{className:"lead"},"El m\xf3dulo anterior, de ",t.a.createElement("em",null,"Introducci\xf3n a la Programaci\xf3n en Python")," tuvo como objetivo dar nociones de programaci\xf3n requeridas a la hora de trabajar en el mundo tecnol\xf3gico. Se vieron conceptos como utilizar un IDE (Visual Studio Code), utilizar una terminal, variables y tipos en ",t.a.createElement("code",null,"Python"),", ciclos y m\xe9todos, estructuras de datos, complejidad asint\xf3tica, una vista r\xe1pida a bibliotecas utilizadas en ciencia de datos (ej. ",t.a.createElement("code",null,"pandas"),", ",t.a.createElement("code",null,"numpy")," y finalmente trabajar con fuentes de datos externas v\xeda peticiones HTTP (cap\xedtulo API). El objetivo de este m\xf3dulo es trabajar con la matem\xe1tica b\xe1sica (estad\xedstica, probabilidad, etc.) requerida para resolver problemas con datos. Por ello, de preferencia, nos alejaremos de ",t.a.createElement("code",null,"VSCode")," y utilizaremos ",t.a.createElement("code",null,"Jupyter"),"."),t.a.createElement("h3",null,"Empezando con Jupyter"),t.a.createElement("p",null,"Para los que tengan instalado ",t.a.createElement("code",null,"Anaconda"),", probablemente ya tengan instalado este paquete y pueden simplemente iniciar una sesi\xf3n de jupyter desde la ",t.a.createElement("code",null,"UI")," de ",t.a.createElement("code",null,"Anaconda"),". Los que no instalaron ",t.a.createElement("code",null,"Anaconda"),", pueden instalar ",t.a.createElement("code",null,"jupyter")," ejecutando el comando ",t.a.createElement("code",null,"pip install jupyter"),". Para iniciar jupyter: ",t.a.createElement("code",null,"jupyter notebook"),", por defecto se iniciar\xe1 un proceso en el puerto ",t.a.createElement("code",null,"8888"),". Si prefieren utilizar otro puerto, o ya est\xe1n usando el puerto ",t.a.createElement("code",null,"8888"),", pueden ejecutar el comando ",t.a.createElement("code",null,"jupyter notebook --port=<PUERTO>"),", por ejemplo, si queremos iniciar el proceso para que use el puerto ",t.a.createElement("code",null,"5000")," pueden ejecutar ",t.a.createElement("code",null,"jupyter notebook --port=5000"),"."),t.a.createElement("p",null,"Una vez est\xe9n en su sesi\xf3n de notebook, se les abrir\xe1 el navegador y los redireccionar\xe1 a la ",t.a.createElement("code",null,"url")," donde se inici\xf3 el proceso de Jupyter, en caso de que esto no ocurra autom\xe1ticamente, se puede copiar y pegar el enlace en el navegador. Luego, para crear un notebook seguir la siguiente im\xe1gen:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:8,md:8},t.a.createElement(v.a,{src:"/homepage/imgs/notebook.png",fluid:!0}))),t.a.createElement("p",null,t.a.createElement("b",null,"\xbfPor qu\xe9 ahora usamos jupyter notebook, fue ",t.a.createElement("code",null,"VSCode")," una p\xe9rdida de tiempo?")," La respuesta es no, en general se utiliza jupyter notebook en la fase de prototipado de la soluci\xf3n. Por ejemplo, documentar diferentes experimentos, analizar los datos de forma exploratoria (estad\xedstica descriptiva, visualizaciones), probar diferentes enfoques. Finalmente, cuando se obtiene un modelo, viene la fase de ponerlo en marcha, y para ello se requiere volver a escribir ",t.a.createElement("code",null,"scripts")," o funciones. Ya en esta fase, idealmente usar un IDE, como por ejemplo Visual Studio Code."),t.a.createElement("p",null,"Puede usar sintaxis de ",t.a.createElement("code",null,"Markdown")," para escribir mejores notas en su notebook de jupyter. Por otro lado, jupyter tambi\xe9n renderiza f\xf3rmulas en ",t.a.createElement("code",null,"Latex"),", lo que puede ser \xfatil a la hora de documentar experimentos, por ejemplo:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:8,md:8},t.a.createElement(v.a,{src:"/homepage/imgs/markdown.png",fluid:!0}))),t.a.createElement("p",null,"Para escribir ",t.a.createElement("code",null,"Markdown")," debe escoger la opci\xf3n, en la celda. Para replicar el ejemplo anterior:"),t.a.createElement(_.a,{language:"markdown",style:x.a},"## Estad\xedstica Descriptiva\n\nPara calcular la **media** de un conjunto de datos:\n\n$$\\bar{x} = \\frac{1}{n} \\sum_{i=1}^{n} x_i$$\n"),t.a.createElement("p",null,"Puede leer m\xe1s sobre ",t.a.createElement("code",null,"Markdown")," y ",t.a.createElement("code",null,"Latex")," en los siguientes enlaces:"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("a",{href:"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet",target:"_blank",rel:"noopener noreferrer"},"Markdown")),t.a.createElement("li",null,t.a.createElement("a",{href:"https://www.latex-project.org/",target:"_blank",rel:"noopener noreferrer"},"Latex"))),t.a.createElement("h3",null,"Estad\xedstica descriptiva"),t.a.createElement("p",null,"En esta semana del m\xf3dulo de fundamentos de data science trabajaremos con 3 m\xe9tricas de estad\xedstica descriptiva:"),t.a.createElement("ol",null,t.a.createElement("li",null,"Media"),t.a.createElement("li",null,"Mediana"),t.a.createElement("li",null,"Desviaci\xf3n Est\xe1ndar")),t.a.createElement("p",null,t.a.createElement(k.a,{math:"La media de un conjunto de datos discreto es el valor central, espec\xedficamente, la suma de los valores dividido por el n\xfamero de \n          valores.\n          $$media = \\frac{1}{n} \\sum_{i=1}^{n} x_i$$\n          "})),t.a.createElement("p",null,t.a.createElement(k.a,{math:" F\xe9 de erratas a la f\xf3rmula de la mediana, la forma de calcularla es, ordenar las muestras. Luego, si se tienen $n$ muestras, \n          en\xfameradas de $1$ a $n$, es decir $x_1, x_2, \\ldots, x_n$, la mediana se calcula como:\n          $$mediana = \\frac{1}{2} \\left( x_{\\lfloor (n+1)/2\\rfloor} + x_{\\lceil (n+1)/2\\rceil} \\right)$$\n          "})),t.a.createElement("p",null,t.a.createElement(k.a,{math:" Supongamos que tenemos las siguientes observaciones de altura $h = (1, 3, 3, 5, 7)$, en este caso la mediana ser\xeda $3$, y aplicando \n          la f\xf3rmula, se tienen $5$ observaciones, por lo tanto se requiere $0.5 \\cdot (x_{3} + x_{3}) = x_{3} = 3$. Ahora supongamos que tenemos las \n          siguientes observaciones $h = (1, 2, 3, 4, 5, 6, 8, 9)$, en este caso el n\xfamero de observaciones es $8$, n\xfamero par. Por lo tanto seg\xfan \n          la f\xf3rmula $0.5 \\cdot (x_{4} + x_{5}) = 0.5 \\cdot (4 + 5) = 4.5$. En el caso par, se consideran las muestras que caen en el medio, y se \n          calcula el punto medio entre ellas. Esto sigue la intuici\xf3n de la definici\xf3n de mediana, que es b\xe1sicamente una medida que separa las \n          observaciones en una mitad inferior y una mitad superior. \n          "})),t.a.createElement("p",null,t.a.createElement(k.a,{math:" La desviaci\xf3n est\xe1ndar es una medida de cantidad de dispersi\xf3n en un conjunto de valores. Un valor bajo de desviaci\xf3n est\xe1ndar muestra \n          que los valores tienden a estar cerca del promedio, mientras que un valor alto indica que los valores tienden a exparcirse en un rango m\xe1s \n          amplio de valores. Por ejemplo, consideremos dos distribuciones de valores $(50, 50)$, $(0, 100)$. Ambos tienen una media de 50, pero los \n          rangos de valores en la primera no se alejan del promedio, por lo tanto tienen 0 dispersi\xf3n, mientras que en el segundo caso, la desviaci\xf3n \n          est\xe1ndar es 50.\n\n          $$Desv.Std = \\sqrt{\\frac{1}{n} \\sum_{i=1}^{n} \\left( x_i - media \\right)^2}$$\n          "})),t.a.createElement("p",null,"A continuaci\xf3n se muestra c\xf3mo calcular las estad\xedsticas mencionadas usando python."),t.a.createElement(_.a,{language:"python",style:x.a},'import math\nimport numpy as np\nimport pandas as pd\n\n\ndef mean(array):\n    return sum(array) / len(array)\n\n\ndef std(array):\n    avg = mean(array)\n    return math.sqrt(sum((xi - avg) ** 2 for xi in array) / (len(array)))\n\n\ndef median(array):\n    sorted_array = sorted(array)\n\n    # Indexacion empieza desde 0, por eso le resto 1\n    n = len(array)\n    return 0.5 * (\n        sorted_array[math.floor((n + 1) / 2) - 1]\n        + sorted_array[math.ceil((n + 1) / 2) - 1]\n    )\n\n\nx1 = [1, 3, 3, 5, 7]\nx2 = [1, 2, 3, 4, 5, 6, 8, 9]\n\nprint("Usando las formulas y operaciones en python")\nprint(f"x1; media: {mean(x1)}, mediana: {median(x1)}, desv std: {std(x1)}")\nprint(f"x2; media: {mean(x2)}, mediana: {median(x2)}, desv std: {std(x2)}")\n\nnp_x1 = np.array(x1)\nnp_x2 = np.array(x2)\n\nprint("Usando numpy")\nprint(\n    f"x1; media: {np.mean(np_x1)}, mediana: {np.median(np_x1)}, desv std: {np.std(np_x1)}"\n)\nprint(\n    f"x2; media: {np.mean(np_x2)}, mediana: {np.median(np_x2)}, desv std: {np.std(np_x2)}"\n)\n\ndf_x1 = pd.DataFrame({"x1": x1})\ndf_x2 = pd.DataFrame({"x2": x2})\n\nprint("Usando pandas")\nprint(\n    f"x1; media: {df_x1.x1.mean()}, mediana: {df_x1.x1.median()}, desv std: {df_x1.x1.std()}"\n)\nprint(\n    f"x1; media: {df_x2.x2.mean()}, mediana: {df_x2.x2.median()}, desv std: {df_x2.x2.std()}"\n)\n'),t.a.createElement("p",null,"Como resultado entrega:"),t.a.createElement(_.a,{language:"shell",style:x.a},"Usando las formulas y operaciones en python\nx1; media: 3.8, mediana: 3.0, desv std: 2.039607805437114\nx2; media: 4.75, mediana: 4.5, desv std: 2.6339134382131846\nUsando numpy\nx1; media: 3.8, mediana: 3.0, desv std: 2.039607805437114\nx2; media: 4.75, mediana: 4.5, desv std: 2.6339134382131846\nUsando pandas\nx1; media: 3.8, mediana: 3.0, desv std: 2.280350850198276\nx2; media: 4.75, mediana: 4.5, desv std: 2.815771906346718\n"),t.a.createElement("h3",null,"Tips Desaf\xedos"),t.a.createElement("h4",null,"Introducci\xf3n al ambiente de trabajo"),t.a.createElement("p",null,"Para mantener un ambiente ordenado, les recomiendo usar un notebook de jupyter y usar una celda por cada \xedtem del desaf\xedo."),t.a.createElement("ol",null,t.a.createElement("li",null,"F\xe9 de erratas, la funci\xf3n print no retorna ",t.a.createElement("code",null,"string"),", se refiere a imprimir en pantalla."),t.a.createElement("li",null,"Piense en qu\xe9 tipo de variable es adecuada para almacenar la informaci\xf3n."),t.a.createElement("li",null,"Para imprimir las variables, pueden usar ",t.a.createElement("code",null,"f-strings"),", ",t.a.createElement("code",null,"format")," o el m\xe9todo de su preferencia."),t.a.createElement("li",null,"Utilizar los mensajes de error que arroja ",t.a.createElement("code",null,"python")," para investigar la causa y arreglar el error."),t.a.createElement("li",null,"Puede repasar dataframes usando el ",t.a.createElement(u.b,{to:"/week3#pandas"},"material complementario")," de la Semana 3.")),t.a.createElement("h4",null,"Control de flujo"),t.a.createElement("ol",null,t.a.createElement("li",null,"Pueden ver la ",t.a.createElement("a",{href:"https://numpy.org/doc/stable/reference/generated/numpy.linspace.html",rel:"noopener noreferrer",target:"_blank"},"documentaci\xf3n")," de ",t.a.createElement("code",null,"linspace"),"."),t.a.createElement("li",null,"Inconveniente el fraseo, se refiere a mostrar los n\xfameros pares del primer ",t.a.createElement("code",null,"array")),t.a.createElement("li",null,"Idealmente cuente cada una de las condiciones. Son cuatro condiciones, puede usar cuatro acumuladores"),t.a.createElement("li",null,"Recordar reglas respecto a identificadores para variables"),t.a.createElement("li",null,"Probablemente el objetivo de este ejercicio es ver si saben iterar sobre los elementos de la base de datos. Si puede hacerlo sin usar ciclos, tambi\xe9n lo considerar\xe9 bueno."),t.a.createElement("li",null,"Idem al ejercicio 5, si lo puede hacer sin ciclos tambi\xe9n se considerar\xe1 bueno. Como dice el enunciado, idealmente calculen la media y la desviaci\xf3n est\xe1ndar y guarden cada una en una variable.")))}));var L=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Probabilidades y Funciones"),t.a.createElement("p",{className:"lead"},"Esta semana es de probabilidades y funciones. En este material complementario, planeo resumir un poco el contenido del curso y hacer un par de f\xe9 de erratas a ciertos detalles. El que m\xe1s me preocupa, es el que vi en el material de la plataforma donde para una serie, llaman al m\xe9todo ",t.a.createElement("code",null,"value_counts")," de la siguiente forma: ",t.a.createElement("code",null,"value_counts('%')"),". Esto es confuso y mala pr\xe1ctica. Lo que retorna son los valores de la serie normalizados por el total de valores. Hay dos cosas relevantes, la primera es que los valores retornados ",t.a.createElement("b",null,"NO SON PORCENTAJES")," (no cumplen la definici\xf3n matem\xe1tica de porcentaje). Y la segunda, es que el primer argumento por defecto es un ",t.a.createElement("code",null,"booleano"),", y la raz\xf3n por la que dicha llamada funciona es porque hace un cast al ",t.a.createElement("code",null,"string '%'")," y este al no ser vac\xedo, queda con el valor ",t.a.createElement("code",null,"True"),". Esto es enga\xf1oso de leer, la forma correcta de llamar a una funci\xf3n con par\xe1metros con nombre, es explicitar los par\xe1metros, en este caso: ",t.a.createElement("code",null,"value_counts(normalize=True)"),". Si leen la documentaci\xf3n, el argumento ",t.a.createElement("code",null,"normalize")," por defecto es ",t.a.createElement("code",null,"False"),", y lo que hace es dividir cada conteo por el total (calculando proporciones respecto del total)."),t.a.createElement("h3",null,"Probabilidad"),t.a.createElement("p",null,"En general, se habla de probabilidad en casos en que existe incertidumbre en una situaci\xf3n. Por ejemplo, si voy al doctor y recibo un tratamiento, \xbfQu\xe9 tan probable es que con dicho tratamiento me recupere? O por ejemplo, en un casino jugando black jack, \xbfCu\xe1l es la probabilidad de que me salga black jack en la siguiente mesa?"),t.a.createElement("p",null,"Un ",t.a.createElement("b",null,"modelo probabil\xedstico")," es una descripci\xf3n matem\xe1tica de una situaci\xf3n incierta. Dicho modelo matem\xe1tico contiene los siguientes elementos:"),t.a.createElement(k.a,{math:"<ul>\n            <li>El <b>espacio muestral $\\Omega$</b>, que es el conjunto de todos los posibles <b>resultados</b> de un experimento.</li>\n            <li>La <b>ley de probabilidad</b>, que asigna a un conjunto $A$ (tambi\xe9n llamado <b>evento</b>) de posibiles resultados, un \n              n\xfamero no negativo $P(A)$ (conocido como la <b>probabilidad</b> de $A$) y que codifica nuestro conocimiento o creencia sobre \n              qu\xe9 tan posible es que $A$ ocurra.\n             </li>\n          </ul>\n          "}),t.a.createElement("p",null,"La siguiente figura ilustra los elementos de un modelo probabil\xedstico:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:8,md:8},t.a.createElement(v.a,{src:"/homepage/imgs/modelo_probabilistico.png",fluid:!0}))),t.a.createElement("p",null,t.a.createElement(k.a,{math:"\n        Todo modelo probabil\xedstico involucra un proceso subyacente, el cual se le denomina <b>experimento</b>, y que producir\xe1 exactamente \n        uno de los muchos posibles <b>resultados</b>. El conjunto de todos los posibles resultados se llama <b>espacio muestral</b> del experimento, y \n        se denota $\\Omega$. Un subconjunto del espacio muestral, es decir, una colecci\xf3n de posibles resultados, se conoce como <b>evento</b>."})),t.a.createElement("p",null,t.a.createElement(k.a,{math:'\n        La <b>ley de probabilidad</b> especifica la "posibilidad" de cualquier resultado, o cualquier conjunto de posibles resultados (evento). Esta \n        ley asigna a cada evento $A$, un n\xfamero $P(A)$, llamado la <b>probabilidad</b> de $A$, la cual satisface los siguientes axiomas:\n        \n        <ol>\n          <li><b>(No negatividad)</b> $P(A) \\geq 0$, para todo evento $A$</li>\n          <li><b>(Aditividad)</b> Si $A$ y $B$ son dos eventos disjuntos, entonces la probabilidad de su union satisface:\n\n            $$P(A \\cup B) = P(A) + P(B)$$\n\n          Esto se puede generalizar a la union de m\xe1s eventos.\n          </li>\n          <li><b>(Normalizaci\xf3n)</b> La probabilidad del espacio muestral $\\Omega$ es igual a 1, es decir $P(\\Omega) = 1$</li>\n        </ol>\n        '})),t.a.createElement("p",null,t.a.createElement(k.a,{math:"\n        Consideremos el experimento de lanzar dos dados de 4 caras. Asumimos que los dados no est\xe1n cargados, y con este supuesto queremos decir \n      que cada uno de los 16 posibles resultados ($\\left\\{ (i, j) \\| i, j = 1, 2, 3, 4\\right\\}$), cada uno tiene la misma probabilidad de \n      ocurrir $\\frac{1}{16}$. Algunos ejemplos:\n\n        <ul>\n          <li>$P(\\{ \\text{la suma de los dados es par}\\}) = \\frac{8}{16} = \\frac{1}{2}$</li>\n          <li>$P(\\{ \\text{la suma de los dados es impar}\\}) = \\frac{8}{16} = \\frac{1}{2}$</li>\n          <li>$P(\\{ \\text{El primer dado es igual al segundo}\\}) = \\frac{4}{16} = \\frac{1}{4}$</li>\n          <li>$P(\\{ \\text{El primer dado es mayor que el segundo}\\}) = \\frac{6}{16} = \\frac{3}{8}$</li>\n          <li>$P(\\{ \\text{Al menos un dado da 4}\\}) = \\frac{7}{16}$</li>\n        </ul>\n\n        El espacio muestral y algunos ejemplos de eventos se muestran en la siguiente figura:\n        "})),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:8,md:8},t.a.createElement(v.a,{src:"/homepage/imgs/ejemplo_espacio.png",fluid:!0}))),t.a.createElement("h3",null,"Probabilidad Condicional"),t.a.createElement("p",null,"La probabilidad coondicional nos entrega una manera de razonar acerca los resultados de un experimento, bas\xe1ndonos en ",t.a.createElement("b",null,"informaci\xf3n parcial"),". Algunos ejemplos de situaciones:"),t.a.createElement("ul",null,t.a.createElement("li",null,"En un experimento de lanzamiento consecutivo de dos dados, nos dicen que la suma es 9. \xbfQu\xe9 tan posible es que el primer dado haya sido un 6?"),t.a.createElement("li",null,"\xbfQu\xe9 tan probable es que una persona tiene cierta enfermedad dado un test m\xe9dico que sali\xf3 negativo?"),t.a.createElement("li",null,"Un cliente est\xe1 usando un la versi\xf3n gratuita de servicio con cierta frecuencia. \xbfQu\xe9 tan probable es que acepte una oferta de suscripci\xf3n premium?")),t.a.createElement("p",null,t.a.createElement(k.a,{math:"\n          Siendo m\xe1s precisos, dado un experimento, su espacio muestral correspondiente y su ley de probabilidad, supongamos que el resultado se encuentra \n          dentro de algun evento $B$ dado. Deseamos cuantificar la posibilidad que el resultado pertenece tambi\xe9n a otro evento $A$. Por lo tanto, construimos \n          una nueva ley de probabilidad que considera el conocimiento disponible: Una ley de probabilidad que para cualquier evento $A$, especifica la \n          <b>probabilidad condicional de $A$ dado $B$</b>, y se denota como $P\\left(A\\mid B\\right)$.\n          "})),t.a.createElement("p",null,t.a.createElement(k.a,{math:"\n          Por otro lado, nos gustar\xeda que las probabilidades condicionales $P\\left(A\\mid B\\right)$ de diferentes eventos $A$, constituyeran una \n          ley de probabilidad que satisfaga todos los axiomas de probabilidad. Este tipo de probabilidades tambi\xe9n deben ser consistentes con la intuici\xf3n \n          en casos especiales, por ejemplo, cuando todos los posibles resultados del experimento son igualmente posibles. Por ejemplo, supongamos que los \n          6 resultados del lanzamiento de un dado de 6 caras son igualmente probables. Si nos dijeran que el resultado fue par, nos quedan s\xf3lo 3 posibles \n          resultados, 2, 4, y 6. Estos resultados en principio ten\xedan la misma probabilidad, por lo tanto ahora que sabemos que el n\xfamero fue par, debiesen \n          ser igualmente probables. As\xed, es razonable pensar:\n\n          $$P\\left(\\text{el resultado es 6}\\mid \\text{el resultado es par}\\right) = \\frac{1}{3}$$\n\n          Generalizando esta intuici\xf3n, la definici\xf3n de probabilidad condicional es:\n\n          $$P\\left(A\\mid B\\right) = \\frac{P(A \\cap B)}{P(B)}$$\n\n          donde asumimos que $P(B) > 0$; la probabilidad condicional es indefinida si el evento condicionante tiene probabilidad cero. \n          "})),t.a.createElement("p",null,t.a.createElement(k.a,{math:"\n          Dado que $P(A) \\geq 0$ y $P(B) > 0$, esta ley de probabilidad satisface el axioma de no negatividad. El axioma de normalizaci\xf3n tambi\xe9n \n          se satisface, pues:\n\n          $$P\\left(\\Omega \\mid B\\right) = \\frac{P\\left( \\Omega \\cap B\\right)}{P(B)} = \\frac{P(B)}{P(B)} = 1$$\n\n          Y el axioma de aditivdad tambi\xe9n se satisface, para cualquier par de eventos disjuntos $A_1$ y $A_2$:\n\n          $$P\\left(A_1 \\cup A_2 \\mid B\\right) = \\frac{P\\left(\\left(A_1 \\cup A_2 \\right) \\cap B\\right)}{P(B)}$$\n          \n          $$ = \\frac{P\\left(\\left(A_1 \\cap B \\right) \\cup \\left(A_2\\cap B\\right)\\right)}{P(B)}$$\n\n          $$ = \\frac{P\\left(A_1 \\cap B \\right) + \\left(A_2\\cap B\\right)}{P(B)}$$\n\n          $$ = \\frac{P\\left(A_1 \\cap B \\right)}{P(B)} + \\frac{\\left(A_2\\cap B\\right)}{P(B)}$$\n\n          $$ = P\\left(A_1 \\mid B\\right) + P\\left(A_2 \\mid B\\right)$$\n          "})),t.a.createElement("p",null,t.a.createElement(k.a,{math:"\n          Consideremos nuevamente el experimento de dos lanzamientos de dados de 4 caras, donde los 16 resultados posibles tienen la misma probabilidad.\n          Supongamos que queremos determinar la probabilidad $P\\left(A \\mid B\\right)$ donde:\n\n          $$A = \\left\\{max(X, Y) = m\\right\\}, \\quad B = \\left\\{min(X, Y) = 2\\right\\},$$\n\n          y $m$ puede tomar cualquiera de los valores 1, 2, 3, 4.\n          "})),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:8,md:8},t.a.createElement(v.a,{src:"/homepage/imgs/ejemplo_condicional.png",fluid:!0}))),t.a.createElement("p",null,t.a.createElement(k.a,{math:"\n          En la imagen se muestra el espacio muestral de un experimento que involucra dos lanzamientos de dados de 4 caras. El evento \n          condicionante $B = \\left\\{min(X, Y) = 2\\right\\}$ es el conjunto sombreado en la figura. El \n          evento $A = \\left\\{max(X, Y) = m\\right\\}$ comparte con $B$ dos elementos si $m = 3$ o $m = 4$, un elemento si $m = 2$, y ning\xfan \n          elemento si $m = 1$. Por lo tanto tenemos:\n\n          $$\n          P (\\left\\{max(X, Y) = m\\right\\} \\mid B)=\n            \\left\\{\n              \\begin{array}{ll}\n                2/5  & \\mbox{si } m = 3 \\text{ o } m = 4 \\\\\n                1/5 & \\mbox{si } m = 2 \\\\\n                0 & \\mbox{si } m = 1\n              \\end{array}\n            \\right.$$\n          "})),t.a.createElement("h3",null,"Distintos enfoques a la estad\xedstica"),t.a.createElement("p",null,"En el campo de la estad\xedstica hay dos prominentes escuelas de pensamiento, con visiones opuestas: la ",t.a.createElement("b",null,"Bayesiana")," y la ",t.a.createElement("b",null,"cl\xe1sica")," ( tambi\xe9n llamada ",t.a.createElement("b",null,"frecuentista"),"). Su diferencia fundamental est\xe1 relacionada con la naturaleza de modelos desconocidos o variables. En una visi\xf3n Bayesiana, estos modelos se tratan como variables aleatorias (tema que veremos m\xe1s adelante) con distribuciones conocidas. En la visi\xf3n cl\xe1sica, estos modelos/variables se tratan como cantidades determin\xedsticas que se desconocen. En fin, es un tema pr\xe1cticamente filos\xf3fico, pero en t\xe9rminos pr\xe1cticos, los modelos Bayesianos sol\xedan ser intratables computacionalmente, ahora con los avances en computaci\xf3n y en semiconductores (procesadores), muchas investigaciones recientes se enfocan en hacer m\xe9todos Bayesianos que puedan ser usados en la pr\xe1ctica. Pueden leer este ",t.a.createElement("a",{href:"http://jakevdp.github.io/blog/2014/03/11/frequentism-and-bayesianism-a-practical-intro/",target:"_blank",rel:"noopener noreferrer"},"interesante art\xedculo"),"."),t.a.createElement("h3",null,"Tips para desaf\xedo Jueves"),t.a.createElement("ol",null,t.a.createElement("li",null,"Pueden usar la informaci\xf3n de la primera semana de \xe9ste m\xf3dulo. Para docstrings ver ",t.a.createElement("a",{href:"https://dpalmasan.github.io/homepage/#/python_misc",target:"_blank",rel:"noopener noreferrer"},"Intro Python Misc.")),t.a.createElement("li",null,"En este caso, recomiendo ver este fragmento de c\xf3digo modificado (f\xe9 de erratas al que sale en el enunciado):",t.a.createElement(_.a,{language:"python",style:x.a},'continentes = df["continent"].unique()\n\n# Es mejor pre-asignar memoria, podemos usar numpy\npromedios = np.zeros(len(continentes))\ndesviaciones = np.zeros(len(continentes))\n\n# Es mejor iterar por nombre de continente, ya que \n# no tiene sentido usar memoria gigantezca para almacenar\n# una lista de DataFrames e iterar sobre ellos\nfor i, continente in enumerate(continentes):\n    promedios[i] = df[df["continent"] == continente]["goles_favor"].mean()\n    desviaciones[i] = df[df["continent"] == continente]["goles_favor"].std()\n    \n    \nresult = pd.DataFrame({\n    "continente": continentes,\n    "promedio": promedios,\n    "desv": desviaciones\n})\nresult\n'),"Para la funci\xf3n a implementar, pueden tomar como base la siguiente definici\xf3n (modifiqu\xe9 la firma):",t.a.createElement(_.a,{language:"python",style:x.a},'def analizar(df, grupo, variable):\n  """Analiza un dataframe y retorna promedios y desviaciones.\n\n  :param df: DataFrame a analizar\n  :type df: pd.DataFrame\n  :param grupo: Categor\xeda para agrupar (ej. continente)\n  :type grupo: string\n  :param variable: Columna a analizar\n  :type variable: string\n  """\n  # Remover este pass e implementar funci\xf3n\n  pass\n'),"Habr\xe1 una bonificaci\xf3n de 1 punto si leen la documentaci\xf3n de ",t.a.createElement("code",null,"groupby")," de ",t.a.createElement("code",null,"pandas")," e implementan el ejercicio de esa forma (",t.a.createElement("a",{href:"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html",target:"_blank",rel:"noopener noreferrer"},"ver documentaci\xf3n"),")"),t.a.createElement("li",null,"Para verificar su funci\xf3n, pruebe aplicandola un n\xfamero grande de veces (ej. ",t.a.createElement("code",null,"1000"),"). Como son dos elementos y la funci\xf3n ",t.a.createElement("code",null,"np.random.choice")," tiene garant\xedas de ser unfiromemente distribu\xedda, la probabilidad debiese ser la misma para ambos elementos en el largo plazo (gran cantidad de experimentos), es decir 0.5."),t.a.createElement("li",null,"Para la semilla usar ",t.a.createElement("code",null,"np.random.seed(semilla)")," donde ",t.a.createElement("code",null,"semilla")," tiene el valor que quieren utilizar.")))})),D=n(20),M=function(e){Object(m.a)(n,e);var a=Object(c.a)(n);function n(e){var l;return Object(s.a)(this,n),(l=a.call(this,e)).state={toggle:!1},l.setToggle=l.setToggle.bind(Object(D.a)(l)),l}return Object(i.a)(n,[{key:"setToggle",value:function(){this.setState({toggle:!this.state.toggle})}},{key:"render",value:function(){var e=this.state.toggle;return t.a.createElement(t.a.Fragment,null,t.a.createElement(A.a,{variant:"primary",onClick:this.setToggle},e?"Ocultar soluci\xf3n":"Mostrar Soluci\xf3n"),e&&this.props.sol())}}]),n}(t.a.Component);function O(){return t.a.createElement("div",null,t.a.createElement(_.a,{language:"python",style:x.a},'"""Soluci\xf3n Ejercicio 1.\n\nDesaf\xedo Latam: Introducci\xf3n a Python 2020\n"""\nimport sys\n\n\ndeposito = float(sys.argv[1])\n\n# 4% de inter\xe9s anual\nintereses = 1.04\n\nbalance = intereses * deposito\nprint(f"El balance al a\xf1o 1 es: {round(balance, 2)}")\n\nbalance = intereses * balance\nprint(f"El balance al a\xf1o 2 es: {round(balance, 2)}")\n\nbalance = intereses * balance\nprint(f"El balance al a\xf1o 3 es: {round(balance, 2)}")\n'),t.a.createElement("p",null,"Por ejemplo, ",t.a.createElement("code",null,"python ejercicio1.py 1000")),t.a.createElement(_.a,{language:"shell",style:x.a},"> python ejemplo_argv.py 1000\nEl balance al a\xf1o 1 es: 1040.0\nEl balance al a\xf1o 2 es: 1081.6\nEl balance al a\xf1o 3 es: 1124.86"))}function U(){return t.a.createElement("div",null,t.a.createElement(_.a,{language:"python",style:x.a},'"""Soluci\xf3n Ejercicio 3.\n\nDesaf\xedo Latam: Introducci\xf3n a Python 2020\n"""\nimport sys\n\n\n# Se asumir\xe1 que peso y altura son ingresados en kg y m respectivamente\npeso = float(sys.argv[1])\naltura = float(sys.argv[2])\n\nimc = round(peso / altura ** 2, 2)\n\nprint(f"Su IMC es: {imc}")\n'))}function B(){return t.a.createElement("div",null,t.a.createElement(_.a,{language:"python",style:x.a},'"""Soluci\xf3n Ejercicio 5.\n\nDesaf\xedo Latam: Introducci\xf3n a Python 2020\n"""\nimport sys\n\n\nn = int(sys.argv[1])\n\nunidades = n % 10\ndecenas = (n // 10) % 10\ncentenas = (n // 100) % 10\nmillares = (n // 1000) % 10\nsuma = unidades + decenas + centenas + millares\n\nprint(f"Su n\xfamero {n}: {millares} + {centenas} + {decenas} + {unidades}")\nprint(f"La suma es {suma}")\n'))}function R(){return t.a.createElement("div",null,t.a.createElement(_.a,{language:"python",style:x.a},'"""Soluci\xf3n Ejercicio 7.\n\nDesaf\xedo Latam: Introducci\xf3n a Python 2020\n"""\nimport sys\n\n\nmes = sys.argv[1].lower()\n\ntiene_30_dias = (\n    mes == "abril" or mes == "junio" or mes == "septiembre" or mes == "noviembre"\n)\n\ntiene_31_dias = (\n    mes == "enero"\n    or mes == "marzo"\n    or mes == "mayo"\n    or mes == "julio"\n    or mes == "agosto"\n    or mes == "octubre"\n    or mes == "diciembre"\n)\n\nif tiene_30_dias:\n    print(f"{mes.capitalize()} tiene 30 dias")\nelif tiene_31_dias:\n    print(f"{mes.capitalize()} tiene 31 dias")\nelif mes == "febrero":\n    print(f"{mes.capitalize()} tiene 28 o 29 dias")\nelse:\n    print(f"{mes.capitalize()} no es un mes v\xe1lido")\n'))}function F(){return t.a.createElement("div",null,t.a.createElement(_.a,{language:"python",style:x.a},'"""Soluci\xf3n Ejercicio 9.\n\nDesaf\xedo Latam: Introducci\xf3n a Python 2020\n"""\nimport sys\n\n\ncasilla = sys.argv[1]\n\n# Filas empiezan desde 1 siguiendo la numeraci\xf3n del cuadro\nfila = int(casilla[1])\n\n# Columnas empezaran desde 0, pues le restamos el valor del caracter \'a\'\n# que es 97 (tambi\xe9n se podr\xeda implementar con varios ifs)\ncolumna = ord(casilla[0]) - ord("a")\n\nfila_par = fila % 2 == 0\ncolumna_par = columna % 2 == 0\n\nif not fila_par:\n    if columna_par:\n        color = "negro"\n    else:\n        color = "blanco"\nelse:\n    if columna_par:\n        color = "blanco"\n    else:\n        color = "negro"\n\nprint(f"La casilla {casilla} es de color {color}")\n'),t.a.createElement("p",null,"Ejemplo de usos:"),t.a.createElement(_.a,{language:"shell",style:x.a},">python ejemplo_argv.py h8\nLa casilla h8 es de color negro\n>python ejemplo_argv.py c7\nLa casilla c7 es de color negro\n>python ejemplo_argv.py c6\nLa casilla c6 es de color blanco\n>python ejemplo_argv.py b1\nLa casilla b1 es de color blanco\n>python ejemplo_argv.py b2\nLa casilla b2 es de color negro\n>python ejemplo_argv.py b3\nLa casilla b3 es de color blanco\n"))}var H=E((function(){return t.a.createElement("div",{className:"container"},t.a.createElement("h1",{className:"mt-5"},"Introducci\xf3n a Python: Ejercicios Repaso"),t.a.createElement("p",{className:"lead"},'Con la finalidad de que todos est\xe9n entendiendo la materia y que nadie se "pierda" en el camino, se deja un conjunto de ejercicios de repaso. La idea es que "suelten la mano" y vayan acostumbr\xe1ndose a escribir c\xf3digo y a las caracter\xedsticas del lenguaje de programaci\xf3n ',t.a.createElement("code",null,"python"),"."),t.a.createElement("h2",null,"Ejercicios"),t.a.createElement("h3",null,"Ejercicio 1"),t.a.createElement("p",null,"Supongamos que has abierto una nueva cuenta de ahorro que te da una ganancia de 4 % de inter\xe9s anual. Los intereses ganados se pagan al final de cada a\xf1o y se agregan al balance de la cuenta de ahorro. Escribe un progama que lea la cantidad de dinero depositada en la cuenta inicialmente. El programa debe calcular y mostrar el balance de la cuenta de ahorros luego de 1, 2 y 3 a\xf1os. Mostrar cada cantidad redondeada al segundo decimal (puede buscar la funci\xf3n ",t.a.createElement("code",null,"round"),")."),t.a.createElement(M,{sol:O}),t.a.createElement("h3",null,"Ejercicio 2"),t.a.createElement("p",null,"La ley de los gases ideales es una aproximaci\xf3n matem\xe1tica del comportamiento de los gases cuando la presi\xf3n, volumen y temperatura cambian. Normalmente se escribe como:"),t.a.createElement(k.a,{math:"$$PV = nRT$$"}),t.a.createElement("p",null,t.a.createElement(k.a,{math:"Donde $P$ es la presi\xf3n en Pascales, $V$ es el volumen en litros, $n$  es\n        la cantidad de sustancia en moles, $R$ es la constante de los gases ideales, igual\n        a $8.314 \\frac{J}{molK}$, y $T$ es la temperatura en Kelvin."})),t.a.createElement("p",null,"Escriba un programa que calcule la cantidad de gas en moles dadas la presi\xf3n, el volumen y la temperatura."),t.a.createElement("h3",null,"Ejercicio 3"),t.a.createElement("p",null,"Escriba un programa calcule el \xedndice de masa corporal (IMC) de una persona, este puede ser calculado como:"),t.a.createElement(k.a,{math:"$$IMC = \\frac{Peso}{altura^2}$$"}),t.a.createElement("p",null,"El programa debe recibir el peso (kg) y la estatura (m) de la persona."),t.a.createElement(M,{sol:U}),t.a.createElement("h3",null,"Ejercicio 4"),t.a.createElement("p",null,"Escriba un programa que dada una temperatura en grados Celsius, muestre la temperatura en grandos Farenheit y en Kelvin. Las f\xf3rmulas de transformaci\xf3n las puede encontrar en internet. Para probar su programa, puede tomar como ejemplo, que 25 grados celsius son aproximadamente 77 Farenheit y 298 K. "),t.a.createElement("h3",null,"Ejercicio 5"),t.a.createElement("p",null,"Escriba un programa que lea un entero de 4 d\xedgitos y muestre la suma de los d\xedgitos del n\xfamero. Por ejemplo, si el usuario ingresa 3141, entonces el programa debiese mostrar ",t.a.createElement("code",null,"3 + 1 + 4 + 1 = 9"),". Por ahora asuma que siempre ser\xe1n 4 d\xedgitos. Queda como pregunta \xbfC\xf3mo podr\xeda generalizar para cualquier cantidad de d\xedgitos?"),t.a.createElement(M,{sol:B}),t.a.createElement("h3",null,"Ejercicio 6"),t.a.createElement("p",null,"Escriba un programa que lea un entero. El programa deber\xe1 mostrar si el n\xfamero ingresado es par o impar."),t.a.createElement("h3",null,"Ejercicio 7"),t.a.createElement("p",null,"Escriba un programa que dado el nombre de un mes, imprima en pantalla la cantidad de d\xedas de dicho mes. En caso de que el mes sea febrero, su programa deber\xe1 imprimir ",t.a.createElement("code",null,"28 o 29 d\xedas"),"."),t.a.createElement(M,{sol:R}),t.a.createElement("h3",null,"Ejercicio 8"),t.a.createElement("p",null,"Los tri\xe1ngulos se clasifican en base al largo de sus lados como equil\xe1tero, is\xf3sceles o escaleno. En un tri\xe1ngulo equil\xe1tero los 3 lados tienen la misma longitud. En un tri\xe1ngulo is\xf3sceles, 2 lados tienen la misma longitud y el otro lado tiene una longitud diferente. En un tri\xe1ngulo escaleno todos los lados son de distinta longitud. Escriba un programa que dados los largos de los lados de un tri\xe1ngulo, diga si es equil\xe1tero, is\xf3sceles o escaleno. Su programa debe tambi\xe9n chequear si el tri\xe1ngulo es v\xe1lido (puede aplicar la desigualdad tri\xe1ngular para chequear esto)."),t.a.createElement("h3",null,"Ejercicio 9"),t.a.createElement("p",null,"Las posiciones en un tablero de ajedrez se identifican con una letra y un n\xfamero. La letra representa la columna, y el n\xfamero la fila tal y como se muestra en la siguiente figura:"),t.a.createElement(q.a,{className:"justify-content-md-center"},t.a.createElement(j.a,{xs:12,sm:12,md:12},t.a.createElement(v.a,{src:"/homepage/imgs/tablero.png",fluid:!0}))),t.a.createElement("p",null,"Escriba un programa que lea la posici\xf3n de una casilla de un tablero de ajedrez y determine si es blanca o negra. Para simplificar el problema, se asumir\xe1 que el usuario ingresar\xe1 una casilla v\xe1lida, por lo que, no es necesario hacer chequear si la entrada es correcta o no."),t.a.createElement(M,{sol:F}),t.a.createElement("h3",null,"Ejercicio 10"),t.a.createElement("p",null,"La ruleta es un juego t\xedpico de casino. Consiste en una rueda de 38 espacios. De estos espacios, 18 son negros, 18 rojos y dos son verdes. Los espacios verdes estan etiquetados como 0 y 00. Los espacios rojos tienen los siguentes n\xfameros: 1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34 y 36. El resto de los enteros entre 1 y 36 se usan para los espacios negros."),t.a.createElement("p",null,"Se pueden realizar diferentes apuestas. Para prop\xf3sitos del ejercicios, consideraremos el siguiente subconjunto de apuestas:"),t.a.createElement("ul",null,t.a.createElement("li",null,"N\xfamero (1 a 36, 0 o 00)"),t.a.createElement("li",null,"Rojo vs Negro"),t.a.createElement("li",null,"Par vs Impar (en este caso 0 y 00 no produce ganancia si se apost\xf3 par)"),t.a.createElement("li",null,"1 a 18 vs 19 a 36")),t.a.createElement("p",null,"Escriba un programa que simule el giro de una ruleta. Muestre el espacio que fue escoglido y todas las apuestas ganadoras. Por ejemplo, si 13 es elegido, su programa debe mostrar:"),t.a.createElement(_.a,{language:"shell",style:x.a},"El giro de la ruleta termin\xf3 en 13\nPagar al 13\nPagar a color negro\nPagar a apuesta impar\nPagar a apuestas 1 a 18\n"),t.a.createElement("p",null,"Si la simulaci\xf3n termina en 0 o 00, el programa debe mostrar ",t.a.createElement("code",null,"Pagar a 0")," o ",t.a.createElement("code",null,"Pagar a 00"),", sin mostrar nada m\xe1s. Ya que otras apuestas no ganan en este caso."))})),W=function(e){Object(m.a)(n,e);var a=Object(c.a)(n);function n(){return Object(s.a)(this,n),a.apply(this,arguments)}return Object(i.a)(n,[{key:"componentDidMount",value:function(){window.location.hash=window.decodeURIComponent(window.location.hash);var e=function(){var e=window.location.hash.split("#");if(e.length>2){var a=e.slice(-1)[0];document.querySelector("#".concat(a)).scrollIntoView()}};e(),window.onhashchange=e}},{key:"render",value:function(){return t.a.createElement(u.a,{basename:"/"},t.a.createElement(d.c,null,t.a.createElement(d.a,{path:"/about"},t.a.createElement(y,null)),t.a.createElement(d.a,{path:"/python_misc"},t.a.createElement(w,null)),t.a.createElement(d.a,{path:"/setup"},t.a.createElement(P,null)),t.a.createElement(d.a,{path:"/week1"},t.a.createElement(C,null)),t.a.createElement(d.a,{path:"/week2"},t.a.createElement(z,null)),t.a.createElement(d.a,{path:"/week3"},t.a.createElement(I,null)),t.a.createElement(d.a,{path:"/week4"},t.a.createElement(N,null)),t.a.createElement(d.a,{path:"/week5"},t.a.createElement(T,null)),t.a.createElement(d.a,{path:"/week6"},t.a.createElement(L,null)),t.a.createElement(d.a,{path:"/week1_repaso"},t.a.createElement(H,null)),t.a.createElement(d.a,{path:"/"},t.a.createElement(g,null))))}}]),n}(t.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(247);r.a.render(t.a.createElement(t.a.StrictMode,null,t.a.createElement(W,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},41:function(e,a,n){e.exports=n(248)},46:function(e,a,n){},47:function(e,a,n){}},[[41,1,2]]]);
//# sourceMappingURL=main.83f8fe84.chunk.js.map